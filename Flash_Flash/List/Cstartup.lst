###############################################################################
#                                                                             #
#     IAR Systems ARM Assembler V4.40A/W32 12/Oct/2006  15:22:59              #
#     Copyright 1999-2006 IAR Systems. All rights reserved.                   #
#                                                                             #
#           Source file   =  C:\SPA_iar\Compil\SrcIAR\Cstartup.s79            #
#           List file     =  C:\SPA_iar\Compil\Flash_Flash\List\Cstartup.lst  #
#           Object file   =  C:\SPA_iar\Compil\Flash_Flash\Obj\Cstartup.r79   #
#           Command line  =  C:\SPA_iar\Compil\SrcIAR\Cstartup.s79            #
#                            -OC:\SPA_iar\Compil\Flash_Flash\Obj\ -s+ -M<>    #
#                            -w+ -r -LC:\SPA_iar\Compil\Flash_Flash\List\ -i  #
#                            -t8 --cpu ARM7TDMI --fpu None                    #
#                            -IC:\Program Files\IAR Systems\Embedded Workbench 4.0 Evaluation\ARM\INC\ #
#                                                                             #
###############################################################################

    1    00000000              ;-----------------------------------------------
                               -------------------------------
    2    00000000              ;-         ATMEL Microcontroller Software
                                Support  -  ROUSSET  -
    3    00000000              ;-----------------------------------------------
                               -------------------------------
    4    00000000              ; The software is delivered "AS IS" without
                                warranty or condition of any
    5    00000000              ; kind, either express, implied or statutory.
                                This includes without
    6    00000000              ; limitation any warranty or condition with
                                respect to merchantability or
    7    00000000              ; fitness for any particular purpose, or against
                                the infringements of
    8    00000000              ; intellectual property rights of others.
    9    00000000              ;-----------------------------------------------
                               ------------------------------
   10    00000000              ;- File source          : Cstartup.s79
   11    00000000              ;- Object               : Generic CStartup for
                                IAR No Use REMAP
   12    00000000              ;- Compilation flag     : None
   13    00000000              ;-
   14    00000000              ;- 1.0 15/Jun/04 JPP    : Creation
   15    00000000              ;- 1.1 01/Apr/05 JPP    : save SPSR
   16    00000000              ;-----------------------------------------------
                               -------------------------------
   17    00000000              
   18    00000000              #include "..\AT91SAM7S256_inc.h"
    1    00000000              //  --------------------------------------------
                               --------------------------------
    2    00000000              //          ATMEL Microcontroller Software
                                Support  -  ROUSSET  -
    3    00000000              //  --------------------------------------------
                               --------------------------------
    4    00000000              //  DISCLAIMER:  THIS SOFTWARE IS PROVIDED BY
                                ATMEL "AS IS" AND ANY EXPRESS OR
    5    00000000              //  IMPLIED WARRANTIES, INCLUDING, BUT NOT
                                LIMITED TO, THE IMPLIED WARRANTIES OF
    6    00000000              //  MERCHANTABILITY, FITNESS FOR A PARTICULAR
                                PURPOSE AND NON-INFRINGEMENT ARE
    7    00000000              //  DISCLAIMED. IN NO EVENT SHALL ATMEL BE
                                LIABLE FOR ANY DIRECT, INDIRECT,
    8    00000000              //  INCIDENTAL, SPECIAL, EXEMPLARY, OR
                                CONSEQUENTIAL DAMAGES (INCLUDING, BUT
                                NOT
    9    00000000              //  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
                                OR SERVICES; LOSS OF USE, DATA,
   10    00000000              //  OR PROFITS; OR BUSINESS INTERRUPTION)
                                HOWEVER CAUSED AND ON ANY THEORY OF
   11    00000000              //  LIABILITY, WHETHER IN CONTRACT, STRICT
                                LIABILITY, OR TORT (INCLUDING
   12    00000000              //  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
                                OUT OF THE USE OF THIS SOFTWARE,
   13    00000000              //  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
                                DAMAGE.
   14    00000000              //  --------------------------------------------
                               --------------------------------
   15    00000000              // File Name           : AT91SAM7S256.h
   16    00000000              // Object              : AT91SAM7S256 definition
                               s
   17    00000000              // Generated           : AT91 SW Application
                                Group  08/30/2005 (15:53:08)
   18    00000000              // 
   19    00000000              // CVS Reference       : /AT91SAM7S256.pl/1.11/T
                               ue Aug 30 12:00:29 2005//
   20    00000000              // CVS Reference       : /SYS_SAM7S.pl/1.2/Tue
                                Feb  1 17:01:52 2005//
   21    00000000              // CVS Reference       : /MC_SAM7S.pl/1.3/Fri
                                May 20 14:12:30 2005//
   22    00000000              // CVS Reference       : /PMC_SAM7S_USB.pl/1.4/T
                               ue Feb  8 13:58:22 2005//
   23    00000000              // CVS Reference       : /RSTC_SAM7S.pl/1.2/Wed
                                Jul 13 14:57:40 2005//
   24    00000000              // CVS Reference       : /UDP_SAM7S.pl/1.1/Tue
                                May 10 11:34:52 2005//
   25    00000000              // CVS Reference       : /PWM_SAM7S.pl/1.1/Tue
                                May 10 11:53:07 2005//
   26    00000000              // CVS Reference       : /RTTC_6081A.pl/1.2/Tue
                                Nov  9 14:43:58 2004//
   27    00000000              // CVS Reference       : /PITC_6079A.pl/1.2/Tue
                                Nov  9 14:43:56 2004//
   28    00000000              // CVS Reference       : /WDTC_6080A.pl/1.3/Tue
                                Nov  9 14:44:00 2004//
   29    00000000              // CVS Reference       : /VREG_6085B.pl/1.1/Tue
                                Feb  1 16:05:48 2005//
   30    00000000              // CVS Reference       : /AIC_6075B.pl/1.3/Fri
                                May 20 14:01:30 2005//
   31    00000000              // CVS Reference       : /PIO_6057A.pl/1.2/Thu
                                Feb  3 10:18:28 2005//
   32    00000000              // CVS Reference       : /DBGU_6059D.pl/1.1/Mon
                                Jan 31 13:15:32 2005//
   33    00000000              // CVS Reference       : /US_6089C.pl/1.1/Mon
                                Jul 12 18:23:26 2004//
   34    00000000              // CVS Reference       : /SPI_6088D.pl/1.3/Fri
                                May 20 14:08:59 2005//
   35    00000000              // CVS Reference       : /SSC_6078A.pl/1.1/Tue
                                Jul 13 07:45:40 2004//
   36    00000000              // CVS Reference       : /TC_6082A.pl/1.7/Fri
                                Mar 11 12:52:17 2005//
   37    00000000              // CVS Reference       : /TWI_6061A.pl/1.1/Tue
                                Jul 13 07:38:06 2004//
   38    00000000              // CVS Reference       : /PDC_6074C.pl/1.2/Thu
                                Feb  3 08:48:54 2005//
   39    00000000              // CVS Reference       : /ADC_6051C.pl/1.1/Fri
                                Oct 17 09:12:38 2003//
   40    00000000              //  --------------------------------------------
                               --------------------------------
   41    00000000              
   42    00000000              // Hardware register definition
   43    00000000              
   44    00000000              // *********************************************
                               ********************************
   45    00000000              //              SOFTWARE API DEFINITION  FOR
                                System Peripherals
   46    00000000              // *********************************************
                               ********************************
   47    00000000              
   48    00000000              // *********************************************
                               ********************************
   49    00000000              //              SOFTWARE API DEFINITION  FOR
                                Advanced Interrupt Controller
   50    00000000              // *********************************************
                               ********************************
   51    00000000              // *** Register offset in AT91S_AIC structure
                                ***
   52    00000000              #define AIC_SMR         ( 0) // Source Mode
                                Register
   53    00000000              #define AIC_SVR         (128) // Source Vector
                                Register
   54    00000000              #define AIC_IVR         (256) // IRQ Vector
                                Register
   55    00000000              #define AIC_FVR         (260) // FIQ Vector
                                Register
   56    00000000              #define AIC_ISR         (264) // Interrupt
                                Status Register
   57    00000000              #define AIC_IPR         (268) // Interrupt
                                Pending Register
   58    00000000              #define AIC_IMR         (272) // Interrupt Mask
                                Register
   59    00000000              #define AIC_CISR        (276) // Core Interrupt
                                Status Register
   60    00000000              #define AIC_IECR        (288) // Interrupt
                                Enable Command Register
   61    00000000              #define AIC_IDCR        (292) // Interrupt
                                Disable Command Register
   62    00000000              #define AIC_ICCR        (296) // Interrupt Clear
                                Command Register
   63    00000000              #define AIC_ISCR        (300) // Interrupt Set
                                Command Register
   64    00000000              #define AIC_EOICR       (304) // End of
                                Interrupt Command Register
   65    00000000              #define AIC_SPU         (308) // Spurious Vector
                                Register
   66    00000000              #define AIC_DCR         (312) // Debug Control
                                Register (Protect)
   67    00000000              #define AIC_FFER        (320) // Fast Forcing
                                Enable Register
   68    00000000              #define AIC_FFDR        (324) // Fast Forcing
                                Disable Register
   69    00000000              #define AIC_FFSR        (328) // Fast Forcing
                                Status Register
   70    00000000              // -------- AIC_SMR : (AIC Offset: 0x0) Control
                                Register -------- 
   71    00000000              #define AT91C_AIC_PRIOR           (0x7 <<  0) //
                                (AIC) Priority Level
   72    00000000              #define         AT91C_AIC_PRIOR_LOWEST          
                                    (0x0) // (AIC) Lowest priority level
   73    00000000              #define         AT91C_AIC_PRIOR_HIGHEST         
                                    (0x7) // (AIC) Highest priority level
   74    00000000              #define AT91C_AIC_SRCTYPE         (0x3 <<  5) //
                                (AIC) Interrupt Source Type
   75    00000000              #define         AT91C_AIC_SRCTYPE_INT_HIGH_LEVEL
                                      (0x0 <<  5) // (AIC) Internal Sources
                                Code Label High-level Sensitive
   76    00000000              #define         AT91C_AIC_SRCTYPE_EXT_LOW_LEVEL 
                                      (0x0 <<  5) // (AIC) External Sources
                                Code Label Low-level Sensitive
   77    00000000              #define         AT91C_AIC_SRCTYPE_INT_POSITIVE_E
                               DGE    (0x1 <<  5) // (AIC) Internal Sources
                                Code Label Positive Edge triggered
   78    00000000              #define         AT91C_AIC_SRCTYPE_EXT_NEGATIVE_E
                               DGE    (0x1 <<  5) // (AIC) External Sources
                                Code Label Negative Edge triggered
   79    00000000              #define         AT91C_AIC_SRCTYPE_HIGH_LEVEL    
                                      (0x2 <<  5) // (AIC) Internal Or External
                                Sources Code Label High-level Sensitive
   80    00000000              #define         AT91C_AIC_SRCTYPE_POSITIVE_EDGE 
                                      (0x3 <<  5) // (AIC) Internal Or External
                                Sources Code Label Positive Edge triggered
   81    00000000              // -------- AIC_CISR : (AIC Offset: 0x114) AIC
                                Core Interrupt Status Register --------
                                
   82    00000000              #define AT91C_AIC_NFIQ            (0x1 <<  0) //
                                (AIC) NFIQ Status
   83    00000000              #define AT91C_AIC_NIRQ            (0x1 <<  1) //
                                (AIC) NIRQ Status
   84    00000000              // -------- AIC_DCR : (AIC Offset: 0x138) AIC
                                Debug Control Register (Protect) --------
                                
   85    00000000              #define AT91C_AIC_DCR_PROT        (0x1 <<  0) //
                                (AIC) Protection Mode
   86    00000000              #define AT91C_AIC_DCR_GMSK        (0x1 <<  1) //
                                (AIC) General Mask
   87    00000000              
   88    00000000              // *********************************************
                               ********************************
   89    00000000              //              SOFTWARE API DEFINITION  FOR
                                Peripheral DMA Controller
   90    00000000              // *********************************************
                               ********************************
   91    00000000              // *** Register offset in AT91S_PDC structure
                                ***
   92    00000000              #define PDC_RPR         ( 0) // Receive Pointer
                                Register
   93    00000000              #define PDC_RCR         ( 4) // Receive Counter
                                Register
   94    00000000              #define PDC_TPR         ( 8) // Transmit Pointer
                                Register
   95    00000000              #define PDC_TCR         (12) // Transmit Counter
                                Register
   96    00000000              #define PDC_RNPR        (16) // Receive Next
                                Pointer Register
   97    00000000              #define PDC_RNCR        (20) // Receive Next
                                Counter Register
   98    00000000              #define PDC_TNPR        (24) // Transmit Next
                                Pointer Register
   99    00000000              #define PDC_TNCR        (28) // Transmit Next
                                Counter Register
  100    00000000              #define PDC_PTCR        (32) // PDC Transfer
                                Control Register
  101    00000000              #define PDC_PTSR        (36) // PDC Transfer
                                Status Register
  102    00000000              // -------- PDC_PTCR : (PDC Offset: 0x20) PDC
                                Transfer Control Register -------- 
  103    00000000              #define AT91C_PDC_RXTEN           (0x1 <<  0) //
                                (PDC) Receiver Transfer Enable
  104    00000000              #define AT91C_PDC_RXTDIS          (0x1 <<  1) //
                                (PDC) Receiver Transfer Disable
  105    00000000              #define AT91C_PDC_TXTEN           (0x1 <<  8) //
                                (PDC) Transmitter Transfer Enable
  106    00000000              #define AT91C_PDC_TXTDIS          (0x1 <<  9) //
                                (PDC) Transmitter Transfer Disable
  107    00000000              // -------- PDC_PTSR : (PDC Offset: 0x24) PDC
                                Transfer Status Register -------- 
  108    00000000              
  109    00000000              // *********************************************
                               ********************************
  110    00000000              //              SOFTWARE API DEFINITION  FOR
                                Debug Unit
  111    00000000              // *********************************************
                               ********************************
  112    00000000              // *** Register offset in AT91S_DBGU structure
                                ***
  113    00000000              #define DBGU_CR         ( 0) // Control
                                Register
  114    00000000              #define DBGU_MR         ( 4) // Mode Register
  115    00000000              #define DBGU_IER        ( 8) // Interrupt Enable
                                Register
  116    00000000              #define DBGU_IDR        (12) // Interrupt
                                Disable Register
  117    00000000              #define DBGU_IMR        (16) // Interrupt Mask
                                Register
  118    00000000              #define DBGU_CSR        (20) // Channel Status
                                Register
  119    00000000              #define DBGU_RHR        (24) // Receiver Holding
                                Register
  120    00000000              #define DBGU_THR        (28) // Transmitter
                                Holding Register
  121    00000000              #define DBGU_BRGR       (32) // Baud Rate
                                Generator Register
  122    00000000              #define DBGU_CIDR       (64) // Chip ID
                                Register
  123    00000000              #define DBGU_EXID       (68) // Chip ID
                                Extension Register
  124    00000000              #define DBGU_FNTR       (72) // Force NTRST
                                Register
  125    00000000              #define DBGU_RPR        (256) // Receive Pointer
                                Register
  126    00000000              #define DBGU_RCR        (260) // Receive Counter
                                Register
  127    00000000              #define DBGU_TPR        (264) // Transmit
                                Pointer Register
  128    00000000              #define DBGU_TCR        (268) // Transmit
                                Counter Register
  129    00000000              #define DBGU_RNPR       (272) // Receive Next
                                Pointer Register
  130    00000000              #define DBGU_RNCR       (276) // Receive Next
                                Counter Register
  131    00000000              #define DBGU_TNPR       (280) // Transmit Next
                                Pointer Register
  132    00000000              #define DBGU_TNCR       (284) // Transmit Next
                                Counter Register
  133    00000000              #define DBGU_PTCR       (288) // PDC Transfer
                                Control Register
  134    00000000              #define DBGU_PTSR       (292) // PDC Transfer
                                Status Register
  135    00000000              // -------- DBGU_CR : (DBGU Offset: 0x0) Debug
                                Unit Control Register -------- 
  136    00000000              #define AT91C_US_RSTRX            (0x1 <<  2) //
                                (DBGU) Reset Receiver
  137    00000000              #define AT91C_US_RSTTX            (0x1 <<  3) //
                                (DBGU) Reset Transmitter
  138    00000000              #define AT91C_US_RXEN             (0x1 <<  4) //
                                (DBGU) Receiver Enable
  139    00000000              #define AT91C_US_RXDIS            (0x1 <<  5) //
                                (DBGU) Receiver Disable
  140    00000000              #define AT91C_US_TXEN             (0x1 <<  6) //
                                (DBGU) Transmitter Enable
  141    00000000              #define AT91C_US_TXDIS            (0x1 <<  7) //
                                (DBGU) Transmitter Disable
  142    00000000              #define AT91C_US_RSTSTA           (0x1 <<  8) //
                                (DBGU) Reset Status Bits
  143    00000000              // -------- DBGU_MR : (DBGU Offset: 0x4) Debug
                                Unit Mode Register -------- 
  144    00000000              #define AT91C_US_PAR              (0x7 <<  9) //
                                (DBGU) Parity type
  145    00000000              #define         AT91C_US_PAR_EVEN               
                                 (0x0 <<  9) // (DBGU) Even Parity
  146    00000000              #define         AT91C_US_PAR_ODD                
                                 (0x1 <<  9) // (DBGU) Odd Parity
  147    00000000              #define         AT91C_US_PAR_SPACE              
                                 (0x2 <<  9) // (DBGU) Parity forced to 0
                                (Space)
  148    00000000              #define         AT91C_US_PAR_MARK               
                                 (0x3 <<  9) // (DBGU) Parity forced to 1
                                (Mark)
  149    00000000              #define         AT91C_US_PAR_NONE               
                                 (0x4 <<  9) // (DBGU) No Parity
  150    00000000              #define         AT91C_US_PAR_MULTI_DROP         
                                 (0x6 <<  9) // (DBGU) Multi-drop mode
  151    00000000              #define AT91C_US_CHMODE           (0x3 << 14) //
                                (DBGU) Channel Mode
  152    00000000              #define         AT91C_US_CHMODE_NORMAL          
                                    (0x0 << 14) // (DBGU) Normal Mode: The
                                USART channel operates as an RX/TX USART.
  153    00000000              #define         AT91C_US_CHMODE_AUTO            
                                    (0x1 << 14) // (DBGU) Automatic Echo:
                                Receiver Data Input is connected to the TXD
                                pin.
  154    00000000              #define         AT91C_US_CHMODE_LOCAL           
                                    (0x2 << 14) // (DBGU) Local Loopback:
                                Transmitter Output Signal is connected to
                                Receiver Input Signal.
  155    00000000              #define         AT91C_US_CHMODE_REMOTE          
                                    (0x3 << 14) // (DBGU) Remote Loopback: RXD
                                pin is internally connected to TXD pin.
  156    00000000              // -------- DBGU_IER : (DBGU Offset: 0x8) Debug
                                Unit Interrupt Enable Register --------
                                
  157    00000000              #define AT91C_US_RXRDY            (0x1 <<  0) //
                                (DBGU) RXRDY Interrupt
  158    00000000              #define AT91C_US_TXRDY            (0x1 <<  1) //
                                (DBGU) TXRDY Interrupt
  159    00000000              #define AT91C_US_ENDRX            (0x1 <<  3) //
                                (DBGU) End of Receive Transfer Interrupt
  160    00000000              #define AT91C_US_ENDTX            (0x1 <<  4) //
                                (DBGU) End of Transmit Interrupt
  161    00000000              #define AT91C_US_OVRE             (0x1 <<  5) //
                                (DBGU) Overrun Interrupt
  162    00000000              #define AT91C_US_FRAME            (0x1 <<  6) //
                                (DBGU) Framing Error Interrupt
  163    00000000              #define AT91C_US_PARE             (0x1 <<  7) //
                                (DBGU) Parity Error Interrupt
  164    00000000              #define AT91C_US_TXEMPTY          (0x1 <<  9) //
                                (DBGU) TXEMPTY Interrupt
  165    00000000              #define AT91C_US_TXBUFE           (0x1 << 11) //
                                (DBGU) TXBUFE Interrupt
  166    00000000              #define AT91C_US_RXBUFF           (0x1 << 12) //
                                (DBGU) RXBUFF Interrupt
  167    00000000              #define AT91C_US_COMM_TX          (0x1 << 30) //
                                (DBGU) COMM_TX Interrupt
  168    00000000              #define AT91C_US_COMM_RX          (0x1 << 31) //
                                (DBGU) COMM_RX Interrupt
  169    00000000              // -------- DBGU_IDR : (DBGU Offset: 0xc) Debug
                                Unit Interrupt Disable Register --------
                                
  170    00000000              // -------- DBGU_IMR : (DBGU Offset: 0x10) Debug
                                Unit Interrupt Mask Register --------
                                
  171    00000000              // -------- DBGU_CSR : (DBGU Offset: 0x14) Debug
                                Unit Channel Status Register --------
                                
  172    00000000              // -------- DBGU_FNTR : (DBGU Offset: 0x48)
                                Debug Unit FORCE_NTRST Register --------
                                
  173    00000000              #define AT91C_US_FORCE_NTRST      (0x1 <<  0) //
                                (DBGU) Force NTRST in JTAG
  174    00000000              
  175    00000000              // *********************************************
                               ********************************
  176    00000000              //              SOFTWARE API DEFINITION  FOR
                                Parallel Input Output Controler
  177    00000000              // *********************************************
                               ********************************
  178    00000000              // *** Register offset in AT91S_PIO structure
                                ***
  179    00000000              #define PIO_PER         ( 0) // PIO Enable
                                Register
  180    00000000              #define PIO_PDR         ( 4) // PIO Disable
                                Register
  181    00000000              #define PIO_PSR         ( 8) // PIO Status
                                Register
  182    00000000              #define PIO_OER         (16) // Output Enable
                                Register
  183    00000000              #define PIO_ODR         (20) // Output Disable
                                Registerr
  184    00000000              #define PIO_OSR         (24) // Output Status
                                Register
  185    00000000              #define PIO_IFER        (32) // Input Filter
                                Enable Register
  186    00000000              #define PIO_IFDR        (36) // Input Filter
                                Disable Register
  187    00000000              #define PIO_IFSR        (40) // Input Filter
                                Status Register
  188    00000000              #define PIO_SODR        (48) // Set Output Data
                                Register
  189    00000000              #define PIO_CODR        (52) // Clear Output
                                Data Register
  190    00000000              #define PIO_ODSR        (56) // Output Data
                                Status Register
  191    00000000              #define PIO_PDSR        (60) // Pin Data Status
                                Register
  192    00000000              #define PIO_IER         (64) // Interrupt Enable
                                Register
  193    00000000              #define PIO_IDR         (68) // Interrupt
                                Disable Register
  194    00000000              #define PIO_IMR         (72) // Interrupt Mask
                                Register
  195    00000000              #define PIO_ISR         (76) // Interrupt Status
                                Register
  196    00000000              #define PIO_MDER        (80) // Multi-driver
                                Enable Register
  197    00000000              #define PIO_MDDR        (84) // Multi-driver
                                Disable Register
  198    00000000              #define PIO_MDSR        (88) // Multi-driver
                                Status Register
  199    00000000              #define PIO_PPUDR       (96) // Pull-up Disable
                                Register
  200    00000000              #define PIO_PPUER       (100) // Pull-up Enable
                                Register
  201    00000000              #define PIO_PPUSR       (104) // Pull-up Status
                                Register
  202    00000000              #define PIO_ASR         (112) // Select A
                                Register
  203    00000000              #define PIO_BSR         (116) // Select B
                                Register
  204    00000000              #define PIO_ABSR        (120) // AB Select
                                Status Register
  205    00000000              #define PIO_OWER        (160) // Output Write
                                Enable Register
  206    00000000              #define PIO_OWDR        (164) // Output Write
                                Disable Register
  207    00000000              #define PIO_OWSR        (168) // Output Write
                                Status Register
  208    00000000              
  209    00000000              // *********************************************
                               ********************************
  210    00000000              //              SOFTWARE API DEFINITION  FOR
                                Clock Generator Controler
  211    00000000              // *********************************************
                               ********************************
  212    00000000              // *** Register offset in AT91S_CKGR structure
                                ***
  213    00000000              #define CKGR_MOR        ( 0) // Main Oscillator
                                Register
  214    00000000              #define CKGR_MCFR       ( 4) // Main Clock 
                                Frequency Register
  215    00000000              #define CKGR_PLLR       (12) // PLL Register
  216    00000000              // -------- CKGR_MOR : (CKGR Offset: 0x0) Main
                                Oscillator Register -------- 
  217    00000000              #define AT91C_CKGR_MOSCEN         (0x1 <<  0) //
                                (CKGR) Main Oscillator Enable
  218    00000000              #define AT91C_CKGR_OSCBYPASS      (0x1 <<  1) //
                                (CKGR) Main Oscillator Bypass
  219    00000000              #define AT91C_CKGR_OSCOUNT        (0xFF <<  8)
                                // (CKGR) Main Oscillator Start-up Time
  220    00000000              // -------- CKGR_MCFR : (CKGR Offset: 0x4) Main
                                Clock Frequency Register -------- 
  221    00000000              #define AT91C_CKGR_MAINF          (0xFFFF <<  0)
                                // (CKGR) Main Clock Frequency
  222    00000000              #define AT91C_CKGR_MAINRDY        (0x1 << 16) //
                                (CKGR) Main Clock Ready
  223    00000000              // -------- CKGR_PLLR : (CKGR Offset: 0xc) PLL B
                                Register -------- 
  224    00000000              #define AT91C_CKGR_DIV            (0xFF <<  0)
                                // (CKGR) Divider Selected
  225    00000000              #define         AT91C_CKGR_DIV_0                
                                   (0x0) // (CKGR) Divider output is 0
  226    00000000              #define         AT91C_CKGR_DIV_BYPASS           
                                   (0x1) // (CKGR) Divider is bypassed
  227    00000000              #define AT91C_CKGR_PLLCOUNT       (0x3F <<  8)
                                // (CKGR) PLL Counter
  228    00000000              #define AT91C_CKGR_OUT            (0x3 << 14) //
                                (CKGR) PLL Output Frequency Range
  229    00000000              #define         AT91C_CKGR_OUT_0                
                                   (0x0 << 14) // (CKGR) Please refer to the
                                PLL datasheet
  230    00000000              #define         AT91C_CKGR_OUT_1                
                                   (0x1 << 14) // (CKGR) Please refer to the
                                PLL datasheet
  231    00000000              #define         AT91C_CKGR_OUT_2                
                                   (0x2 << 14) // (CKGR) Please refer to the
                                PLL datasheet
  232    00000000              #define         AT91C_CKGR_OUT_3                
                                   (0x3 << 14) // (CKGR) Please refer to the
                                PLL datasheet
  233    00000000              #define AT91C_CKGR_MUL            (0x7FF << 16)
                                // (CKGR) PLL Multiplier
  234    00000000              #define AT91C_CKGR_USBDIV         (0x3 << 28) //
                                (CKGR) Divider for USB Clocks
  235    00000000              #define         AT91C_CKGR_USBDIV_0             
                                      (0x0 << 28) // (CKGR) Divider output is
                                PLL clock output
  236    00000000              #define         AT91C_CKGR_USBDIV_1             
                                      (0x1 << 28) // (CKGR) Divider output is
                                PLL clock output divided by 2
  237    00000000              #define         AT91C_CKGR_USBDIV_2             
                                      (0x2 << 28) // (CKGR) Divider output is
                                PLL clock output divided by 4
  238    00000000              
  239    00000000              // *********************************************
                               ********************************
  240    00000000              //              SOFTWARE API DEFINITION  FOR
                                Power Management Controler
  241    00000000              // *********************************************
                               ********************************
  242    00000000              // *** Register offset in AT91S_PMC structure
                                ***
  243    00000000              #define PMC_SCER        ( 0) // System Clock
                                Enable Register
  244    00000000              #define PMC_SCDR        ( 4) // System Clock
                                Disable Register
  245    00000000              #define PMC_SCSR        ( 8) // System Clock
                                Status Register
  246    00000000              #define PMC_PCER        (16) // Peripheral Clock
                                Enable Register
  247    00000000              #define PMC_PCDR        (20) // Peripheral Clock
                                Disable Register
  248    00000000              #define PMC_PCSR        (24) // Peripheral Clock
                                Status Register
  249    00000000              #define PMC_MOR         (32) // Main Oscillator
                                Register
  250    00000000              #define PMC_MCFR        (36) // Main Clock 
                                Frequency Register
  251    00000000              #define PMC_PLLR        (44) // PLL Register
  252    00000000              #define PMC_MCKR        (48) // Master Clock
                                Register
  253    00000000              #define PMC_PCKR        (64) // Programmable
                                Clock Register
  254    00000000              #define PMC_IER         (96) // Interrupt Enable
                                Register
  255    00000000              #define PMC_IDR         (100) // Interrupt
                                Disable Register
  256    00000000              #define PMC_SR          (104) // Status
                                Register
  257    00000000              #define PMC_IMR         (108) // Interrupt Mask
                                Register
  258    00000000              // -------- PMC_SCER : (PMC Offset: 0x0) System
                                Clock Enable Register -------- 
  259    00000000              #define AT91C_PMC_PCK             (0x1 <<  0) //
                                (PMC) Processor Clock
  260    00000000              #define AT91C_PMC_UDP             (0x1 <<  7) //
                                (PMC) USB Device Port Clock
  261    00000000              #define AT91C_PMC_PCK0            (0x1 <<  8) //
                                (PMC) Programmable Clock Output
  262    00000000              #define AT91C_PMC_PCK1            (0x1 <<  9) //
                                (PMC) Programmable Clock Output
  263    00000000              #define AT91C_PMC_PCK2            (0x1 << 10) //
                                (PMC) Programmable Clock Output
  264    00000000              // -------- PMC_SCDR : (PMC Offset: 0x4) System
                                Clock Disable Register -------- 
  265    00000000              // -------- PMC_SCSR : (PMC Offset: 0x8) System
                                Clock Status Register -------- 
  266    00000000              // -------- CKGR_MOR : (PMC Offset: 0x20) Main
                                Oscillator Register -------- 
  267    00000000              // -------- CKGR_MCFR : (PMC Offset: 0x24) Main
                                Clock Frequency Register -------- 
  268    00000000              // -------- CKGR_PLLR : (PMC Offset: 0x2c) PLL B
                                Register -------- 
  269    00000000              // -------- PMC_MCKR : (PMC Offset: 0x30) Master
                                Clock Register -------- 
  270    00000000              #define AT91C_PMC_CSS             (0x3 <<  0) //
                                (PMC) Programmable Clock Selection
  271    00000000              #define         AT91C_PMC_CSS_SLOW_CLK          
                                  (0x0) // (PMC) Slow Clock is selected
  272    00000000              #define         AT91C_PMC_CSS_MAIN_CLK          
                                  (0x1) // (PMC) Main Clock is selected
  273    00000000              #define         AT91C_PMC_CSS_PLL_CLK           
                                  (0x3) // (PMC) Clock from PLL is selected
  274    00000000              #define AT91C_PMC_PRES            (0x7 <<  2) //
                                (PMC) Programmable Clock Prescaler
  275    00000000              #define         AT91C_PMC_PRES_CLK              
                                   (0x0 <<  2) // (PMC) Selected clock
  276    00000000              #define         AT91C_PMC_PRES_CLK_2            
                                   (0x1 <<  2) // (PMC) Selected clock divided
                                by 2
  277    00000000              #define         AT91C_PMC_PRES_CLK_4            
                                   (0x2 <<  2) // (PMC) Selected clock divided
                                by 4
  278    00000000              #define         AT91C_PMC_PRES_CLK_8            
                                   (0x3 <<  2) // (PMC) Selected clock divided
                                by 8
  279    00000000              #define         AT91C_PMC_PRES_CLK_16           
                                   (0x4 <<  2) // (PMC) Selected clock divided
                                by 16
  280    00000000              #define         AT91C_PMC_PRES_CLK_32           
                                   (0x5 <<  2) // (PMC) Selected clock divided
                                by 32
  281    00000000              #define         AT91C_PMC_PRES_CLK_64           
                                   (0x6 <<  2) // (PMC) Selected clock divided
                                by 64
  282    00000000              // -------- PMC_PCKR : (PMC Offset: 0x40)
                                Programmable Clock Register -------- 
  283    00000000              // -------- PMC_IER : (PMC Offset: 0x60) PMC
                                Interrupt Enable Register -------- 
  284    00000000              #define AT91C_PMC_MOSCS           (0x1 <<  0) //
                                (PMC) MOSC Status/Enable/Disable/Mask
  285    00000000              #define AT91C_PMC_LOCK            (0x1 <<  2) //
                                (PMC) PLL Status/Enable/Disable/Mask
  286    00000000              #define AT91C_PMC_MCKRDY          (0x1 <<  3) //
                                (PMC) MCK_RDY Status/Enable/Disable/Mask
  287    00000000              #define AT91C_PMC_PCK0RDY         (0x1 <<  8) //
                                (PMC) PCK0_RDY Status/Enable/Disable/Mask
  288    00000000              #define AT91C_PMC_PCK1RDY         (0x1 <<  9) //
                                (PMC) PCK1_RDY Status/Enable/Disable/Mask
  289    00000000              #define AT91C_PMC_PCK2RDY         (0x1 << 10) //
                                (PMC) PCK2_RDY Status/Enable/Disable/Mask
  290    00000000              // -------- PMC_IDR : (PMC Offset: 0x64) PMC
                                Interrupt Disable Register -------- 
  291    00000000              // -------- PMC_SR : (PMC Offset: 0x68) PMC
                                Status Register -------- 
  292    00000000              // -------- PMC_IMR : (PMC Offset: 0x6c) PMC
                                Interrupt Mask Register -------- 
  293    00000000              
  294    00000000              // *********************************************
                               ********************************
  295    00000000              //              SOFTWARE API DEFINITION  FOR
                                Reset Controller Interface
  296    00000000              // *********************************************
                               ********************************
  297    00000000              // *** Register offset in AT91S_RSTC structure
                                ***
  298    00000000              #define RSTC_RCR        ( 0) // Reset Control
                                Register
  299    00000000              #define RSTC_RSR        ( 4) // Reset Status
                                Register
  300    00000000              #define RSTC_RMR        ( 8) // Reset Mode
                                Register
  301    00000000              // -------- RSTC_RCR : (RSTC Offset: 0x0) Reset
                                Control Register -------- 
  302    00000000              #define AT91C_RSTC_PROCRST        (0x1 <<  0) //
                                (RSTC) Processor Reset
  303    00000000              #define AT91C_RSTC_PERRST         (0x1 <<  2) //
                                (RSTC) Peripheral Reset
  304    00000000              #define AT91C_RSTC_EXTRST         (0x1 <<  3) //
                                (RSTC) External Reset
  305    00000000              #define AT91C_RSTC_KEY            (0xFF << 24)
                                // (RSTC) Password
  306    00000000              // -------- RSTC_RSR : (RSTC Offset: 0x4) Reset
                                Status Register -------- 
  307    00000000              #define AT91C_RSTC_URSTS          (0x1 <<  0) //
                                (RSTC) User Reset Status
  308    00000000              #define AT91C_RSTC_BODSTS         (0x1 <<  1) //
                                (RSTC) Brownout Detection Status
  309    00000000              #define AT91C_RSTC_RSTTYP         (0x7 <<  8) //
                                (RSTC) Reset Type
  310    00000000              #define         AT91C_RSTC_RSTTYP_POWERUP       
                                      (0x0 <<  8) // (RSTC) Power-up Reset.
                                VDDCORE rising.
  311    00000000              #define         AT91C_RSTC_RSTTYP_WAKEUP        
                                      (0x1 <<  8) // (RSTC) WakeUp Reset.
                                VDDCORE rising.
  312    00000000              #define         AT91C_RSTC_RSTTYP_WATCHDOG      
                                      (0x2 <<  8) // (RSTC) Watchdog Reset.
                                Watchdog overflow occured.
  313    00000000              #define         AT91C_RSTC_RSTTYP_SOFTWARE      
                                      (0x3 <<  8) // (RSTC) Software Reset.
                                Processor reset required by the software.
  314    00000000              #define         AT91C_RSTC_RSTTYP_USER          
                                      (0x4 <<  8) // (RSTC) User Reset. NRST
                                pin detected low.
  315    00000000              #define         AT91C_RSTC_RSTTYP_BROWNOUT      
                                      (0x5 <<  8) // (RSTC) Brownout Reset
                                occured.
  316    00000000              #define AT91C_RSTC_NRSTL          (0x1 << 16) //
                                (RSTC) NRST pin level
  317    00000000              #define AT91C_RSTC_SRCMP          (0x1 << 17) //
                                (RSTC) Software Reset Command in Progress.
  318    00000000              // -------- RSTC_RMR : (RSTC Offset: 0x8) Reset
                                Mode Register -------- 
  319    00000000              #define AT91C_RSTC_URSTEN         (0x1 <<  0) //
                                (RSTC) User Reset Enable
  320    00000000              #define AT91C_RSTC_URSTIEN        (0x1 <<  4) //
                                (RSTC) User Reset Interrupt Enable
  321    00000000              #define AT91C_RSTC_ERSTL          (0xF <<  8) //
                                (RSTC) User Reset Length
  322    00000000              #define AT91C_RSTC_BODIEN         (0x1 << 16) //
                                (RSTC) Brownout Detection Interrupt Enable
  323    00000000              
  324    00000000              // *********************************************
                               ********************************
  325    00000000              //              SOFTWARE API DEFINITION  FOR
                                Real Time Timer Controller Interface
  326    00000000              // *********************************************
                               ********************************
  327    00000000              // *** Register offset in AT91S_RTTC structure
                                ***
  328    00000000              #define RTTC_RTMR       ( 0) // Real-time Mode
                                Register
  329    00000000              #define RTTC_RTAR       ( 4) // Real-time Alarm
                                Register
  330    00000000              #define RTTC_RTVR       ( 8) // Real-time Value
                                Register
  331    00000000              #define RTTC_RTSR       (12) // Real-time Status
                                Register
  332    00000000              // -------- RTTC_RTMR : (RTTC Offset: 0x0)
                                Real-time Mode Register -------- 
  333    00000000              #define AT91C_RTTC_RTPRES         (0xFFFF <<  0)
                                // (RTTC) Real-time Timer Prescaler Value
  334    00000000              #define AT91C_RTTC_ALMIEN         (0x1 << 16) //
                                (RTTC) Alarm Interrupt Enable
  335    00000000              #define AT91C_RTTC_RTTINCIEN      (0x1 << 17) //
                                (RTTC) Real Time Timer Increment Interrupt
                                Enable
  336    00000000              #define AT91C_RTTC_RTTRST         (0x1 << 18) //
                                (RTTC) Real Time Timer Restart
  337    00000000              // -------- RTTC_RTAR : (RTTC Offset: 0x4)
                                Real-time Alarm Register -------- 
  338    00000000              #define AT91C_RTTC_ALMV           (0x0 <<  0) //
                                (RTTC) Alarm Value
  339    00000000              // -------- RTTC_RTVR : (RTTC Offset: 0x8)
                                Current Real-time Value Register --------
                                
  340    00000000              #define AT91C_RTTC_CRTV           (0x0 <<  0) //
                                (RTTC) Current Real-time Value
  341    00000000              // -------- RTTC_RTSR : (RTTC Offset: 0xc)
                                Real-time Status Register -------- 
  342    00000000              #define AT91C_RTTC_ALMS           (0x1 <<  0) //
                                (RTTC) Real-time Alarm Status
  343    00000000              #define AT91C_RTTC_RTTINC         (0x1 <<  1) //
                                (RTTC) Real-time Timer Increment
  344    00000000              
  345    00000000              // *********************************************
                               ********************************
  346    00000000              //              SOFTWARE API DEFINITION  FOR
                                Periodic Interval Timer Controller Interface
  347    00000000              // *********************************************
                               ********************************
  348    00000000              // *** Register offset in AT91S_PITC structure
                                ***
  349    00000000              #define PITC_PIMR       ( 0) // Period Interval
                                Mode Register
  350    00000000              #define PITC_PISR       ( 4) // Period Interval
                                Status Register
  351    00000000              #define PITC_PIVR       ( 8) // Period Interval
                                Value Register
  352    00000000              #define PITC_PIIR       (12) // Period Interval
                                Image Register
  353    00000000              // -------- PITC_PIMR : (PITC Offset: 0x0)
                                Periodic Interval Mode Register --------
                                
  354    00000000              #define AT91C_PITC_PIV            (0xFFFFF << 
                                0) // (PITC) Periodic Interval Value
  355    00000000              #define AT91C_PITC_PITEN          (0x1 << 24) //
                                (PITC) Periodic Interval Timer Enabled
  356    00000000              #define AT91C_PITC_PITIEN         (0x1 << 25) //
                                (PITC) Periodic Interval Timer Interrupt
                                Enable
  357    00000000              // -------- PITC_PISR : (PITC Offset: 0x4)
                                Periodic Interval Status Register --------
                                
  358    00000000              #define AT91C_PITC_PITS           (0x1 <<  0) //
                                (PITC) Periodic Interval Timer Status
  359    00000000              // -------- PITC_PIVR : (PITC Offset: 0x8)
                                Periodic Interval Value Register --------
                                
  360    00000000              #define AT91C_PITC_CPIV           (0xFFFFF << 
                                0) // (PITC) Current Periodic Interval
                                Value
  361    00000000              #define AT91C_PITC_PICNT          (0xFFF << 20)
                                // (PITC) Periodic Interval Counter
  362    00000000              // -------- PITC_PIIR : (PITC Offset: 0xc)
                                Periodic Interval Image Register --------
                                
  363    00000000              
  364    00000000              // *********************************************
                               ********************************
  365    00000000              //              SOFTWARE API DEFINITION  FOR
                                Watchdog Timer Controller Interface
  366    00000000              // *********************************************
                               ********************************
  367    00000000              // *** Register offset in AT91S_WDTC structure
                                ***
  368    00000000              #define WDTC_WDCR       ( 0) // Watchdog Control
                                Register
  369    00000000              #define WDTC_WDMR       ( 4) // Watchdog Mode
                                Register
  370    00000000              #define WDTC_WDSR       ( 8) // Watchdog Status
                                Register
  371    00000000              // -------- WDTC_WDCR : (WDTC Offset: 0x0)
                                Periodic Interval Image Register --------
                                
  372    00000000              #define AT91C_WDTC_WDRSTT         (0x1 <<  0) //
                                (WDTC) Watchdog Restart
  373    00000000              #define AT91C_WDTC_KEY            (0xFF << 24)
                                // (WDTC) Watchdog KEY Password
  374    00000000              // -------- WDTC_WDMR : (WDTC Offset: 0x4)
                                Watchdog Mode Register -------- 
  375    00000000              #define AT91C_WDTC_WDV            (0xFFF <<  0)
                                // (WDTC) Watchdog Timer Restart
  376    00000000              #define AT91C_WDTC_WDFIEN         (0x1 << 12) //
                                (WDTC) Watchdog Fault Interrupt Enable
  377    00000000              #define AT91C_WDTC_WDRSTEN        (0x1 << 13) //
                                (WDTC) Watchdog Reset Enable
  378    00000000              #define AT91C_WDTC_WDRPROC        (0x1 << 14) //
                                (WDTC) Watchdog Timer Restart
  379    00000000              #define AT91C_WDTC_WDDIS          (0x1 << 15) //
                                (WDTC) Watchdog Disable
  380    00000000              #define AT91C_WDTC_WDD            (0xFFF << 16)
                                // (WDTC) Watchdog Delta Value
  381    00000000              #define AT91C_WDTC_WDDBGHLT       (0x1 << 28) //
                                (WDTC) Watchdog Debug Halt
  382    00000000              #define AT91C_WDTC_WDIDLEHLT      (0x1 << 29) //
                                (WDTC) Watchdog Idle Halt
  383    00000000              // -------- WDTC_WDSR : (WDTC Offset: 0x8)
                                Watchdog Status Register -------- 
  384    00000000              #define AT91C_WDTC_WDUNF          (0x1 <<  0) //
                                (WDTC) Watchdog Underflow
  385    00000000              #define AT91C_WDTC_WDERR          (0x1 <<  1) //
                                (WDTC) Watchdog Error
  386    00000000              
  387    00000000              // *********************************************
                               ********************************
  388    00000000              //              SOFTWARE API DEFINITION  FOR
                                Voltage Regulator Mode Controller Interface
  389    00000000              // *********************************************
                               ********************************
  390    00000000              // *** Register offset in AT91S_VREG structure
                                ***
  391    00000000              #define VREG_MR         ( 0) // Voltage
                                Regulator Mode Register
  392    00000000              // -------- VREG_MR : (VREG Offset: 0x0) Voltage
                                Regulator Mode Register -------- 
  393    00000000              #define AT91C_VREG_PSTDBY         (0x1 <<  0) //
                                (VREG) Voltage Regulator Power Standby
                                Mode
  394    00000000              
  395    00000000              // *********************************************
                               ********************************
  396    00000000              //              SOFTWARE API DEFINITION  FOR
                                Memory Controller Interface
  397    00000000              // *********************************************
                               ********************************
  398    00000000              // *** Register offset in AT91S_MC structure
                                ***
  399    00000000              #define MC_RCR          ( 0) // MC Remap Control
                                Register
  400    00000000              #define MC_ASR          ( 4) // MC Abort Status
                                Register
  401    00000000              #define MC_AASR         ( 8) // MC Abort Address
                                Status Register
  402    00000000              #define MC_FMR          (96) // MC Flash Mode
                                Register
  403    00000000              #define MC_FCR          (100) // MC Flash
                                Command Register
  404    00000000              #define MC_FSR          (104) // MC Flash Status
                                Register
  405    00000000              // -------- MC_RCR : (MC Offset: 0x0) MC Remap
                                Control Register -------- 
  406    00000000              #define AT91C_MC_RCB              (0x1 <<  0) //
                                (MC) Remap Command Bit
  407    00000000              // -------- MC_ASR : (MC Offset: 0x4) MC Abort
                                Status Register -------- 
  408    00000000              #define AT91C_MC_UNDADD           (0x1 <<  0) //
                                (MC) Undefined Addess Abort Status
  409    00000000              #define AT91C_MC_MISADD           (0x1 <<  1) //
                                (MC) Misaligned Addess Abort Status
  410    00000000              #define AT91C_MC_ABTSZ            (0x3 <<  8) //
                                (MC) Abort Size Status
  411    00000000              #define         AT91C_MC_ABTSZ_BYTE             
                                   (0x0 <<  8) // (MC) Byte
  412    00000000              #define         AT91C_MC_ABTSZ_HWORD            
                                   (0x1 <<  8) // (MC) Half-word
  413    00000000              #define         AT91C_MC_ABTSZ_WORD             
                                   (0x2 <<  8) // (MC) Word
  414    00000000              #define AT91C_MC_ABTTYP           (0x3 << 10) //
                                (MC) Abort Type Status
  415    00000000              #define         AT91C_MC_ABTTYP_DATAR           
                                    (0x0 << 10) // (MC) Data Read
  416    00000000              #define         AT91C_MC_ABTTYP_DATAW           
                                    (0x1 << 10) // (MC) Data Write
  417    00000000              #define         AT91C_MC_ABTTYP_FETCH           
                                    (0x2 << 10) // (MC) Code Fetch
  418    00000000              #define AT91C_MC_MST0             (0x1 << 16) //
                                (MC) Master 0 Abort Source
  419    00000000              #define AT91C_MC_MST1             (0x1 << 17) //
                                (MC) Master 1 Abort Source
  420    00000000              #define AT91C_MC_SVMST0           (0x1 << 24) //
                                (MC) Saved Master 0 Abort Source
  421    00000000              #define AT91C_MC_SVMST1           (0x1 << 25) //
                                (MC) Saved Master 1 Abort Source
  422    00000000              // -------- MC_FMR : (MC Offset: 0x60) MC Flash
                                Mode Register -------- 
  423    00000000              #define AT91C_MC_FRDY             (0x1 <<  0) //
                                (MC) Flash Ready
  424    00000000              #define AT91C_MC_LOCKE            (0x1 <<  2) //
                                (MC) Lock Error
  425    00000000              #define AT91C_MC_PROGE            (0x1 <<  3) //
                                (MC) Programming Error
  426    00000000              #define AT91C_MC_NEBP             (0x1 <<  7) //
                                (MC) No Erase Before Programming
  427    00000000              #define AT91C_MC_FWS              (0x3 <<  8) //
                                (MC) Flash Wait State
  428    00000000              #define         AT91C_MC_FWS_0FWS               
                                 (0x0 <<  8) // (MC) 1 cycle for Read, 2 for
                                Write operations
  429    00000000              #define         AT91C_MC_FWS_1FWS               
                                 (0x1 <<  8) // (MC) 2 cycles for Read, 3 for
                                Write operations
  430    00000000              #define         AT91C_MC_FWS_2FWS               
                                 (0x2 <<  8) // (MC) 3 cycles for Read, 4 for
                                Write operations
  431    00000000              #define         AT91C_MC_FWS_3FWS               
                                 (0x3 <<  8) // (MC) 4 cycles for Read, 4 for
                                Write operations
  432    00000000              #define AT91C_MC_FMCN             (0xFF << 16)
                                // (MC) Flash Microsecond Cycle Number
  433    00000000              // -------- MC_FCR : (MC Offset: 0x64) MC Flash
                                Command Register -------- 
  434    00000000              #define AT91C_MC_FCMD             (0xF <<  0) //
                                (MC) Flash Command
  435    00000000              #define         AT91C_MC_FCMD_START_PROG        
                                  (0x1) // (MC) Starts the programming of th
                                epage specified by PAGEN.
  436    00000000              #define         AT91C_MC_FCMD_LOCK              
                                  (0x2) // (MC) Starts a lock sequence of the
                                sector defined by the bits 4 to 7 of the field
                                PAGEN.
  437    00000000              #define         AT91C_MC_FCMD_PROG_AND_LOCK     
                                  (0x3) // (MC) The lock sequence automatically
                                happens after the programming sequence is
                                completed.
  438    00000000              #define         AT91C_MC_FCMD_UNLOCK            
                                  (0x4) // (MC) Starts an unlock sequence of
                                the sector defined by the bits 4 to 7 of the
                                field PAGEN.
  439    00000000              #define         AT91C_MC_FCMD_ERASE_ALL         
                                  (0x8) // (MC) Starts the erase of the entire
                                flash.If at least a page is locked, the command
                                is cancelled.
  440    00000000              #define         AT91C_MC_FCMD_SET_GP_NVM        
                                  (0xB) // (MC) Set General Purpose NVM
                                bits.
  441    00000000              #define         AT91C_MC_FCMD_CLR_GP_NVM        
                                  (0xD) // (MC) Clear General Purpose NVM
                                bits.
  442    00000000              #define         AT91C_MC_FCMD_SET_SECURITY      
                                  (0xF) // (MC) Set Security Bit.
  443    00000000              #define AT91C_MC_PAGEN            (0x3FF <<  8)
                                // (MC) Page Number
  444    00000000              #define AT91C_MC_KEY              (0xFF << 24)
                                // (MC) Writing Protect Key
  445    00000000              // -------- MC_FSR : (MC Offset: 0x68) MC Flash
                                Command Register -------- 
  446    00000000              #define AT91C_MC_SECURITY         (0x1 <<  4) //
                                (MC) Security Bit Status
  447    00000000              #define AT91C_MC_GPNVM0           (0x1 <<  8) //
                                (MC) Sector 0 Lock Status
  448    00000000              #define AT91C_MC_GPNVM1           (0x1 <<  9) //
                                (MC) Sector 1 Lock Status
  449    00000000              #define AT91C_MC_GPNVM2           (0x1 << 10) //
                                (MC) Sector 2 Lock Status
  450    00000000              #define AT91C_MC_GPNVM3           (0x1 << 11) //
                                (MC) Sector 3 Lock Status
  451    00000000              #define AT91C_MC_GPNVM4           (0x1 << 12) //
                                (MC) Sector 4 Lock Status
  452    00000000              #define AT91C_MC_GPNVM5           (0x1 << 13) //
                                (MC) Sector 5 Lock Status
  453    00000000              #define AT91C_MC_GPNVM6           (0x1 << 14) //
                                (MC) Sector 6 Lock Status
  454    00000000              #define AT91C_MC_GPNVM7           (0x1 << 15) //
                                (MC) Sector 7 Lock Status
  455    00000000              #define AT91C_MC_LOCKS0           (0x1 << 16) //
                                (MC) Sector 0 Lock Status
  456    00000000              #define AT91C_MC_LOCKS1           (0x1 << 17) //
                                (MC) Sector 1 Lock Status
  457    00000000              #define AT91C_MC_LOCKS2           (0x1 << 18) //
                                (MC) Sector 2 Lock Status
  458    00000000              #define AT91C_MC_LOCKS3           (0x1 << 19) //
                                (MC) Sector 3 Lock Status
  459    00000000              #define AT91C_MC_LOCKS4           (0x1 << 20) //
                                (MC) Sector 4 Lock Status
  460    00000000              #define AT91C_MC_LOCKS5           (0x1 << 21) //
                                (MC) Sector 5 Lock Status
  461    00000000              #define AT91C_MC_LOCKS6           (0x1 << 22) //
                                (MC) Sector 6 Lock Status
  462    00000000              #define AT91C_MC_LOCKS7           (0x1 << 23) //
                                (MC) Sector 7 Lock Status
  463    00000000              #define AT91C_MC_LOCKS8           (0x1 << 24) //
                                (MC) Sector 8 Lock Status
  464    00000000              #define AT91C_MC_LOCKS9           (0x1 << 25) //
                                (MC) Sector 9 Lock Status
  465    00000000              #define AT91C_MC_LOCKS10          (0x1 << 26) //
                                (MC) Sector 10 Lock Status
  466    00000000              #define AT91C_MC_LOCKS11          (0x1 << 27) //
                                (MC) Sector 11 Lock Status
  467    00000000              #define AT91C_MC_LOCKS12          (0x1 << 28) //
                                (MC) Sector 12 Lock Status
  468    00000000              #define AT91C_MC_LOCKS13          (0x1 << 29) //
                                (MC) Sector 13 Lock Status
  469    00000000              #define AT91C_MC_LOCKS14          (0x1 << 30) //
                                (MC) Sector 14 Lock Status
  470    00000000              #define AT91C_MC_LOCKS15          (0x1 << 31) //
                                (MC) Sector 15 Lock Status
  471    00000000              
  472    00000000              // *********************************************
                               ********************************
  473    00000000              //              SOFTWARE API DEFINITION  FOR
                                Serial Parallel Interface
  474    00000000              // *********************************************
                               ********************************
  475    00000000              // *** Register offset in AT91S_SPI structure
                                ***
  476    00000000              #define SPI_CR          ( 0) // Control
                                Register
  477    00000000              #define SPI_MR          ( 4) // Mode Register
  478    00000000              #define SPI_RDR         ( 8) // Receive Data
                                Register
  479    00000000              #define SPI_TDR         (12) // Transmit Data
                                Register
  480    00000000              #define SPI_SR          (16) // Status
                                Register
  481    00000000              #define SPI_IER         (20) // Interrupt Enable
                                Register
  482    00000000              #define SPI_IDR         (24) // Interrupt
                                Disable Register
  483    00000000              #define SPI_IMR         (28) // Interrupt Mask
                                Register
  484    00000000              #define SPI_CSR         (48) // Chip Select
                                Register
  485    00000000              #define SPI_RPR         (256) // Receive Pointer
                                Register
  486    00000000              #define SPI_RCR         (260) // Receive Counter
                                Register
  487    00000000              #define SPI_TPR         (264) // Transmit
                                Pointer Register
  488    00000000              #define SPI_TCR         (268) // Transmit
                                Counter Register
  489    00000000              #define SPI_RNPR        (272) // Receive Next
                                Pointer Register
  490    00000000              #define SPI_RNCR        (276) // Receive Next
                                Counter Register
  491    00000000              #define SPI_TNPR        (280) // Transmit Next
                                Pointer Register
  492    00000000              #define SPI_TNCR        (284) // Transmit Next
                                Counter Register
  493    00000000              #define SPI_PTCR        (288) // PDC Transfer
                                Control Register
  494    00000000              #define SPI_PTSR        (292) // PDC Transfer
                                Status Register
  495    00000000              // -------- SPI_CR : (SPI Offset: 0x0) SPI
                                Control Register -------- 
  496    00000000              #define AT91C_SPI_SPIEN           (0x1 <<  0) //
                                (SPI) SPI Enable
  497    00000000              #define AT91C_SPI_SPIDIS          (0x1 <<  1) //
                                (SPI) SPI Disable
  498    00000000              #define AT91C_SPI_SWRST           (0x1 <<  7) //
                                (SPI) SPI Software reset
  499    00000000              #define AT91C_SPI_LASTXFER        (0x1 << 24) //
                                (SPI) SPI Last Transfer
  500    00000000              // -------- SPI_MR : (SPI Offset: 0x4) SPI Mode
                                Register -------- 
  501    00000000              #define AT91C_SPI_MSTR            (0x1 <<  0) //
                                (SPI) Master/Slave Mode
  502    00000000              #define AT91C_SPI_PS              (0x1 <<  1) //
                                (SPI) Peripheral Select
  503    00000000              #define         AT91C_SPI_PS_FIXED              
                                 (0x0 <<  1) // (SPI) Fixed Peripheral
                                Select
  504    00000000              #define         AT91C_SPI_PS_VARIABLE           
                                 (0x1 <<  1) // (SPI) Variable Peripheral
                                Select
  505    00000000              #define AT91C_SPI_PCSDEC          (0x1 <<  2) //
                                (SPI) Chip Select Decode
  506    00000000              #define AT91C_SPI_FDIV            (0x1 <<  3) //
                                (SPI) Clock Selection
  507    00000000              #define AT91C_SPI_MODFDIS         (0x1 <<  4) //
                                (SPI) Mode Fault Detection
  508    00000000              #define AT91C_SPI_LLB             (0x1 <<  7) //
                                (SPI) Clock Selection
  509    00000000              #define AT91C_SPI_PCS             (0xF << 16) //
                                (SPI) Peripheral Chip Select
  510    00000000              #define AT91C_SPI_DLYBCS          (0xFF << 24)
                                // (SPI) Delay Between Chip Selects
  511    00000000              // -------- SPI_RDR : (SPI Offset: 0x8) Receive
                                Data Register -------- 
  512    00000000              #define AT91C_SPI_RD              (0xFFFF <<  0)
                                // (SPI) Receive Data
  513    00000000              #define AT91C_SPI_RPCS            (0xF << 16) //
                                (SPI) Peripheral Chip Select Status
  514    00000000              // -------- SPI_TDR : (SPI Offset: 0xc) Transmit
                                Data Register -------- 
  515    00000000              #define AT91C_SPI_TD              (0xFFFF <<  0)
                                // (SPI) Transmit Data
  516    00000000              #define AT91C_SPI_TPCS            (0xF << 16) //
                                (SPI) Peripheral Chip Select Status
  517    00000000              // -------- SPI_SR : (SPI Offset: 0x10) Status
                                Register -------- 
  518    00000000              #define AT91C_SPI_RDRF            (0x1 <<  0) //
                                (SPI) Receive Data Register Full
  519    00000000              #define AT91C_SPI_TDRE            (0x1 <<  1) //
                                (SPI) Transmit Data Register Empty
  520    00000000              #define AT91C_SPI_MODF            (0x1 <<  2) //
                                (SPI) Mode Fault Error
  521    00000000              #define AT91C_SPI_OVRES           (0x1 <<  3) //
                                (SPI) Overrun Error Status
  522    00000000              #define AT91C_SPI_ENDRX           (0x1 <<  4) //
                                (SPI) End of Receiver Transfer
  523    00000000              #define AT91C_SPI_ENDTX           (0x1 <<  5) //
                                (SPI) End of Receiver Transfer
  524    00000000              #define AT91C_SPI_RXBUFF          (0x1 <<  6) //
                                (SPI) RXBUFF Interrupt
  525    00000000              #define AT91C_SPI_TXBUFE          (0x1 <<  7) //
                                (SPI) TXBUFE Interrupt
  526    00000000              #define AT91C_SPI_NSSR            (0x1 <<  8) //
                                (SPI) NSSR Interrupt
  527    00000000              #define AT91C_SPI_TXEMPTY         (0x1 <<  9) //
                                (SPI) TXEMPTY Interrupt
  528    00000000              #define AT91C_SPI_SPIENS          (0x1 << 16) //
                                (SPI) Enable Status
  529    00000000              // -------- SPI_IER : (SPI Offset: 0x14)
                                Interrupt Enable Register -------- 
  530    00000000              // -------- SPI_IDR : (SPI Offset: 0x18)
                                Interrupt Disable Register -------- 
  531    00000000              // -------- SPI_IMR : (SPI Offset: 0x1c)
                                Interrupt Mask Register -------- 
  532    00000000              // -------- SPI_CSR : (SPI Offset: 0x30) Chip
                                Select Register -------- 
  533    00000000              #define AT91C_SPI_CPOL            (0x1 <<  0) //
                                (SPI) Clock Polarity
  534    00000000              #define AT91C_SPI_NCPHA           (0x1 <<  1) //
                                (SPI) Clock Phase
  535    00000000              #define AT91C_SPI_CSAAT           (0x1 <<  3) //
                                (SPI) Chip Select Active After Transfer
  536    00000000              #define AT91C_SPI_BITS            (0xF <<  4) //
                                (SPI) Bits Per Transfer
  537    00000000              #define         AT91C_SPI_BITS_8                
                                   (0x0 <<  4) // (SPI) 8 Bits Per transfer
  538    00000000              #define         AT91C_SPI_BITS_9                
                                   (0x1 <<  4) // (SPI) 9 Bits Per transfer
  539    00000000              #define         AT91C_SPI_BITS_10               
                                   (0x2 <<  4) // (SPI) 10 Bits Per transfer
  540    00000000              #define         AT91C_SPI_BITS_11               
                                   (0x3 <<  4) // (SPI) 11 Bits Per transfer
  541    00000000              #define         AT91C_SPI_BITS_12               
                                   (0x4 <<  4) // (SPI) 12 Bits Per transfer
  542    00000000              #define         AT91C_SPI_BITS_13               
                                   (0x5 <<  4) // (SPI) 13 Bits Per transfer
  543    00000000              #define         AT91C_SPI_BITS_14               
                                   (0x6 <<  4) // (SPI) 14 Bits Per transfer
  544    00000000              #define         AT91C_SPI_BITS_15               
                                   (0x7 <<  4) // (SPI) 15 Bits Per transfer
  545    00000000              #define         AT91C_SPI_BITS_16               
                                   (0x8 <<  4) // (SPI) 16 Bits Per transfer
  546    00000000              #define AT91C_SPI_SCBR            (0xFF <<  8)
                                // (SPI) Serial Clock Baud Rate
  547    00000000              #define AT91C_SPI_DLYBS           (0xFF << 16)
                                // (SPI) Delay Before SPCK
  548    00000000              #define AT91C_SPI_DLYBCT          (0xFF << 24)
                                // (SPI) Delay Between Consecutive Transfers
  549    00000000              
  550    00000000              // *********************************************
                               ********************************
  551    00000000              //              SOFTWARE API DEFINITION  FOR
                                Analog to Digital Convertor
  552    00000000              // *********************************************
                               ********************************
  553    00000000              // *** Register offset in AT91S_ADC structure
                                ***
  554    00000000              #define ADC_CR          ( 0) // ADC Control
                                Register
  555    00000000              #define ADC_MR          ( 4) // ADC Mode
                                Register
  556    00000000              #define ADC_CHER        (16) // ADC Channel
                                Enable Register
  557    00000000              #define ADC_CHDR        (20) // ADC Channel
                                Disable Register
  558    00000000              #define ADC_CHSR        (24) // ADC Channel
                                Status Register
  559    00000000              #define ADC_SR          (28) // ADC Status
                                Register
  560    00000000              #define ADC_LCDR        (32) // ADC Last
                                Converted Data Register
  561    00000000              #define ADC_IER         (36) // ADC Interrupt
                                Enable Register
  562    00000000              #define ADC_IDR         (40) // ADC Interrupt
                                Disable Register
  563    00000000              #define ADC_IMR         (44) // ADC Interrupt
                                Mask Register
  564    00000000              #define ADC_CDR0        (48) // ADC Channel Data
                                Register 0
  565    00000000              #define ADC_CDR1        (52) // ADC Channel Data
                                Register 1
  566    00000000              #define ADC_CDR2        (56) // ADC Channel Data
                                Register 2
  567    00000000              #define ADC_CDR3        (60) // ADC Channel Data
                                Register 3
  568    00000000              #define ADC_CDR4        (64) // ADC Channel Data
                                Register 4
  569    00000000              #define ADC_CDR5        (68) // ADC Channel Data
                                Register 5
  570    00000000              #define ADC_CDR6        (72) // ADC Channel Data
                                Register 6
  571    00000000              #define ADC_CDR7        (76) // ADC Channel Data
                                Register 7
  572    00000000              #define ADC_RPR         (256) // Receive Pointer
                                Register
  573    00000000              #define ADC_RCR         (260) // Receive Counter
                                Register
  574    00000000              #define ADC_TPR         (264) // Transmit
                                Pointer Register
  575    00000000              #define ADC_TCR         (268) // Transmit
                                Counter Register
  576    00000000              #define ADC_RNPR        (272) // Receive Next
                                Pointer Register
  577    00000000              #define ADC_RNCR        (276) // Receive Next
                                Counter Register
  578    00000000              #define ADC_TNPR        (280) // Transmit Next
                                Pointer Register
  579    00000000              #define ADC_TNCR        (284) // Transmit Next
                                Counter Register
  580    00000000              #define ADC_PTCR        (288) // PDC Transfer
                                Control Register
  581    00000000              #define ADC_PTSR        (292) // PDC Transfer
                                Status Register
  582    00000000              // -------- ADC_CR : (ADC Offset: 0x0) ADC
                                Control Register -------- 
  583    00000000              #define AT91C_ADC_SWRST           (0x1 <<  0) //
                                (ADC) Software Reset
  584    00000000              #define AT91C_ADC_START           (0x1 <<  1) //
                                (ADC) Start Conversion
  585    00000000              // -------- ADC_MR : (ADC Offset: 0x4) ADC Mode
                                Register -------- 
  586    00000000              #define AT91C_ADC_TRGEN           (0x1 <<  0) //
                                (ADC) Trigger Enable
  587    00000000              #define         AT91C_ADC_TRGEN_DIS             
                                    (0x0) // (ADC) Hradware triggers are
                                disabled. Starting a conversion is only
                                possible by software
  588    00000000              #define         AT91C_ADC_TRGEN_EN              
                                    (0x1) // (ADC) Hardware trigger selected by
                                TRGSEL field is enabled.
  589    00000000              #define AT91C_ADC_TRGSEL          (0x7 <<  1) //
                                (ADC) Trigger Selection
  590    00000000              #define         AT91C_ADC_TRGSEL_TIOA0          
                                     (0x0 <<  1) // (ADC) Selected TRGSEL =
                                TIAO0
  591    00000000              #define         AT91C_ADC_TRGSEL_TIOA1          
                                     (0x1 <<  1) // (ADC) Selected TRGSEL =
                                TIAO1
  592    00000000              #define         AT91C_ADC_TRGSEL_TIOA2          
                                     (0x2 <<  1) // (ADC) Selected TRGSEL =
                                TIAO2
  593    00000000              #define         AT91C_ADC_TRGSEL_TIOA3          
                                     (0x3 <<  1) // (ADC) Selected TRGSEL =
                                TIAO3
  594    00000000              #define         AT91C_ADC_TRGSEL_TIOA4          
                                     (0x4 <<  1) // (ADC) Selected TRGSEL =
                                TIAO4
  595    00000000              #define         AT91C_ADC_TRGSEL_TIOA5          
                                     (0x5 <<  1) // (ADC) Selected TRGSEL =
                                TIAO5
  596    00000000              #define         AT91C_ADC_TRGSEL_EXT            
                                     (0x6 <<  1) // (ADC) Selected TRGSEL =
                                External Trigger
  597    00000000              #define AT91C_ADC_LOWRES          (0x1 <<  4) //
                                (ADC) Resolution.
  598    00000000              #define         AT91C_ADC_LOWRES_10_BIT         
                                     (0x0 <<  4) // (ADC) 10-bit resolution
  599    00000000              #define         AT91C_ADC_LOWRES_8_BIT          
                                     (0x1 <<  4) // (ADC) 8-bit resolution
  600    00000000              #define AT91C_ADC_SLEEP           (0x1 <<  5) //
                                (ADC) Sleep Mode
  601    00000000              #define         AT91C_ADC_SLEEP_NORMAL_MODE     
                                    (0x0 <<  5) // (ADC) Normal Mode
  602    00000000              #define         AT91C_ADC_SLEEP_MODE            
                                    (0x1 <<  5) // (ADC) Sleep Mode
  603    00000000              #define AT91C_ADC_PRESCAL         (0x3F <<  8)
                                // (ADC) Prescaler rate selection
  604    00000000              #define AT91C_ADC_STARTUP         (0x1F << 16)
                                // (ADC) Startup Time
  605    00000000              #define AT91C_ADC_SHTIM           (0xF << 24) //
                                (ADC) Sample & Hold Time
  606    00000000              // --------     ADC_CHER : (ADC Offset: 0x10)
                                ADC Channel Enable Register -------- 
  607    00000000              #define AT91C_ADC_CH0             (0x1 <<  0) //
                                (ADC) Channel 0
  608    00000000              #define AT91C_ADC_CH1             (0x1 <<  1) //
                                (ADC) Channel 1
  609    00000000              #define AT91C_ADC_CH2             (0x1 <<  2) //
                                (ADC) Channel 2
  610    00000000              #define AT91C_ADC_CH3             (0x1 <<  3) //
                                (ADC) Channel 3
  611    00000000              #define AT91C_ADC_CH4             (0x1 <<  4) //
                                (ADC) Channel 4
  612    00000000              #define AT91C_ADC_CH5             (0x1 <<  5) //
                                (ADC) Channel 5
  613    00000000              #define AT91C_ADC_CH6             (0x1 <<  6) //
                                (ADC) Channel 6
  614    00000000              #define AT91C_ADC_CH7             (0x1 <<  7) //
                                (ADC) Channel 7
  615    00000000              // --------     ADC_CHDR : (ADC Offset: 0x14)
                                ADC Channel Disable Register --------
                                
  616    00000000              // --------     ADC_CHSR : (ADC Offset: 0x18)
                                ADC Channel Status Register -------- 
  617    00000000              // -------- ADC_SR : (ADC Offset: 0x1c) ADC
                                Status Register -------- 
  618    00000000              #define AT91C_ADC_EOC0            (0x1 <<  0) //
                                (ADC) End of Conversion
  619    00000000              #define AT91C_ADC_EOC1            (0x1 <<  1) //
                                (ADC) End of Conversion
  620    00000000              #define AT91C_ADC_EOC2            (0x1 <<  2) //
                                (ADC) End of Conversion
  621    00000000              #define AT91C_ADC_EOC3            (0x1 <<  3) //
                                (ADC) End of Conversion
  622    00000000              #define AT91C_ADC_EOC4            (0x1 <<  4) //
                                (ADC) End of Conversion
  623    00000000              #define AT91C_ADC_EOC5            (0x1 <<  5) //
                                (ADC) End of Conversion
  624    00000000              #define AT91C_ADC_EOC6            (0x1 <<  6) //
                                (ADC) End of Conversion
  625    00000000              #define AT91C_ADC_EOC7            (0x1 <<  7) //
                                (ADC) End of Conversion
  626    00000000              #define AT91C_ADC_OVRE0           (0x1 <<  8) //
                                (ADC) Overrun Error
  627    00000000              #define AT91C_ADC_OVRE1           (0x1 <<  9) //
                                (ADC) Overrun Error
  628    00000000              #define AT91C_ADC_OVRE2           (0x1 << 10) //
                                (ADC) Overrun Error
  629    00000000              #define AT91C_ADC_OVRE3           (0x1 << 11) //
                                (ADC) Overrun Error
  630    00000000              #define AT91C_ADC_OVRE4           (0x1 << 12) //
                                (ADC) Overrun Error
  631    00000000              #define AT91C_ADC_OVRE5           (0x1 << 13) //
                                (ADC) Overrun Error
  632    00000000              #define AT91C_ADC_OVRE6           (0x1 << 14) //
                                (ADC) Overrun Error
  633    00000000              #define AT91C_ADC_OVRE7           (0x1 << 15) //
                                (ADC) Overrun Error
  634    00000000              #define AT91C_ADC_DRDY            (0x1 << 16) //
                                (ADC) Data Ready
  635    00000000              #define AT91C_ADC_GOVRE           (0x1 << 17) //
                                (ADC) General Overrun
  636    00000000              #define AT91C_ADC_ENDRX           (0x1 << 18) //
                                (ADC) End of Receiver Transfer
  637    00000000              #define AT91C_ADC_RXBUFF          (0x1 << 19) //
                                (ADC) RXBUFF Interrupt
  638    00000000              // -------- ADC_LCDR : (ADC Offset: 0x20) ADC
                                Last Converted Data Register --------
                                
  639    00000000              #define AT91C_ADC_LDATA           (0x3FF <<  0)
                                // (ADC) Last Data Converted
  640    00000000              // -------- ADC_IER : (ADC Offset: 0x24) ADC
                                Interrupt Enable Register -------- 
  641    00000000              // -------- ADC_IDR : (ADC Offset: 0x28) ADC
                                Interrupt Disable Register -------- 
  642    00000000              // -------- ADC_IMR : (ADC Offset: 0x2c) ADC
                                Interrupt Mask Register -------- 
  643    00000000              // -------- ADC_CDR0 : (ADC Offset: 0x30) ADC
                                Channel Data Register 0 -------- 
  644    00000000              #define AT91C_ADC_DATA            (0x3FF <<  0)
                                // (ADC) Converted Data
  645    00000000              // -------- ADC_CDR1 : (ADC Offset: 0x34) ADC
                                Channel Data Register 1 -------- 
  646    00000000              // -------- ADC_CDR2 : (ADC Offset: 0x38) ADC
                                Channel Data Register 2 -------- 
  647    00000000              // -------- ADC_CDR3 : (ADC Offset: 0x3c) ADC
                                Channel Data Register 3 -------- 
  648    00000000              // -------- ADC_CDR4 : (ADC Offset: 0x40) ADC
                                Channel Data Register 4 -------- 
  649    00000000              // -------- ADC_CDR5 : (ADC Offset: 0x44) ADC
                                Channel Data Register 5 -------- 
  650    00000000              // -------- ADC_CDR6 : (ADC Offset: 0x48) ADC
                                Channel Data Register 6 -------- 
  651    00000000              // -------- ADC_CDR7 : (ADC Offset: 0x4c) ADC
                                Channel Data Register 7 -------- 
  652    00000000              
  653    00000000              // *********************************************
                               ********************************
  654    00000000              //              SOFTWARE API DEFINITION  FOR
                                Synchronous Serial Controller Interface
  655    00000000              // *********************************************
                               ********************************
  656    00000000              // *** Register offset in AT91S_SSC structure
                                ***
  657    00000000              #define SSC_CR          ( 0) // Control
                                Register
  658    00000000              #define SSC_CMR         ( 4) // Clock Mode
                                Register
  659    00000000              #define SSC_RCMR        (16) // Receive Clock
                                ModeRegister
  660    00000000              #define SSC_RFMR        (20) // Receive Frame
                                Mode Register
  661    00000000              #define SSC_TCMR        (24) // Transmit Clock
                                Mode Register
  662    00000000              #define SSC_TFMR        (28) // Transmit Frame
                                Mode Register
  663    00000000              #define SSC_RHR         (32) // Receive Holding
                                Register
  664    00000000              #define SSC_THR         (36) // Transmit Holding
                                Register
  665    00000000              #define SSC_RSHR        (48) // Receive Sync
                                Holding Register
  666    00000000              #define SSC_TSHR        (52) // Transmit Sync
                                Holding Register
  667    00000000              #define SSC_SR          (64) // Status
                                Register
  668    00000000              #define SSC_IER         (68) // Interrupt Enable
                                Register
  669    00000000              #define SSC_IDR         (72) // Interrupt
                                Disable Register
  670    00000000              #define SSC_IMR         (76) // Interrupt Mask
                                Register
  671    00000000              #define SSC_RPR         (256) // Receive Pointer
                                Register
  672    00000000              #define SSC_RCR         (260) // Receive Counter
                                Register
  673    00000000              #define SSC_TPR         (264) // Transmit
                                Pointer Register
  674    00000000              #define SSC_TCR         (268) // Transmit
                                Counter Register
  675    00000000              #define SSC_RNPR        (272) // Receive Next
                                Pointer Register
  676    00000000              #define SSC_RNCR        (276) // Receive Next
                                Counter Register
  677    00000000              #define SSC_TNPR        (280) // Transmit Next
                                Pointer Register
  678    00000000              #define SSC_TNCR        (284) // Transmit Next
                                Counter Register
  679    00000000              #define SSC_PTCR        (288) // PDC Transfer
                                Control Register
  680    00000000              #define SSC_PTSR        (292) // PDC Transfer
                                Status Register
  681    00000000              // -------- SSC_CR : (SSC Offset: 0x0) SSC
                                Control Register -------- 
  682    00000000              #define AT91C_SSC_RXEN            (0x1 <<  0) //
                                (SSC) Receive Enable
  683    00000000              #define AT91C_SSC_RXDIS           (0x1 <<  1) //
                                (SSC) Receive Disable
  684    00000000              #define AT91C_SSC_TXEN            (0x1 <<  8) //
                                (SSC) Transmit Enable
  685    00000000              #define AT91C_SSC_TXDIS           (0x1 <<  9) //
                                (SSC) Transmit Disable
  686    00000000              #define AT91C_SSC_SWRST           (0x1 << 15) //
                                (SSC) Software Reset
  687    00000000              // -------- SSC_RCMR : (SSC Offset: 0x10) SSC
                                Receive Clock Mode Register -------- 
  688    00000000              #define AT91C_SSC_CKS             (0x3 <<  0) //
                                (SSC) Receive/Transmit Clock Selection
  689    00000000              #define         AT91C_SSC_CKS_DIV               
                                  (0x0) // (SSC) Divided Clock
  690    00000000              #define         AT91C_SSC_CKS_TK                
                                  (0x1) // (SSC) TK Clock signal
  691    00000000              #define         AT91C_SSC_CKS_RK                
                                  (0x2) // (SSC) RK pin
  692    00000000              #define AT91C_SSC_CKO             (0x7 <<  2) //
                                (SSC) Receive/Transmit Clock Output Mode
                                Selection
  693    00000000              #define         AT91C_SSC_CKO_NONE              
                                  (0x0 <<  2) // (SSC) Receive/Transmit Clock
                                Output Mode: None RK pin: Input-only
  694    00000000              #define         AT91C_SSC_CKO_CONTINOUS         
                                  (0x1 <<  2) // (SSC) Continuous Receive/Trans
                               mit Clock RK pin: Output
  695    00000000              #define         AT91C_SSC_CKO_DATA_TX           
                                  (0x2 <<  2) // (SSC) Receive/Transmit Clock
                                only during data transfers RK pin: Output
  696    00000000              #define AT91C_SSC_CKI             (0x1 <<  5) //
                                (SSC) Receive/Transmit Clock Inversion
  697    00000000              #define AT91C_SSC_START           (0xF <<  8) //
                                (SSC) Receive/Transmit Start Selection
  698    00000000              #define         AT91C_SSC_START_CONTINOUS       
                                    (0x0 <<  8) // (SSC) Continuous, as soon as
                                the receiver is enabled, and immediately after
                                the end of transfer of the previous data.
  699    00000000              #define         AT91C_SSC_START_TX              
                                    (0x1 <<  8) // (SSC) Transmit/Receive
                                start
  700    00000000              #define         AT91C_SSC_START_LOW_RF          
                                    (0x2 <<  8) // (SSC) Detection of a low
                                level on RF input
  701    00000000              #define         AT91C_SSC_START_HIGH_RF         
                                    (0x3 <<  8) // (SSC) Detection of a high
                                level on RF input
  702    00000000              #define         AT91C_SSC_START_FALL_RF         
                                    (0x4 <<  8) // (SSC) Detection of a falling
                                edge on RF input
  703    00000000              #define         AT91C_SSC_START_RISE_RF         
                                    (0x5 <<  8) // (SSC) Detection of a rising
                                edge on RF input
  704    00000000              #define         AT91C_SSC_START_LEVEL_RF        
                                    (0x6 <<  8) // (SSC) Detection of any level
                                change on RF input
  705    00000000              #define         AT91C_SSC_START_EDGE_RF         
                                    (0x7 <<  8) // (SSC) Detection of any edge
                                on RF input
  706    00000000              #define         AT91C_SSC_START_0               
                                    (0x8 <<  8) // (SSC) Compare 0
  707    00000000              #define AT91C_SSC_STTDLY          (0xFF << 16)
                                // (SSC) Receive/Transmit Start Delay
  708    00000000              #define AT91C_SSC_PERIOD          (0xFF << 24)
                                // (SSC) Receive/Transmit Period Divider
                                Selection
  709    00000000              // -------- SSC_RFMR : (SSC Offset: 0x14) SSC
                                Receive Frame Mode Register -------- 
  710    00000000              #define AT91C_SSC_DATLEN          (0x1F <<  0)
                                // (SSC) Data Length
  711    00000000              #define AT91C_SSC_LOOP            (0x1 <<  5) //
                                (SSC) Loop Mode
  712    00000000              #define AT91C_SSC_MSBF            (0x1 <<  7) //
                                (SSC) Most Significant Bit First
  713    00000000              #define AT91C_SSC_DATNB           (0xF <<  8) //
                                (SSC) Data Number per Frame
  714    00000000              #define AT91C_SSC_FSLEN           (0xF << 16) //
                                (SSC) Receive/Transmit Frame Sync length
  715    00000000              #define AT91C_SSC_FSOS            (0x7 << 20) //
                                (SSC) Receive/Transmit Frame Sync Output
                                Selection
  716    00000000              #define         AT91C_SSC_FSOS_NONE             
                                   (0x0 << 20) // (SSC) Selected Receive/Transm
                               it Frame Sync Signal: None RK pin Input-only
  717    00000000              #define         AT91C_SSC_FSOS_NEGATIVE         
                                   (0x1 << 20) // (SSC) Selected Receive/Transm
                               it Frame Sync Signal: Negative Pulse
  718    00000000              #define         AT91C_SSC_FSOS_POSITIVE         
                                   (0x2 << 20) // (SSC) Selected Receive/Transm
                               it Frame Sync Signal: Positive Pulse
  719    00000000              #define         AT91C_SSC_FSOS_LOW              
                                   (0x3 << 20) // (SSC) Selected Receive/Transm
                               it Frame Sync Signal: Driver Low during data
                                transfer
  720    00000000              #define         AT91C_SSC_FSOS_HIGH             
                                   (0x4 << 20) // (SSC) Selected Receive/Transm
                               it Frame Sync Signal: Driver High during data
                                transfer
  721    00000000              #define         AT91C_SSC_FSOS_TOGGLE           
                                   (0x5 << 20) // (SSC) Selected Receive/Transm
                               it Frame Sync Signal: Toggling at each start of
                                data transfer
  722    00000000              #define AT91C_SSC_FSEDGE          (0x1 << 24) //
                                (SSC) Frame Sync Edge Detection
  723    00000000              // -------- SSC_TCMR : (SSC Offset: 0x18) SSC
                                Transmit Clock Mode Register --------
                                
  724    00000000              // -------- SSC_TFMR : (SSC Offset: 0x1c) SSC
                                Transmit Frame Mode Register --------
                                
  725    00000000              #define AT91C_SSC_DATDEF          (0x1 <<  5) //
                                (SSC) Data Default Value
  726    00000000              #define AT91C_SSC_FSDEN           (0x1 << 23) //
                                (SSC) Frame Sync Data Enable
  727    00000000              // -------- SSC_SR : (SSC Offset: 0x40) SSC
                                Status Register -------- 
  728    00000000              #define AT91C_SSC_TXRDY           (0x1 <<  0) //
                                (SSC) Transmit Ready
  729    00000000              #define AT91C_SSC_TXEMPTY         (0x1 <<  1) //
                                (SSC) Transmit Empty
  730    00000000              #define AT91C_SSC_ENDTX           (0x1 <<  2) //
                                (SSC) End Of Transmission
  731    00000000              #define AT91C_SSC_TXBUFE          (0x1 <<  3) //
                                (SSC) Transmit Buffer Empty
  732    00000000              #define AT91C_SSC_RXRDY           (0x1 <<  4) //
                                (SSC) Receive Ready
  733    00000000              #define AT91C_SSC_OVRUN           (0x1 <<  5) //
                                (SSC) Receive Overrun
  734    00000000              #define AT91C_SSC_ENDRX           (0x1 <<  6) //
                                (SSC) End of Reception
  735    00000000              #define AT91C_SSC_RXBUFF          (0x1 <<  7) //
                                (SSC) Receive Buffer Full
  736    00000000              #define AT91C_SSC_TXSYN           (0x1 << 10) //
                                (SSC) Transmit Sync
  737    00000000              #define AT91C_SSC_RXSYN           (0x1 << 11) //
                                (SSC) Receive Sync
  738    00000000              #define AT91C_SSC_TXENA           (0x1 << 16) //
                                (SSC) Transmit Enable
  739    00000000              #define AT91C_SSC_RXENA           (0x1 << 17) //
                                (SSC) Receive Enable
  740    00000000              // -------- SSC_IER : (SSC Offset: 0x44) SSC
                                Interrupt Enable Register -------- 
  741    00000000              // -------- SSC_IDR : (SSC Offset: 0x48) SSC
                                Interrupt Disable Register -------- 
  742    00000000              // -------- SSC_IMR : (SSC Offset: 0x4c) SSC
                                Interrupt Mask Register -------- 
  743    00000000              
  744    00000000              // *********************************************
                               ********************************
  745    00000000              //              SOFTWARE API DEFINITION  FOR
                                Usart
  746    00000000              // *********************************************
                               ********************************
  747    00000000              // *** Register offset in AT91S_USART structure
                                ***
  748    00000000              #define US_CR           ( 0) // Control
                                Register
  749    00000000              #define US_MR           ( 4) // Mode Register
  750    00000000              #define US_IER          ( 8) // Interrupt Enable
                                Register
  751    00000000              #define US_IDR          (12) // Interrupt
                                Disable Register
  752    00000000              #define US_IMR          (16) // Interrupt Mask
                                Register
  753    00000000              #define US_CSR          (20) // Channel Status
                                Register
  754    00000000              #define US_RHR          (24) // Receiver Holding
                                Register
  755    00000000              #define US_THR          (28) // Transmitter
                                Holding Register
  756    00000000              #define US_BRGR         (32) // Baud Rate
                                Generator Register
  757    00000000              #define US_RTOR         (36) // Receiver
                                Time-out Register
  758    00000000              #define US_TTGR         (40) // Transmitter
                                Time-guard Register
  759    00000000              #define US_FIDI         (64) // FI_DI_Ratio
                                Register
  760    00000000              #define US_NER          (68) // Nb Errors
                                Register
  761    00000000              #define US_IF           (76) // IRDA_FILTER
                                Register
  762    00000000              #define US_RPR          (256) // Receive Pointer
                                Register
  763    00000000              #define US_RCR          (260) // Receive Counter
                                Register
  764    00000000              #define US_TPR          (264) // Transmit
                                Pointer Register
  765    00000000              #define US_TCR          (268) // Transmit
                                Counter Register
  766    00000000              #define US_RNPR         (272) // Receive Next
                                Pointer Register
  767    00000000              #define US_RNCR         (276) // Receive Next
                                Counter Register
  768    00000000              #define US_TNPR         (280) // Transmit Next
                                Pointer Register
  769    00000000              #define US_TNCR         (284) // Transmit Next
                                Counter Register
  770    00000000              #define US_PTCR         (288) // PDC Transfer
                                Control Register
  771    00000000              #define US_PTSR         (292) // PDC Transfer
                                Status Register
  772    00000000              // -------- US_CR : (USART Offset: 0x0) Debug
                                Unit Control Register -------- 
  773    00000000              #define AT91C_US_STTBRK           (0x1 <<  9) //
                                (USART) Start Break
  774    00000000              #define AT91C_US_STPBRK           (0x1 << 10) //
                                (USART) Stop Break
  775    00000000              #define AT91C_US_STTTO            (0x1 << 11) //
                                (USART) Start Time-out
  776    00000000              #define AT91C_US_SENDA            (0x1 << 12) //
                                (USART) Send Address
  777    00000000              #define AT91C_US_RSTIT            (0x1 << 13) //
                                (USART) Reset Iterations
  778    00000000              #define AT91C_US_RSTNACK          (0x1 << 14) //
                                (USART) Reset Non Acknowledge
  779    00000000              #define AT91C_US_RETTO            (0x1 << 15) //
                                (USART) Rearm Time-out
  780    00000000              #define AT91C_US_DTREN            (0x1 << 16) //
                                (USART) Data Terminal ready Enable
  781    00000000              #define AT91C_US_DTRDIS           (0x1 << 17) //
                                (USART) Data Terminal ready Disable
  782    00000000              #define AT91C_US_RTSEN            (0x1 << 18) //
                                (USART) Request to Send enable
  783    00000000              #define AT91C_US_RTSDIS           (0x1 << 19) //
                                (USART) Request to Send Disable
  784    00000000              // -------- US_MR : (USART Offset: 0x4) Debug
                                Unit Mode Register -------- 
  785    00000000              #define AT91C_US_USMODE           (0xF <<  0) //
                                (USART) Usart mode
  786    00000000              #define         AT91C_US_USMODE_NORMAL          
                                    (0x0) // (USART) Normal
  787    00000000              #define         AT91C_US_USMODE_RS485           
                                    (0x1) // (USART) RS485
  788    00000000              #define         AT91C_US_USMODE_HWHSH           
                                    (0x2) // (USART) Hardware Handshaking
  789    00000000              #define         AT91C_US_USMODE_MODEM           
                                    (0x3) // (USART) Modem
  790    00000000              #define         AT91C_US_USMODE_ISO7816_0       
                                    (0x4) // (USART) ISO7816 protocol: T =
                                0
  791    00000000              #define         AT91C_US_USMODE_ISO7816_1       
                                    (0x6) // (USART) ISO7816 protocol: T =
                                1
  792    00000000              #define         AT91C_US_USMODE_IRDA            
                                    (0x8) // (USART) IrDA
  793    00000000              #define         AT91C_US_USMODE_SWHSH           
                                    (0xC) // (USART) Software Handshaking
  794    00000000              #define AT91C_US_CLKS             (0x3 <<  4) //
                                (USART) Clock Selection (Baud Rate generator
                                Input Clock
  795    00000000              #define         AT91C_US_CLKS_CLOCK             
                                  (0x0 <<  4) // (USART) Clock
  796    00000000              #define         AT91C_US_CLKS_FDIV1             
                                  (0x1 <<  4) // (USART) fdiv1
  797    00000000              #define         AT91C_US_CLKS_SLOW              
                                  (0x2 <<  4) // (USART) slow_clock (ARM)
  798    00000000              #define         AT91C_US_CLKS_EXT               
                                  (0x3 <<  4) // (USART) External (SCK)
  799    00000000              #define AT91C_US_CHRL             (0x3 <<  6) //
                                (USART) Clock Selection (Baud Rate generator
                                Input Clock
  800    00000000              #define         AT91C_US_CHRL_5_BITS            
                                  (0x0 <<  6) // (USART) Character Length: 5
                                bits
  801    00000000              #define         AT91C_US_CHRL_6_BITS            
                                  (0x1 <<  6) // (USART) Character Length: 6
                                bits
  802    00000000              #define         AT91C_US_CHRL_7_BITS            
                                  (0x2 <<  6) // (USART) Character Length: 7
                                bits
  803    00000000              #define         AT91C_US_CHRL_8_BITS            
                                  (0x3 <<  6) // (USART) Character Length: 8
                                bits
  804    00000000              #define AT91C_US_SYNC             (0x1 <<  8) //
                                (USART) Synchronous Mode Select
  805    00000000              #define AT91C_US_NBSTOP           (0x3 << 12) //
                                (USART) Number of Stop bits
  806    00000000              #define         AT91C_US_NBSTOP_1_BIT           
                                    (0x0 << 12) // (USART) 1 stop bit
  807    00000000              #define         AT91C_US_NBSTOP_15_BIT          
                                    (0x1 << 12) // (USART) Asynchronous
                                (SYNC=0) 2 stop bits Synchronous (SYNC=1) 2
                                stop bits
  808    00000000              #define         AT91C_US_NBSTOP_2_BIT           
                                    (0x2 << 12) // (USART) 2 stop bits
  809    00000000              #define AT91C_US_MSBF             (0x1 << 16) //
                                (USART) Bit Order
  810    00000000              #define AT91C_US_MODE9            (0x1 << 17) //
                                (USART) 9-bit Character length
  811    00000000              #define AT91C_US_CKLO             (0x1 << 18) //
                                (USART) Clock Output Select
  812    00000000              #define AT91C_US_OVER             (0x1 << 19) //
                                (USART) Over Sampling Mode
  813    00000000              #define AT91C_US_INACK            (0x1 << 20) //
                                (USART) Inhibit Non Acknowledge
  814    00000000              #define AT91C_US_DSNACK           (0x1 << 21) //
                                (USART) Disable Successive NACK
  815    00000000              #define AT91C_US_MAX_ITER         (0x1 << 24) //
                                (USART) Number of Repetitions
  816    00000000              #define AT91C_US_FILTER           (0x1 << 28) //
                                (USART) Receive Line Filter
  817    00000000              // -------- US_IER : (USART Offset: 0x8) Debug
                                Unit Interrupt Enable Register --------
                                
  818    00000000              #define AT91C_US_RXBRK            (0x1 <<  2) //
                                (USART) Break Received/End of Break
  819    00000000              #define AT91C_US_TIMEOUT          (0x1 <<  8) //
                                (USART) Receiver Time-out
  820    00000000              #define AT91C_US_ITERATION        (0x1 << 10) //
                                (USART) Max number of Repetitions Reached
  821    00000000              #define AT91C_US_NACK             (0x1 << 13) //
                                (USART) Non Acknowledge
  822    00000000              #define AT91C_US_RIIC             (0x1 << 16) //
                                (USART) Ring INdicator Input Change Flag
  823    00000000              #define AT91C_US_DSRIC            (0x1 << 17) //
                                (USART) Data Set Ready Input Change Flag
  824    00000000              #define AT91C_US_DCDIC            (0x1 << 18) //
                                (USART) Data Carrier Flag
  825    00000000              #define AT91C_US_CTSIC            (0x1 << 19) //
                                (USART) Clear To Send Input Change Flag
  826    00000000              // -------- US_IDR : (USART Offset: 0xc) Debug
                                Unit Interrupt Disable Register --------
                                
  827    00000000              // -------- US_IMR : (USART Offset: 0x10) Debug
                                Unit Interrupt Mask Register --------
                                
  828    00000000              // -------- US_CSR : (USART Offset: 0x14) Debug
                                Unit Channel Status Register --------
                                
  829    00000000              #define AT91C_US_RI               (0x1 << 20) //
                                (USART) Image of RI Input
  830    00000000              #define AT91C_US_DSR              (0x1 << 21) //
                                (USART) Image of DSR Input
  831    00000000              #define AT91C_US_DCD              (0x1 << 22) //
                                (USART) Image of DCD Input
  832    00000000              #define AT91C_US_CTS              (0x1 << 23) //
                                (USART) Image of CTS Input
  833    00000000              
  834    00000000              // *********************************************
                               ********************************
  835    00000000              //              SOFTWARE API DEFINITION  FOR
                                Two-wire Interface
  836    00000000              // *********************************************
                               ********************************
  837    00000000              // *** Register offset in AT91S_TWI structure
                                ***
  838    00000000              #define TWI_CR          ( 0) // Control
                                Register
  839    00000000              #define TWI_MMR         ( 4) // Master Mode
                                Register
  840    00000000              #define TWI_IADR        (12) // Internal Address
                                Register
  841    00000000              #define TWI_CWGR        (16) // Clock Waveform
                                Generator Register
  842    00000000              #define TWI_SR          (32) // Status
                                Register
  843    00000000              #define TWI_IER         (36) // Interrupt Enable
                                Register
  844    00000000              #define TWI_IDR         (40) // Interrupt
                                Disable Register
  845    00000000              #define TWI_IMR         (44) // Interrupt Mask
                                Register
  846    00000000              #define TWI_RHR         (48) // Receive Holding
                                Register
  847    00000000              #define TWI_THR         (52) // Transmit Holding
                                Register
  848    00000000              // -------- TWI_CR : (TWI Offset: 0x0) TWI
                                Control Register -------- 
  849    00000000              #define AT91C_TWI_START           (0x1 <<  0) //
                                (TWI) Send a START Condition
  850    00000000              #define AT91C_TWI_STOP            (0x1 <<  1) //
                                (TWI) Send a STOP Condition
  851    00000000              #define AT91C_TWI_MSEN            (0x1 <<  2) //
                                (TWI) TWI Master Transfer Enabled
  852    00000000              #define AT91C_TWI_MSDIS           (0x1 <<  3) //
                                (TWI) TWI Master Transfer Disabled
  853    00000000              #define AT91C_TWI_SWRST           (0x1 <<  7) //
                                (TWI) Software Reset
  854    00000000              // -------- TWI_MMR : (TWI Offset: 0x4) TWI
                                Master Mode Register -------- 
  855    00000000              #define AT91C_TWI_IADRSZ          (0x3 <<  8) //
                                (TWI) Internal Device Address Size
  856    00000000              #define         AT91C_TWI_IADRSZ_NO             
                                     (0x0 <<  8) // (TWI) No internal device
                                address
  857    00000000              #define         AT91C_TWI_IADRSZ_1_BYTE         
                                     (0x1 <<  8) // (TWI) One-byte internal
                                device address
  858    00000000              #define         AT91C_TWI_IADRSZ_2_BYTE         
                                     (0x2 <<  8) // (TWI) Two-byte internal
                                device address
  859    00000000              #define         AT91C_TWI_IADRSZ_3_BYTE         
                                     (0x3 <<  8) // (TWI) Three-byte internal
                                device address
  860    00000000              #define AT91C_TWI_MREAD           (0x1 << 12) //
                                (TWI) Master Read Direction
  861    00000000              #define AT91C_TWI_DADR            (0x7F << 16)
                                // (TWI) Device Address
  862    00000000              // -------- TWI_CWGR : (TWI Offset: 0x10) TWI
                                Clock Waveform Generator Register --------
                                
  863    00000000              #define AT91C_TWI_CLDIV           (0xFF <<  0)
                                // (TWI) Clock Low Divider
  864    00000000              #define AT91C_TWI_CHDIV           (0xFF <<  8)
                                // (TWI) Clock High Divider
  865    00000000              #define AT91C_TWI_CKDIV           (0x7 << 16) //
                                (TWI) Clock Divider
  866    00000000              // -------- TWI_SR : (TWI Offset: 0x20) TWI
                                Status Register -------- 
  867    00000000              #define AT91C_TWI_TXCOMP          (0x1 <<  0) //
                                (TWI) Transmission Completed
  868    00000000              #define AT91C_TWI_RXRDY           (0x1 <<  1) //
                                (TWI) Receive holding register ReaDY
  869    00000000              #define AT91C_TWI_TXRDY           (0x1 <<  2) //
                                (TWI) Transmit holding register ReaDY
  870    00000000              #define AT91C_TWI_OVRE            (0x1 <<  6) //
                                (TWI) Overrun Error
  871    00000000              #define AT91C_TWI_UNRE            (0x1 <<  7) //
                                (TWI) Underrun Error
  872    00000000              #define AT91C_TWI_NACK            (0x1 <<  8) //
                                (TWI) Not Acknowledged
  873    00000000              // -------- TWI_IER : (TWI Offset: 0x24) TWI
                                Interrupt Enable Register -------- 
  874    00000000              // -------- TWI_IDR : (TWI Offset: 0x28) TWI
                                Interrupt Disable Register -------- 
  875    00000000              // -------- TWI_IMR : (TWI Offset: 0x2c) TWI
                                Interrupt Mask Register -------- 
  876    00000000              
  877    00000000              // *********************************************
                               ********************************
  878    00000000              //              SOFTWARE API DEFINITION  FOR
                                Timer Counter Channel Interface
  879    00000000              // *********************************************
                               ********************************
  880    00000000              // *** Register offset in AT91S_TC structure
                                ***
  881    00000000              #define TC_CCR          ( 0) // Channel Control
                                Register
  882    00000000              #define TC_CMR          ( 4) // Channel Mode
                                Register (Capture Mode / Waveform Mode)
  883    00000000              #define TC_CV           (16) // Counter
                                Value
  884    00000000              #define TC_RA           (20) // Register
                                A
  885    00000000              #define TC_RB           (24) // Register
                                B
  886    00000000              #define TC_RC           (28) // Register
                                C
  887    00000000              #define TC_SR           (32) // Status
                                Register
  888    00000000              #define TC_IER          (36) // Interrupt Enable
                                Register
  889    00000000              #define TC_IDR          (40) // Interrupt
                                Disable Register
  890    00000000              #define TC_IMR          (44) // Interrupt Mask
                                Register
  891    00000000              // -------- TC_CCR : (TC Offset: 0x0) TC Channel
                                Control Register -------- 
  892    00000000              #define AT91C_TC_CLKEN            (0x1 <<  0) //
                                (TC) Counter Clock Enable Command
  893    00000000              #define AT91C_TC_CLKDIS           (0x1 <<  1) //
                                (TC) Counter Clock Disable Command
  894    00000000              #define AT91C_TC_SWTRG            (0x1 <<  2) //
                                (TC) Software Trigger Command
  895    00000000              // -------- TC_CMR : (TC Offset: 0x4) TC Channel
                                Mode Register: Capture Mode / Waveform Mode
                                -------- 
  896    00000000              #define AT91C_TC_CLKS             (0x7 <<  0) //
                                (TC) Clock Selection
  897    00000000              #define         AT91C_TC_CLKS_TIMER_DIV1_CLOCK  
                                  (0x0) // (TC) Clock selected: TIMER_DIV1_CLOC
                               K
  898    00000000              #define         AT91C_TC_CLKS_TIMER_DIV2_CLOCK  
                                  (0x1) // (TC) Clock selected: TIMER_DIV2_CLOC
                               K
  899    00000000              #define         AT91C_TC_CLKS_TIMER_DIV3_CLOCK  
                                  (0x2) // (TC) Clock selected: TIMER_DIV3_CLOC
                               K
  900    00000000              #define         AT91C_TC_CLKS_TIMER_DIV4_CLOCK  
                                  (0x3) // (TC) Clock selected: TIMER_DIV4_CLOC
                               K
  901    00000000              #define         AT91C_TC_CLKS_TIMER_DIV5_CLOCK  
                                  (0x4) // (TC) Clock selected: TIMER_DIV5_CLOC
                               K
  902    00000000              #define         AT91C_TC_CLKS_XC0               
                                  (0x5) // (TC) Clock selected: XC0
  903    00000000              #define         AT91C_TC_CLKS_XC1               
                                  (0x6) // (TC) Clock selected: XC1
  904    00000000              #define         AT91C_TC_CLKS_XC2               
                                  (0x7) // (TC) Clock selected: XC2
  905    00000000              #define AT91C_TC_CLKI             (0x1 <<  3) //
                                (TC) Clock Invert
  906    00000000              #define AT91C_TC_BURST            (0x3 <<  4) //
                                (TC) Burst Signal Selection
  907    00000000              #define         AT91C_TC_BURST_NONE             
                                   (0x0 <<  4) // (TC) The clock is not gated
                                by an external signal
  908    00000000              #define         AT91C_TC_BURST_XC0              
                                   (0x1 <<  4) // (TC) XC0 is ANDed with the
                                selected clock
  909    00000000              #define         AT91C_TC_BURST_XC1              
                                   (0x2 <<  4) // (TC) XC1 is ANDed with the
                                selected clock
  910    00000000              #define         AT91C_TC_BURST_XC2              
                                   (0x3 <<  4) // (TC) XC2 is ANDed with the
                                selected clock
  911    00000000              #define AT91C_TC_CPCSTOP          (0x1 <<  6) //
                                (TC) Counter Clock Stopped with RC Compare
  912    00000000              #define AT91C_TC_LDBSTOP          (0x1 <<  6) //
                                (TC) Counter Clock Stopped with RB Loading
  913    00000000              #define AT91C_TC_CPCDIS           (0x1 <<  7) //
                                (TC) Counter Clock Disable with RC Compare
  914    00000000              #define AT91C_TC_LDBDIS           (0x1 <<  7) //
                                (TC) Counter Clock Disabled with RB Loading
  915    00000000              #define AT91C_TC_ETRGEDG          (0x3 <<  8) //
                                (TC) External Trigger Edge Selection
  916    00000000              #define         AT91C_TC_ETRGEDG_NONE           
                                     (0x0 <<  8) // (TC) Edge: None
  917    00000000              #define         AT91C_TC_ETRGEDG_RISING         
                                     (0x1 <<  8) // (TC) Edge: rising
                                edge
  918    00000000              #define         AT91C_TC_ETRGEDG_FALLING        
                                     (0x2 <<  8) // (TC) Edge: falling
                                edge
  919    00000000              #define         AT91C_TC_ETRGEDG_BOTH           
                                     (0x3 <<  8) // (TC) Edge: each edge
  920    00000000              #define AT91C_TC_EEVTEDG          (0x3 <<  8) //
                                (TC) External Event Edge Selection
  921    00000000              #define         AT91C_TC_EEVTEDG_NONE           
                                     (0x0 <<  8) // (TC) Edge: None
  922    00000000              #define         AT91C_TC_EEVTEDG_RISING         
                                     (0x1 <<  8) // (TC) Edge: rising
                                edge
  923    00000000              #define         AT91C_TC_EEVTEDG_FALLING        
                                     (0x2 <<  8) // (TC) Edge: falling
                                edge
  924    00000000              #define         AT91C_TC_EEVTEDG_BOTH           
                                     (0x3 <<  8) // (TC) Edge: each edge
  925    00000000              #define AT91C_TC_EEVT             (0x3 << 10) //
                                (TC) External Event  Selection
  926    00000000              #define         AT91C_TC_EEVT_TIOB              
                                  (0x0 << 10) // (TC) Signal selected as
                                external event: TIOB TIOB direction: input
  927    00000000              #define         AT91C_TC_EEVT_XC0               
                                  (0x1 << 10) // (TC) Signal selected as
                                external event: XC0 TIOB direction: output
  928    00000000              #define         AT91C_TC_EEVT_XC1               
                                  (0x2 << 10) // (TC) Signal selected as
                                external event: XC1 TIOB direction: output
  929    00000000              #define         AT91C_TC_EEVT_XC2               
                                  (0x3 << 10) // (TC) Signal selected as
                                external event: XC2 TIOB direction: output
  930    00000000              #define AT91C_TC_ABETRG           (0x1 << 10) //
                                (TC) TIOA or TIOB External Trigger Selection
  931    00000000              #define AT91C_TC_ENETRG           (0x1 << 12) //
                                (TC) External Event Trigger enable
  932    00000000              #define AT91C_TC_WAVESEL          (0x3 << 13) //
                                (TC) Waveform  Selection
  933    00000000              #define         AT91C_TC_WAVESEL_UP             
                                     (0x0 << 13) // (TC) UP mode without
                                atomatic trigger on RC Compare
  934    00000000              #define         AT91C_TC_WAVESEL_UPDOWN         
                                     (0x1 << 13) // (TC) UPDOWN mode without
                                automatic trigger on RC Compare
  935    00000000              #define         AT91C_TC_WAVESEL_UP_AUTO        
                                     (0x2 << 13) // (TC) UP mode with automatic
                                trigger on RC Compare
  936    00000000              #define         AT91C_TC_WAVESEL_UPDOWN_AUTO    
                                     (0x3 << 13) // (TC) UPDOWN mode with
                                automatic trigger on RC Compare
  937    00000000              #define AT91C_TC_CPCTRG           (0x1 << 14) //
                                (TC) RC Compare Trigger Enable
  938    00000000              #define AT91C_TC_WAVE             (0x1 << 15) //
                                (TC) 
  939    00000000              #define AT91C_TC_ACPA             (0x3 << 16) //
                                (TC) RA Compare Effect on TIOA
  940    00000000              #define         AT91C_TC_ACPA_NONE              
                                  (0x0 << 16) // (TC) Effect: none
  941    00000000              #define         AT91C_TC_ACPA_SET               
                                  (0x1 << 16) // (TC) Effect: set
  942    00000000              #define         AT91C_TC_ACPA_CLEAR             
                                  (0x2 << 16) // (TC) Effect: clear
  943    00000000              #define         AT91C_TC_ACPA_TOGGLE            
                                  (0x3 << 16) // (TC) Effect: toggle
  944    00000000              #define AT91C_TC_LDRA             (0x3 << 16) //
                                (TC) RA Loading Selection
  945    00000000              #define         AT91C_TC_LDRA_NONE              
                                  (0x0 << 16) // (TC) Edge: None
  946    00000000              #define         AT91C_TC_LDRA_RISING            
                                  (0x1 << 16) // (TC) Edge: rising edge of
                                TIOA
  947    00000000              #define         AT91C_TC_LDRA_FALLING           
                                  (0x2 << 16) // (TC) Edge: falling edge of
                                TIOA
  948    00000000              #define         AT91C_TC_LDRA_BOTH              
                                  (0x3 << 16) // (TC) Edge: each edge of
                                TIOA
  949    00000000              #define AT91C_TC_ACPC             (0x3 << 18) //
                                (TC) RC Compare Effect on TIOA
  950    00000000              #define         AT91C_TC_ACPC_NONE              
                                  (0x0 << 18) // (TC) Effect: none
  951    00000000              #define         AT91C_TC_ACPC_SET               
                                  (0x1 << 18) // (TC) Effect: set
  952    00000000              #define         AT91C_TC_ACPC_CLEAR             
                                  (0x2 << 18) // (TC) Effect: clear
  953    00000000              #define         AT91C_TC_ACPC_TOGGLE            
                                  (0x3 << 18) // (TC) Effect: toggle
  954    00000000              #define AT91C_TC_LDRB             (0x3 << 18) //
                                (TC) RB Loading Selection
  955    00000000              #define         AT91C_TC_LDRB_NONE              
                                  (0x0 << 18) // (TC) Edge: None
  956    00000000              #define         AT91C_TC_LDRB_RISING            
                                  (0x1 << 18) // (TC) Edge: rising edge of
                                TIOA
  957    00000000              #define         AT91C_TC_LDRB_FALLING           
                                  (0x2 << 18) // (TC) Edge: falling edge of
                                TIOA
  958    00000000              #define         AT91C_TC_LDRB_BOTH              
                                  (0x3 << 18) // (TC) Edge: each edge of
                                TIOA
  959    00000000              #define AT91C_TC_AEEVT            (0x3 << 20) //
                                (TC) External Event Effect on TIOA
  960    00000000              #define         AT91C_TC_AEEVT_NONE             
                                   (0x0 << 20) // (TC) Effect: none
  961    00000000              #define         AT91C_TC_AEEVT_SET              
                                   (0x1 << 20) // (TC) Effect: set
  962    00000000              #define         AT91C_TC_AEEVT_CLEAR            
                                   (0x2 << 20) // (TC) Effect: clear
  963    00000000              #define         AT91C_TC_AEEVT_TOGGLE           
                                   (0x3 << 20) // (TC) Effect: toggle
  964    00000000              #define AT91C_TC_ASWTRG           (0x3 << 22) //
                                (TC) Software Trigger Effect on TIOA
  965    00000000              #define         AT91C_TC_ASWTRG_NONE            
                                    (0x0 << 22) // (TC) Effect: none
  966    00000000              #define         AT91C_TC_ASWTRG_SET             
                                    (0x1 << 22) // (TC) Effect: set
  967    00000000              #define         AT91C_TC_ASWTRG_CLEAR           
                                    (0x2 << 22) // (TC) Effect: clear
  968    00000000              #define         AT91C_TC_ASWTRG_TOGGLE          
                                    (0x3 << 22) // (TC) Effect: toggle
  969    00000000              #define AT91C_TC_BCPB             (0x3 << 24) //
                                (TC) RB Compare Effect on TIOB
  970    00000000              #define         AT91C_TC_BCPB_NONE              
                                  (0x0 << 24) // (TC) Effect: none
  971    00000000              #define         AT91C_TC_BCPB_SET               
                                  (0x1 << 24) // (TC) Effect: set
  972    00000000              #define         AT91C_TC_BCPB_CLEAR             
                                  (0x2 << 24) // (TC) Effect: clear
  973    00000000              #define         AT91C_TC_BCPB_TOGGLE            
                                  (0x3 << 24) // (TC) Effect: toggle
  974    00000000              #define AT91C_TC_BCPC             (0x3 << 26) //
                                (TC) RC Compare Effect on TIOB
  975    00000000              #define         AT91C_TC_BCPC_NONE              
                                  (0x0 << 26) // (TC) Effect: none
  976    00000000              #define         AT91C_TC_BCPC_SET               
                                  (0x1 << 26) // (TC) Effect: set
  977    00000000              #define         AT91C_TC_BCPC_CLEAR             
                                  (0x2 << 26) // (TC) Effect: clear
  978    00000000              #define         AT91C_TC_BCPC_TOGGLE            
                                  (0x3 << 26) // (TC) Effect: toggle
  979    00000000              #define AT91C_TC_BEEVT            (0x3 << 28) //
                                (TC) External Event Effect on TIOB
  980    00000000              #define         AT91C_TC_BEEVT_NONE             
                                   (0x0 << 28) // (TC) Effect: none
  981    00000000              #define         AT91C_TC_BEEVT_SET              
                                   (0x1 << 28) // (TC) Effect: set
  982    00000000              #define         AT91C_TC_BEEVT_CLEAR            
                                   (0x2 << 28) // (TC) Effect: clear
  983    00000000              #define         AT91C_TC_BEEVT_TOGGLE           
                                   (0x3 << 28) // (TC) Effect: toggle
  984    00000000              #define AT91C_TC_BSWTRG           (0x3 << 30) //
                                (TC) Software Trigger Effect on TIOB
  985    00000000              #define         AT91C_TC_BSWTRG_NONE            
                                    (0x0 << 30) // (TC) Effect: none
  986    00000000              #define         AT91C_TC_BSWTRG_SET             
                                    (0x1 << 30) // (TC) Effect: set
  987    00000000              #define         AT91C_TC_BSWTRG_CLEAR           
                                    (0x2 << 30) // (TC) Effect: clear
  988    00000000              #define         AT91C_TC_BSWTRG_TOGGLE          
                                    (0x3 << 30) // (TC) Effect: toggle
  989    00000000              // -------- TC_SR : (TC Offset: 0x20) TC Channel
                                Status Register -------- 
  990    00000000              #define AT91C_TC_COVFS            (0x1 <<  0) //
                                (TC) Counter Overflow
  991    00000000              #define AT91C_TC_LOVRS            (0x1 <<  1) //
                                (TC) Load Overrun
  992    00000000              #define AT91C_TC_CPAS             (0x1 <<  2) //
                                (TC) RA Compare
  993    00000000              #define AT91C_TC_CPBS             (0x1 <<  3) //
                                (TC) RB Compare
  994    00000000              #define AT91C_TC_CPCS             (0x1 <<  4) //
                                (TC) RC Compare
  995    00000000              #define AT91C_TC_LDRAS            (0x1 <<  5) //
                                (TC) RA Loading
  996    00000000              #define AT91C_TC_LDRBS            (0x1 <<  6) //
                                (TC) RB Loading
  997    00000000              #define AT91C_TC_ETRGS            (0x1 <<  7) //
                                (TC) External Trigger
  998    00000000              #define AT91C_TC_CLKSTA           (0x1 << 16) //
                                (TC) Clock Enabling
  999    00000000              #define AT91C_TC_MTIOA            (0x1 << 17) //
                                (TC) TIOA Mirror
 1000    00000000              #define AT91C_TC_MTIOB            (0x1 << 18) //
                                (TC) TIOA Mirror
 1001    00000000              // -------- TC_IER : (TC Offset: 0x24) TC
                                Channel Interrupt Enable Register --------
                                
 1002    00000000              // -------- TC_IDR : (TC Offset: 0x28) TC
                                Channel Interrupt Disable Register --------
                                
 1003    00000000              // -------- TC_IMR : (TC Offset: 0x2c) TC
                                Channel Interrupt Mask Register --------
                                
 1004    00000000              
 1005    00000000              // *********************************************
                               ********************************
 1006    00000000              //              SOFTWARE API DEFINITION  FOR
                                Timer Counter Interface
 1007    00000000              // *********************************************
                               ********************************
 1008    00000000              // *** Register offset in AT91S_TCB structure
                                ***
 1009    00000000              #define TCB_TC0         ( 0) // TC Channel
                                0
 1010    00000000              #define TCB_TC1         (64) // TC Channel
                                1
 1011    00000000              #define TCB_TC2         (128) // TC Channel
                                2
 1012    00000000              #define TCB_BCR         (192) // TC Block
                                Control Register
 1013    00000000              #define TCB_BMR         (196) // TC Block Mode
                                Register
 1014    00000000              // -------- TCB_BCR : (TCB Offset: 0xc0) TC
                                Block Control Register -------- 
 1015    00000000              #define AT91C_TCB_SYNC            (0x1 <<  0) //
                                (TCB) Synchro Command
 1016    00000000              // -------- TCB_BMR : (TCB Offset: 0xc4) TC
                                Block Mode Register -------- 
 1017    00000000              #define AT91C_TCB_TC0XC0S         (0x3 <<  0) //
                                (TCB) External Clock Signal 0 Selection
 1018    00000000              #define         AT91C_TCB_TC0XC0S_TCLK0         
                                      (0x0) // (TCB) TCLK0 connected to
                                XC0
 1019    00000000              #define         AT91C_TCB_TC0XC0S_NONE          
                                      (0x1) // (TCB) None signal connected to
                                XC0
 1020    00000000              #define         AT91C_TCB_TC0XC0S_TIOA1         
                                      (0x2) // (TCB) TIOA1 connected to
                                XC0
 1021    00000000              #define         AT91C_TCB_TC0XC0S_TIOA2         
                                      (0x3) // (TCB) TIOA2 connected to
                                XC0
 1022    00000000              #define AT91C_TCB_TC1XC1S         (0x3 <<  2) //
                                (TCB) External Clock Signal 1 Selection
 1023    00000000              #define         AT91C_TCB_TC1XC1S_TCLK1         
                                      (0x0 <<  2) // (TCB) TCLK1 connected to
                                XC1
 1024    00000000              #define         AT91C_TCB_TC1XC1S_NONE          
                                      (0x1 <<  2) // (TCB) None signal
                                connected to XC1
 1025    00000000              #define         AT91C_TCB_TC1XC1S_TIOA0         
                                      (0x2 <<  2) // (TCB) TIOA0 connected to
                                XC1
 1026    00000000              #define         AT91C_TCB_TC1XC1S_TIOA2         
                                      (0x3 <<  2) // (TCB) TIOA2 connected to
                                XC1
 1027    00000000              #define AT91C_TCB_TC2XC2S         (0x3 <<  4) //
                                (TCB) External Clock Signal 2 Selection
 1028    00000000              #define         AT91C_TCB_TC2XC2S_TCLK2         
                                      (0x0 <<  4) // (TCB) TCLK2 connected to
                                XC2
 1029    00000000              #define         AT91C_TCB_TC2XC2S_NONE          
                                      (0x1 <<  4) // (TCB) None signal
                                connected to XC2
 1030    00000000              #define         AT91C_TCB_TC2XC2S_TIOA0         
                                      (0x2 <<  4) // (TCB) TIOA0 connected to
                                XC2
 1031    00000000              #define         AT91C_TCB_TC2XC2S_TIOA1         
                                      (0x3 <<  4) // (TCB) TIOA2 connected to
                                XC2
 1032    00000000              
 1033    00000000              // *********************************************
                               ********************************
 1034    00000000              //              SOFTWARE API DEFINITION  FOR
                                PWMC Channel Interface
 1035    00000000              // *********************************************
                               ********************************
 1036    00000000              // *** Register offset in AT91S_PWMC_CH
                                structure ***
 1037    00000000              #define PWMC_CMR        ( 0) // Channel Mode
                                Register
 1038    00000000              #define PWMC_CDTYR      ( 4) // Channel Duty
                                Cycle Register
 1039    00000000              #define PWMC_CPRDR      ( 8) // Channel Period
                                Register
 1040    00000000              #define PWMC_CCNTR      (12) // Channel Counter
                                Register
 1041    00000000              #define PWMC_CUPDR      (16) // Channel Update
                                Register
 1042    00000000              #define PWMC_Reserved   (20) // Reserved
 1043    00000000              // -------- PWMC_CMR : (PWMC_CH Offset: 0x0)
                                PWMC Channel Mode Register -------- 
 1044    00000000              #define AT91C_PWMC_CPRE           (0xF <<  0) //
                                (PWMC_CH) Channel Pre-scaler : PWMC_CLKx
 1045    00000000              #define         AT91C_PWMC_CPRE_MCK             
                                    (0x0) // (PWMC_CH) 
 1046    00000000              #define         AT91C_PWMC_CPRE_MCKA            
                                    (0xB) // (PWMC_CH) 
 1047    00000000              #define         AT91C_PWMC_CPRE_MCKB            
                                    (0xC) // (PWMC_CH) 
 1048    00000000              #define AT91C_PWMC_CALG           (0x1 <<  8) //
                                (PWMC_CH) Channel Alignment
 1049    00000000              #define AT91C_PWMC_CPOL           (0x1 <<  9) //
                                (PWMC_CH) Channel Polarity
 1050    00000000              #define AT91C_PWMC_CPD            (0x1 << 10) //
                                (PWMC_CH) Channel Update Period
 1051    00000000              // -------- PWMC_CDTYR : (PWMC_CH Offset: 0x4)
                                PWMC Channel Duty Cycle Register --------
                                
 1052    00000000              #define AT91C_PWMC_CDTY           (0x0 <<  0) //
                                (PWMC_CH) Channel Duty Cycle
 1053    00000000              // -------- PWMC_CPRDR : (PWMC_CH Offset: 0x8)
                                PWMC Channel Period Register --------
                                
 1054    00000000              #define AT91C_PWMC_CPRD           (0x0 <<  0) //
                                (PWMC_CH) Channel Period
 1055    00000000              // -------- PWMC_CCNTR : (PWMC_CH Offset: 0xc)
                                PWMC Channel Counter Register --------
                                
 1056    00000000              #define AT91C_PWMC_CCNT           (0x0 <<  0) //
                                (PWMC_CH) Channel Counter
 1057    00000000              // -------- PWMC_CUPDR : (PWMC_CH Offset: 0x10)
                                PWMC Channel Update Register --------
                                
 1058    00000000              #define AT91C_PWMC_CUPD           (0x0 <<  0) //
                                (PWMC_CH) Channel Update
 1059    00000000              
 1060    00000000              // *********************************************
                               ********************************
 1061    00000000              //              SOFTWARE API DEFINITION  FOR
                                Pulse Width Modulation Controller Interface
 1062    00000000              // *********************************************
                               ********************************
 1063    00000000              // *** Register offset in AT91S_PWMC structure
                                ***
 1064    00000000              #define PWMC_MR         ( 0) // PWMC Mode
                                Register
 1065    00000000              #define PWMC_ENA        ( 4) // PWMC Enable
                                Register
 1066    00000000              #define PWMC_DIS        ( 8) // PWMC Disable
                                Register
 1067    00000000              #define PWMC_SR         (12) // PWMC Status
                                Register
 1068    00000000              #define PWMC_IER        (16) // PWMC Interrupt
                                Enable Register
 1069    00000000              #define PWMC_IDR        (20) // PWMC Interrupt
                                Disable Register
 1070    00000000              #define PWMC_IMR        (24) // PWMC Interrupt
                                Mask Register
 1071    00000000              #define PWMC_ISR        (28) // PWMC Interrupt
                                Status Register
 1072    00000000              #define PWMC_VR         (252) // PWMC Version
                                Register
 1073    00000000              #define PWMC_CH         (512) // PWMC Channel
 1074    00000000              // -------- PWMC_MR : (PWMC Offset: 0x0) PWMC
                                Mode Register -------- 
 1075    00000000              #define AT91C_PWMC_DIVA           (0xFF <<  0)
                                // (PWMC) CLKA divide factor.
 1076    00000000              #define AT91C_PWMC_PREA           (0xF <<  8) //
                                (PWMC) Divider Input Clock Prescaler A
 1077    00000000              #define         AT91C_PWMC_PREA_MCK             
                                    (0x0 <<  8) // (PWMC) 
 1078    00000000              #define AT91C_PWMC_DIVB           (0xFF << 16)
                                // (PWMC) CLKB divide factor.
 1079    00000000              #define AT91C_PWMC_PREB           (0xF << 24) //
                                (PWMC) Divider Input Clock Prescaler B
 1080    00000000              #define         AT91C_PWMC_PREB_MCK             
                                    (0x0 << 24) // (PWMC) 
 1081    00000000              // -------- PWMC_ENA : (PWMC Offset: 0x4) PWMC
                                Enable Register -------- 
 1082    00000000              #define AT91C_PWMC_CHID0          (0x1 <<  0) //
                                (PWMC) Channel ID 0
 1083    00000000              #define AT91C_PWMC_CHID1          (0x1 <<  1) //
                                (PWMC) Channel ID 1
 1084    00000000              #define AT91C_PWMC_CHID2          (0x1 <<  2) //
                                (PWMC) Channel ID 2
 1085    00000000              #define AT91C_PWMC_CHID3          (0x1 <<  3) //
                                (PWMC) Channel ID 3
 1086    00000000              // -------- PWMC_DIS : (PWMC Offset: 0x8) PWMC
                                Disable Register -------- 
 1087    00000000              // -------- PWMC_SR : (PWMC Offset: 0xc) PWMC
                                Status Register -------- 
 1088    00000000              // -------- PWMC_IER : (PWMC Offset: 0x10) PWMC
                                Interrupt Enable Register -------- 
 1089    00000000              // -------- PWMC_IDR : (PWMC Offset: 0x14) PWMC
                                Interrupt Disable Register -------- 
 1090    00000000              // -------- PWMC_IMR : (PWMC Offset: 0x18) PWMC
                                Interrupt Mask Register -------- 
 1091    00000000              // -------- PWMC_ISR : (PWMC Offset: 0x1c) PWMC
                                Interrupt Status Register -------- 
 1092    00000000              
 1093    00000000              // *********************************************
                               ********************************
 1094    00000000              //              SOFTWARE API DEFINITION  FOR USB
                                Device Interface
 1095    00000000              // *********************************************
                               ********************************
 1096    00000000              // *** Register offset in AT91S_UDP structure
                                ***
 1097    00000000              #define UDP_NUM         ( 0) // Frame Number
                                Register
 1098    00000000              #define UDP_GLBSTATE    ( 4) // Global State
                                Register
 1099    00000000              #define UDP_FADDR       ( 8) // Function Address
                                Register
 1100    00000000              #define UDP_IER         (16) // Interrupt Enable
                                Register
 1101    00000000              #define UDP_IDR         (20) // Interrupt
                                Disable Register
 1102    00000000              #define UDP_IMR         (24) // Interrupt Mask
                                Register
 1103    00000000              #define UDP_ISR         (28) // Interrupt Status
                                Register
 1104    00000000              #define UDP_ICR         (32) // Interrupt Clear
                                Register
 1105    00000000              #define UDP_RSTEP       (40) // Reset Endpoint
                                Register
 1106    00000000              #define UDP_CSR         (48) // Endpoint Control
                                and Status Register
 1107    00000000              #define UDP_FDR         (80) // Endpoint FIFO
                                Data Register
 1108    00000000              #define UDP_TXVC        (116) // Transceiver
                                Control Register
 1109    00000000              // -------- UDP_FRM_NUM : (UDP Offset: 0x0) USB
                                Frame Number Register -------- 
 1110    00000000              #define AT91C_UDP_FRM_NUM         (0x7FF <<  0)
                                // (UDP) Frame Number as Defined in the Packet
                                Field Formats
 1111    00000000              #define AT91C_UDP_FRM_ERR         (0x1 << 16) //
                                (UDP) Frame Error
 1112    00000000              #define AT91C_UDP_FRM_OK          (0x1 << 17) //
                                (UDP) Frame OK
 1113    00000000              // -------- UDP_GLB_STATE : (UDP Offset: 0x4)
                                USB Global State Register -------- 
 1114    00000000              #define AT91C_UDP_FADDEN          (0x1 <<  0) //
                                (UDP) Function Address Enable
 1115    00000000              #define AT91C_UDP_CONFG           (0x1 <<  1) //
                                (UDP) Configured
 1116    00000000              #define AT91C_UDP_ESR             (0x1 <<  2) //
                                (UDP) Enable Send Resume
 1117    00000000              #define AT91C_UDP_RSMINPR         (0x1 <<  3) //
                                (UDP) A Resume Has Been Sent to the Host
 1118    00000000              #define AT91C_UDP_RMWUPE          (0x1 <<  4) //
                                (UDP) Remote Wake Up Enable
 1119    00000000              // -------- UDP_FADDR : (UDP Offset: 0x8) USB
                                Function Address Register -------- 
 1120    00000000              #define AT91C_UDP_FADD            (0xFF <<  0)
                                // (UDP) Function Address Value
 1121    00000000              #define AT91C_UDP_FEN             (0x1 <<  8) //
                                (UDP) Function Enable
 1122    00000000              // -------- UDP_IER : (UDP Offset: 0x10) USB
                                Interrupt Enable Register -------- 
 1123    00000000              #define AT91C_UDP_EPINT0          (0x1 <<  0) //
                                (UDP) Endpoint 0 Interrupt
 1124    00000000              #define AT91C_UDP_EPINT1          (0x1 <<  1) //
                                (UDP) Endpoint 0 Interrupt
 1125    00000000              #define AT91C_UDP_EPINT2          (0x1 <<  2) //
                                (UDP) Endpoint 2 Interrupt
 1126    00000000              #define AT91C_UDP_EPINT3          (0x1 <<  3) //
                                (UDP) Endpoint 3 Interrupt
 1127    00000000              #define AT91C_UDP_RXSUSP          (0x1 <<  8) //
                                (UDP) USB Suspend Interrupt
 1128    00000000              #define AT91C_UDP_RXRSM           (0x1 <<  9) //
                                (UDP) USB Resume Interrupt
 1129    00000000              #define AT91C_UDP_EXTRSM          (0x1 << 10) //
                                (UDP) USB External Resume Interrupt
 1130    00000000              #define AT91C_UDP_SOFINT          (0x1 << 11) //
                                (UDP) USB Start Of frame Interrupt
 1131    00000000              #define AT91C_UDP_WAKEUP          (0x1 << 13) //
                                (UDP) USB Resume Interrupt
 1132    00000000              // -------- UDP_IDR : (UDP Offset: 0x14) USB
                                Interrupt Disable Register -------- 
 1133    00000000              // -------- UDP_IMR : (UDP Offset: 0x18) USB
                                Interrupt Mask Register -------- 
 1134    00000000              // -------- UDP_ISR : (UDP Offset: 0x1c) USB
                                Interrupt Status Register -------- 
 1135    00000000              #define AT91C_UDP_ENDBUSRES       (0x1 << 12) //
                                (UDP) USB End Of Bus Reset Interrupt
 1136    00000000              // -------- UDP_ICR : (UDP Offset: 0x20) USB
                                Interrupt Clear Register -------- 
 1137    00000000              // -------- UDP_RST_EP : (UDP Offset: 0x28) USB
                                Reset Endpoint Register -------- 
 1138    00000000              #define AT91C_UDP_EP0             (0x1 <<  0) //
                                (UDP) Reset Endpoint 0
 1139    00000000              #define AT91C_UDP_EP1             (0x1 <<  1) //
                                (UDP) Reset Endpoint 1
 1140    00000000              #define AT91C_UDP_EP2             (0x1 <<  2) //
                                (UDP) Reset Endpoint 2
 1141    00000000              #define AT91C_UDP_EP3             (0x1 <<  3) //
                                (UDP) Reset Endpoint 3
 1142    00000000              // -------- UDP_CSR : (UDP Offset: 0x30) USB
                                Endpoint Control and Status Register --------
                                
 1143    00000000              #define AT91C_UDP_TXCOMP          (0x1 <<  0) //
                                (UDP) Generates an IN packet with data
                                previously written in the DPR
 1144    00000000              #define AT91C_UDP_RX_DATA_BK0     (0x1 <<  1) //
                                (UDP) Receive Data Bank 0
 1145    00000000              #define AT91C_UDP_RXSETUP         (0x1 <<  2) //
                                (UDP) Sends STALL to the Host (Control
                                endpoints)
 1146    00000000              #define AT91C_UDP_ISOERROR        (0x1 <<  3) //
                                (UDP) Isochronous error (Isochronous endpoints)
 1147    00000000              #define AT91C_UDP_TXPKTRDY        (0x1 <<  4) //
                                (UDP) Transmit Packet Ready
 1148    00000000              #define AT91C_UDP_FORCESTALL      (0x1 <<  5) //
                                (UDP) Force Stall (used by Control, Bulk and
                                Isochronous endpoints).
 1149    00000000              #define AT91C_UDP_RX_DATA_BK1     (0x1 <<  6) //
                                (UDP) Receive Data Bank 1 (only used by
                                endpoints with ping-pong attributes).
 1150    00000000              #define AT91C_UDP_DIR             (0x1 <<  7) //
                                (UDP) Transfer Direction
 1151    00000000              #define AT91C_UDP_EPTYPE          (0x7 <<  8) //
                                (UDP) Endpoint type
 1152    00000000              #define         AT91C_UDP_EPTYPE_CTRL           
                                     (0x0 <<  8) // (UDP) Control
 1153    00000000              #define         AT91C_UDP_EPTYPE_ISO_OUT        
                                     (0x1 <<  8) // (UDP) Isochronous
                                OUT
 1154    00000000              #define         AT91C_UDP_EPTYPE_BULK_OUT       
                                     (0x2 <<  8) // (UDP) Bulk OUT
 1155    00000000              #define         AT91C_UDP_EPTYPE_INT_OUT        
                                     (0x3 <<  8) // (UDP) Interrupt OUT
 1156    00000000              #define         AT91C_UDP_EPTYPE_ISO_IN         
                                     (0x5 <<  8) // (UDP) Isochronous
                                IN
 1157    00000000              #define         AT91C_UDP_EPTYPE_BULK_IN        
                                     (0x6 <<  8) // (UDP) Bulk IN
 1158    00000000              #define         AT91C_UDP_EPTYPE_INT_IN         
                                     (0x7 <<  8) // (UDP) Interrupt IN
 1159    00000000              #define AT91C_UDP_DTGLE           (0x1 << 11) //
                                (UDP) Data Toggle
 1160    00000000              #define AT91C_UDP_EPEDS           (0x1 << 15) //
                                (UDP) Endpoint Enable Disable
 1161    00000000              #define AT91C_UDP_RXBYTECNT       (0x7FF << 16)
                                // (UDP) Number Of Bytes Available in the
                                FIFO
 1162    00000000              // -------- UDP_TXVC : (UDP Offset: 0x74)
                                Transceiver Control Register --------
                                
 1163    00000000              #define AT91C_UDP_TXVDIS          (0x1 <<  8) //
                                (UDP) 
 1164    00000000              
 1165    00000000              // *********************************************
                               ********************************
 1166    00000000              //               REGISTER ADDRESS DEFINITION FOR
                                AT91SAM7S256
 1167    00000000              // *********************************************
                               ********************************
 1168    00000000              // ========== Register definition for SYS
                                peripheral ========== 
 1169    00000000              // ========== Register definition for AIC
                                peripheral ========== 
 1170    00000000              #define AT91C_AIC_IVR             (0xFFFFF100)
                                // (AIC) IRQ Vector Register
 1171    00000000              #define AT91C_AIC_SMR             (0xFFFFF000)
                                // (AIC) Source Mode Register
 1172    00000000              #define AT91C_AIC_FVR             (0xFFFFF104)
                                // (AIC) FIQ Vector Register
 1173    00000000              #define AT91C_AIC_DCR             (0xFFFFF138)
                                // (AIC) Debug Control Register (Protect)
 1174    00000000              #define AT91C_AIC_EOICR           (0xFFFFF130)
                                // (AIC) End of Interrupt Command Register
 1175    00000000              #define AT91C_AIC_SVR             (0xFFFFF080)
                                // (AIC) Source Vector Register
 1176    00000000              #define AT91C_AIC_FFSR            (0xFFFFF148)
                                // (AIC) Fast Forcing Status Register
 1177    00000000              #define AT91C_AIC_ICCR            (0xFFFFF128)
                                // (AIC) Interrupt Clear Command Register
 1178    00000000              #define AT91C_AIC_ISR             (0xFFFFF108)
                                // (AIC) Interrupt Status Register
 1179    00000000              #define AT91C_AIC_IMR             (0xFFFFF110)
                                // (AIC) Interrupt Mask Register
 1180    00000000              #define AT91C_AIC_IPR             (0xFFFFF10C)
                                // (AIC) Interrupt Pending Register
 1181    00000000              #define AT91C_AIC_FFER            (0xFFFFF140)
                                // (AIC) Fast Forcing Enable Register
 1182    00000000              #define AT91C_AIC_IECR            (0xFFFFF120)
                                // (AIC) Interrupt Enable Command Register
 1183    00000000              #define AT91C_AIC_ISCR            (0xFFFFF12C)
                                // (AIC) Interrupt Set Command Register
 1184    00000000              #define AT91C_AIC_FFDR            (0xFFFFF144)
                                // (AIC) Fast Forcing Disable Register
 1185    00000000              #define AT91C_AIC_CISR            (0xFFFFF114)
                                // (AIC) Core Interrupt Status Register
 1186    00000000              #define AT91C_AIC_IDCR            (0xFFFFF124)
                                // (AIC) Interrupt Disable Command Register
 1187    00000000              #define AT91C_AIC_SPU             (0xFFFFF134)
                                // (AIC) Spurious Vector Register
 1188    00000000              // ========== Register definition for PDC_DBGU
                                peripheral ========== 
 1189    00000000              #define AT91C_DBGU_TCR            (0xFFFFF30C)
                                // (PDC_DBGU) Transmit Counter Register
 1190    00000000              #define AT91C_DBGU_RNPR           (0xFFFFF310)
                                // (PDC_DBGU) Receive Next Pointer Register
 1191    00000000              #define AT91C_DBGU_TNPR           (0xFFFFF318)
                                // (PDC_DBGU) Transmit Next Pointer Register
 1192    00000000              #define AT91C_DBGU_TPR            (0xFFFFF308)
                                // (PDC_DBGU) Transmit Pointer Register
 1193    00000000              #define AT91C_DBGU_RPR            (0xFFFFF300)
                                // (PDC_DBGU) Receive Pointer Register
 1194    00000000              #define AT91C_DBGU_RCR            (0xFFFFF304)
                                // (PDC_DBGU) Receive Counter Register
 1195    00000000              #define AT91C_DBGU_RNCR           (0xFFFFF314)
                                // (PDC_DBGU) Receive Next Counter Register
 1196    00000000              #define AT91C_DBGU_PTCR           (0xFFFFF320)
                                // (PDC_DBGU) PDC Transfer Control Register
 1197    00000000              #define AT91C_DBGU_PTSR           (0xFFFFF324)
                                // (PDC_DBGU) PDC Transfer Status Register
 1198    00000000              #define AT91C_DBGU_TNCR           (0xFFFFF31C)
                                // (PDC_DBGU) Transmit Next Counter Register
 1199    00000000              // ========== Register definition for DBGU
                                peripheral ========== 
 1200    00000000              #define AT91C_DBGU_EXID           (0xFFFFF244)
                                // (DBGU) Chip ID Extension Register
 1201    00000000              #define AT91C_DBGU_BRGR           (0xFFFFF220)
                                // (DBGU) Baud Rate Generator Register
 1202    00000000              #define AT91C_DBGU_IDR            (0xFFFFF20C)
                                // (DBGU) Interrupt Disable Register
 1203    00000000              #define AT91C_DBGU_CSR            (0xFFFFF214)
                                // (DBGU) Channel Status Register
 1204    00000000              #define AT91C_DBGU_CIDR           (0xFFFFF240)
                                // (DBGU) Chip ID Register
 1205    00000000              #define AT91C_DBGU_MR             (0xFFFFF204)
                                // (DBGU) Mode Register
 1206    00000000              #define AT91C_DBGU_IMR            (0xFFFFF210)
                                // (DBGU) Interrupt Mask Register
 1207    00000000              #define AT91C_DBGU_CR             (0xFFFFF200)
                                // (DBGU) Control Register
 1208    00000000              #define AT91C_DBGU_FNTR           (0xFFFFF248)
                                // (DBGU) Force NTRST Register
 1209    00000000              #define AT91C_DBGU_THR            (0xFFFFF21C)
                                // (DBGU) Transmitter Holding Register
 1210    00000000              #define AT91C_DBGU_RHR            (0xFFFFF218)
                                // (DBGU) Receiver Holding Register
 1211    00000000              #define AT91C_DBGU_IER            (0xFFFFF208)
                                // (DBGU) Interrupt Enable Register
 1212    00000000              // ========== Register definition for PIOA
                                peripheral ========== 
 1213    00000000              #define AT91C_PIOA_ODR            (0xFFFFF414)
                                // (PIOA) Output Disable Registerr
 1214    00000000              #define AT91C_PIOA_SODR           (0xFFFFF430)
                                // (PIOA) Set Output Data Register
 1215    00000000              #define AT91C_PIOA_ISR            (0xFFFFF44C)
                                // (PIOA) Interrupt Status Register
 1216    00000000              #define AT91C_PIOA_ABSR           (0xFFFFF478)
                                // (PIOA) AB Select Status Register
 1217    00000000              #define AT91C_PIOA_IER            (0xFFFFF440)
                                // (PIOA) Interrupt Enable Register
 1218    00000000              #define AT91C_PIOA_PPUDR          (0xFFFFF460)
                                // (PIOA) Pull-up Disable Register
 1219    00000000              #define AT91C_PIOA_IMR            (0xFFFFF448)
                                // (PIOA) Interrupt Mask Register
 1220    00000000              #define AT91C_PIOA_PER            (0xFFFFF400)
                                // (PIOA) PIO Enable Register
 1221    00000000              #define AT91C_PIOA_IFDR           (0xFFFFF424)
                                // (PIOA) Input Filter Disable Register
 1222    00000000              #define AT91C_PIOA_OWDR           (0xFFFFF4A4)
                                // (PIOA) Output Write Disable Register
 1223    00000000              #define AT91C_PIOA_MDSR           (0xFFFFF458)
                                // (PIOA) Multi-driver Status Register
 1224    00000000              #define AT91C_PIOA_IDR            (0xFFFFF444)
                                // (PIOA) Interrupt Disable Register
 1225    00000000              #define AT91C_PIOA_ODSR           (0xFFFFF438)
                                // (PIOA) Output Data Status Register
 1226    00000000              #define AT91C_PIOA_PPUSR          (0xFFFFF468)
                                // (PIOA) Pull-up Status Register
 1227    00000000              #define AT91C_PIOA_OWSR           (0xFFFFF4A8)
                                // (PIOA) Output Write Status Register
 1228    00000000              #define AT91C_PIOA_BSR            (0xFFFFF474)
                                // (PIOA) Select B Register
 1229    00000000              #define AT91C_PIOA_OWER           (0xFFFFF4A0)
                                // (PIOA) Output Write Enable Register
 1230    00000000              #define AT91C_PIOA_IFER           (0xFFFFF420)
                                // (PIOA) Input Filter Enable Register
 1231    00000000              #define AT91C_PIOA_PDSR           (0xFFFFF43C)
                                // (PIOA) Pin Data Status Register
 1232    00000000              #define AT91C_PIOA_PPUER          (0xFFFFF464)
                                // (PIOA) Pull-up Enable Register
 1233    00000000              #define AT91C_PIOA_OSR            (0xFFFFF418)
                                // (PIOA) Output Status Register
 1234    00000000              #define AT91C_PIOA_ASR            (0xFFFFF470)
                                // (PIOA) Select A Register
 1235    00000000              #define AT91C_PIOA_MDDR           (0xFFFFF454)
                                // (PIOA) Multi-driver Disable Register
 1236    00000000              #define AT91C_PIOA_CODR           (0xFFFFF434)
                                // (PIOA) Clear Output Data Register
 1237    00000000              #define AT91C_PIOA_MDER           (0xFFFFF450)
                                // (PIOA) Multi-driver Enable Register
 1238    00000000              #define AT91C_PIOA_PDR            (0xFFFFF404)
                                // (PIOA) PIO Disable Register
 1239    00000000              #define AT91C_PIOA_IFSR           (0xFFFFF428)
                                // (PIOA) Input Filter Status Register
 1240    00000000              #define AT91C_PIOA_OER            (0xFFFFF410)
                                // (PIOA) Output Enable Register
 1241    00000000              #define AT91C_PIOA_PSR            (0xFFFFF408)
                                // (PIOA) PIO Status Register
 1242    00000000              // ========== Register definition for CKGR
                                peripheral ========== 
 1243    00000000              #define AT91C_CKGR_MOR            (0xFFFFFC20)
                                // (CKGR) Main Oscillator Register
 1244    00000000              #define AT91C_CKGR_PLLR           (0xFFFFFC2C)
                                // (CKGR) PLL Register
 1245    00000000              #define AT91C_CKGR_MCFR           (0xFFFFFC24)
                                // (CKGR) Main Clock  Frequency Register
 1246    00000000              // ========== Register definition for PMC
                                peripheral ========== 
 1247    00000000              #define AT91C_PMC_IDR             (0xFFFFFC64)
                                // (PMC) Interrupt Disable Register
 1248    00000000              #define AT91C_PMC_MOR             (0xFFFFFC20)
                                // (PMC) Main Oscillator Register
 1249    00000000              #define AT91C_PMC_PLLR            (0xFFFFFC2C)
                                // (PMC) PLL Register
 1250    00000000              #define AT91C_PMC_PCER            (0xFFFFFC10)
                                // (PMC) Peripheral Clock Enable Register
 1251    00000000              #define AT91C_PMC_PCKR            (0xFFFFFC40)
                                // (PMC) Programmable Clock Register
 1252    00000000              #define AT91C_PMC_MCKR            (0xFFFFFC30)
                                // (PMC) Master Clock Register
 1253    00000000              #define AT91C_PMC_SCDR            (0xFFFFFC04)
                                // (PMC) System Clock Disable Register
 1254    00000000              #define AT91C_PMC_PCDR            (0xFFFFFC14)
                                // (PMC) Peripheral Clock Disable Register
 1255    00000000              #define AT91C_PMC_SCSR            (0xFFFFFC08)
                                // (PMC) System Clock Status Register
 1256    00000000              #define AT91C_PMC_PCSR            (0xFFFFFC18)
                                // (PMC) Peripheral Clock Status Register
 1257    00000000              #define AT91C_PMC_MCFR            (0xFFFFFC24)
                                // (PMC) Main Clock  Frequency Register
 1258    00000000              #define AT91C_PMC_SCER            (0xFFFFFC00)
                                // (PMC) System Clock Enable Register
 1259    00000000              #define AT91C_PMC_IMR             (0xFFFFFC6C)
                                // (PMC) Interrupt Mask Register
 1260    00000000              #define AT91C_PMC_IER             (0xFFFFFC60)
                                // (PMC) Interrupt Enable Register
 1261    00000000              #define AT91C_PMC_SR              (0xFFFFFC68)
                                // (PMC) Status Register
 1262    00000000              // ========== Register definition for RSTC
                                peripheral ========== 
 1263    00000000              #define AT91C_RSTC_RCR            (0xFFFFFD00)
                                // (RSTC) Reset Control Register
 1264    00000000              #define AT91C_RSTC_RMR            (0xFFFFFD08)
                                // (RSTC) Reset Mode Register
 1265    00000000              #define AT91C_RSTC_RSR            (0xFFFFFD04)
                                // (RSTC) Reset Status Register
 1266    00000000              // ========== Register definition for RTTC
                                peripheral ========== 
 1267    00000000              #define AT91C_RTTC_RTSR           (0xFFFFFD2C)
                                // (RTTC) Real-time Status Register
 1268    00000000              #define AT91C_RTTC_RTMR           (0xFFFFFD20)
                                // (RTTC) Real-time Mode Register
 1269    00000000              #define AT91C_RTTC_RTVR           (0xFFFFFD28)
                                // (RTTC) Real-time Value Register
 1270    00000000              #define AT91C_RTTC_RTAR           (0xFFFFFD24)
                                // (RTTC) Real-time Alarm Register
 1271    00000000              // ========== Register definition for PITC
                                peripheral ========== 
 1272    00000000              #define AT91C_PITC_PIVR           (0xFFFFFD38)
                                // (PITC) Period Interval Value Register
 1273    00000000              #define AT91C_PITC_PISR           (0xFFFFFD34)
                                // (PITC) Period Interval Status Register
 1274    00000000              #define AT91C_PITC_PIIR           (0xFFFFFD3C)
                                // (PITC) Period Interval Image Register
 1275    00000000              #define AT91C_PITC_PIMR           (0xFFFFFD30)
                                // (PITC) Period Interval Mode Register
 1276    00000000              // ========== Register definition for WDTC
                                peripheral ========== 
 1277    00000000              #define AT91C_WDTC_WDCR           (0xFFFFFD40)
                                // (WDTC) Watchdog Control Register
 1278    00000000              #define AT91C_WDTC_WDSR           (0xFFFFFD48)
                                // (WDTC) Watchdog Status Register
 1279    00000000              #define AT91C_WDTC_WDMR           (0xFFFFFD44)
                                // (WDTC) Watchdog Mode Register
 1280    00000000              // ========== Register definition for VREG
                                peripheral ========== 
 1281    00000000              #define AT91C_VREG_MR             (0xFFFFFD60)
                                // (VREG) Voltage Regulator Mode Register
 1282    00000000              // ========== Register definition for MC
                                peripheral ========== 
 1283    00000000              #define AT91C_MC_ASR              (0xFFFFFF04)
                                // (MC) MC Abort Status Register
 1284    00000000              #define AT91C_MC_RCR              (0xFFFFFF00)
                                // (MC) MC Remap Control Register
 1285    00000000              #define AT91C_MC_FCR              (0xFFFFFF64)
                                // (MC) MC Flash Command Register
 1286    00000000              #define AT91C_MC_AASR             (0xFFFFFF08)
                                // (MC) MC Abort Address Status Register
 1287    00000000              #define AT91C_MC_FSR              (0xFFFFFF68)
                                // (MC) MC Flash Status Register
 1288    00000000              #define AT91C_MC_FMR              (0xFFFFFF60)
                                // (MC) MC Flash Mode Register
 1289    00000000              // ========== Register definition for PDC_SPI
                                peripheral ========== 
 1290    00000000              #define AT91C_SPI_PTCR            (0xFFFE0120)
                                // (PDC_SPI) PDC Transfer Control Register
 1291    00000000              #define AT91C_SPI_TPR             (0xFFFE0108)
                                // (PDC_SPI) Transmit Pointer Register
 1292    00000000              #define AT91C_SPI_TCR             (0xFFFE010C)
                                // (PDC_SPI) Transmit Counter Register
 1293    00000000              #define AT91C_SPI_RCR             (0xFFFE0104)
                                // (PDC_SPI) Receive Counter Register
 1294    00000000              #define AT91C_SPI_PTSR            (0xFFFE0124)
                                // (PDC_SPI) PDC Transfer Status Register
 1295    00000000              #define AT91C_SPI_RNPR            (0xFFFE0110)
                                // (PDC_SPI) Receive Next Pointer Register
 1296    00000000              #define AT91C_SPI_RPR             (0xFFFE0100)
                                // (PDC_SPI) Receive Pointer Register
 1297    00000000              #define AT91C_SPI_TNCR            (0xFFFE011C)
                                // (PDC_SPI) Transmit Next Counter Register
 1298    00000000              #define AT91C_SPI_RNCR            (0xFFFE0114)
                                // (PDC_SPI) Receive Next Counter Register
 1299    00000000              #define AT91C_SPI_TNPR            (0xFFFE0118)
                                // (PDC_SPI) Transmit Next Pointer Register
 1300    00000000              // ========== Register definition for SPI
                                peripheral ========== 
 1301    00000000              #define AT91C_SPI_IER             (0xFFFE0014)
                                // (SPI) Interrupt Enable Register
 1302    00000000              #define AT91C_SPI_SR              (0xFFFE0010)
                                // (SPI) Status Register
 1303    00000000              #define AT91C_SPI_IDR             (0xFFFE0018)
                                // (SPI) Interrupt Disable Register
 1304    00000000              #define AT91C_SPI_CR              (0xFFFE0000)
                                // (SPI) Control Register
 1305    00000000              #define AT91C_SPI_MR              (0xFFFE0004)
                                // (SPI) Mode Register
 1306    00000000              #define AT91C_SPI_IMR             (0xFFFE001C)
                                // (SPI) Interrupt Mask Register
 1307    00000000              #define AT91C_SPI_TDR             (0xFFFE000C)
                                // (SPI) Transmit Data Register
 1308    00000000              #define AT91C_SPI_RDR             (0xFFFE0008)
                                // (SPI) Receive Data Register
 1309    00000000              #define AT91C_SPI_CSR             (0xFFFE0030)
                                // (SPI) Chip Select Register
 1310    00000000              // ========== Register definition for PDC_ADC
                                peripheral ========== 
 1311    00000000              #define AT91C_ADC_PTSR            (0xFFFD8124)
                                // (PDC_ADC) PDC Transfer Status Register
 1312    00000000              #define AT91C_ADC_PTCR            (0xFFFD8120)
                                // (PDC_ADC) PDC Transfer Control Register
 1313    00000000              #define AT91C_ADC_TNPR            (0xFFFD8118)
                                // (PDC_ADC) Transmit Next Pointer Register
 1314    00000000              #define AT91C_ADC_TNCR            (0xFFFD811C)
                                // (PDC_ADC) Transmit Next Counter Register
 1315    00000000              #define AT91C_ADC_RNPR            (0xFFFD8110)
                                // (PDC_ADC) Receive Next Pointer Register
 1316    00000000              #define AT91C_ADC_RNCR            (0xFFFD8114)
                                // (PDC_ADC) Receive Next Counter Register
 1317    00000000              #define AT91C_ADC_RPR             (0xFFFD8100)
                                // (PDC_ADC) Receive Pointer Register
 1318    00000000              #define AT91C_ADC_TCR             (0xFFFD810C)
                                // (PDC_ADC) Transmit Counter Register
 1319    00000000              #define AT91C_ADC_TPR             (0xFFFD8108)
                                // (PDC_ADC) Transmit Pointer Register
 1320    00000000              #define AT91C_ADC_RCR             (0xFFFD8104)
                                // (PDC_ADC) Receive Counter Register
 1321    00000000              // ========== Register definition for ADC
                                peripheral ========== 
 1322    00000000              #define AT91C_ADC_CDR2            (0xFFFD8038)
                                // (ADC) ADC Channel Data Register 2
 1323    00000000              #define AT91C_ADC_CDR3            (0xFFFD803C)
                                // (ADC) ADC Channel Data Register 3
 1324    00000000              #define AT91C_ADC_CDR0            (0xFFFD8030)
                                // (ADC) ADC Channel Data Register 0
 1325    00000000              #define AT91C_ADC_CDR5            (0xFFFD8044)
                                // (ADC) ADC Channel Data Register 5
 1326    00000000              #define AT91C_ADC_CHDR            (0xFFFD8014)
                                // (ADC) ADC Channel Disable Register
 1327    00000000              #define AT91C_ADC_SR              (0xFFFD801C)
                                // (ADC) ADC Status Register
 1328    00000000              #define AT91C_ADC_CDR4            (0xFFFD8040)
                                // (ADC) ADC Channel Data Register 4
 1329    00000000              #define AT91C_ADC_CDR1            (0xFFFD8034)
                                // (ADC) ADC Channel Data Register 1
 1330    00000000              #define AT91C_ADC_LCDR            (0xFFFD8020)
                                // (ADC) ADC Last Converted Data Register
 1331    00000000              #define AT91C_ADC_IDR             (0xFFFD8028)
                                // (ADC) ADC Interrupt Disable Register
 1332    00000000              #define AT91C_ADC_CR              (0xFFFD8000)
                                // (ADC) ADC Control Register
 1333    00000000              #define AT91C_ADC_CDR7            (0xFFFD804C)
                                // (ADC) ADC Channel Data Register 7
 1334    00000000              #define AT91C_ADC_CDR6            (0xFFFD8048)
                                // (ADC) ADC Channel Data Register 6
 1335    00000000              #define AT91C_ADC_IER             (0xFFFD8024)
                                // (ADC) ADC Interrupt Enable Register
 1336    00000000              #define AT91C_ADC_CHER            (0xFFFD8010)
                                // (ADC) ADC Channel Enable Register
 1337    00000000              #define AT91C_ADC_CHSR            (0xFFFD8018)
                                // (ADC) ADC Channel Status Register
 1338    00000000              #define AT91C_ADC_MR              (0xFFFD8004)
                                // (ADC) ADC Mode Register
 1339    00000000              #define AT91C_ADC_IMR             (0xFFFD802C)
                                // (ADC) ADC Interrupt Mask Register
 1340    00000000              // ========== Register definition for PDC_SSC
                                peripheral ========== 
 1341    00000000              #define AT91C_SSC_TNCR            (0xFFFD411C)
                                // (PDC_SSC) Transmit Next Counter Register
 1342    00000000              #define AT91C_SSC_RPR             (0xFFFD4100)
                                // (PDC_SSC) Receive Pointer Register
 1343    00000000              #define AT91C_SSC_RNCR            (0xFFFD4114)
                                // (PDC_SSC) Receive Next Counter Register
 1344    00000000              #define AT91C_SSC_TPR             (0xFFFD4108)
                                // (PDC_SSC) Transmit Pointer Register
 1345    00000000              #define AT91C_SSC_PTCR            (0xFFFD4120)
                                // (PDC_SSC) PDC Transfer Control Register
 1346    00000000              #define AT91C_SSC_TCR             (0xFFFD410C)
                                // (PDC_SSC) Transmit Counter Register
 1347    00000000              #define AT91C_SSC_RCR             (0xFFFD4104)
                                // (PDC_SSC) Receive Counter Register
 1348    00000000              #define AT91C_SSC_RNPR            (0xFFFD4110)
                                // (PDC_SSC) Receive Next Pointer Register
 1349    00000000              #define AT91C_SSC_TNPR            (0xFFFD4118)
                                // (PDC_SSC) Transmit Next Pointer Register
 1350    00000000              #define AT91C_SSC_PTSR            (0xFFFD4124)
                                // (PDC_SSC) PDC Transfer Status Register
 1351    00000000              // ========== Register definition for SSC
                                peripheral ========== 
 1352    00000000              #define AT91C_SSC_RHR             (0xFFFD4020)
                                // (SSC) Receive Holding Register
 1353    00000000              #define AT91C_SSC_RSHR            (0xFFFD4030)
                                // (SSC) Receive Sync Holding Register
 1354    00000000              #define AT91C_SSC_TFMR            (0xFFFD401C)
                                // (SSC) Transmit Frame Mode Register
 1355    00000000              #define AT91C_SSC_IDR             (0xFFFD4048)
                                // (SSC) Interrupt Disable Register
 1356    00000000              #define AT91C_SSC_THR             (0xFFFD4024)
                                // (SSC) Transmit Holding Register
 1357    00000000              #define AT91C_SSC_RCMR            (0xFFFD4010)
                                // (SSC) Receive Clock ModeRegister
 1358    00000000              #define AT91C_SSC_IER             (0xFFFD4044)
                                // (SSC) Interrupt Enable Register
 1359    00000000              #define AT91C_SSC_TSHR            (0xFFFD4034)
                                // (SSC) Transmit Sync Holding Register
 1360    00000000              #define AT91C_SSC_SR              (0xFFFD4040)
                                // (SSC) Status Register
 1361    00000000              #define AT91C_SSC_CMR             (0xFFFD4004)
                                // (SSC) Clock Mode Register
 1362    00000000              #define AT91C_SSC_TCMR            (0xFFFD4018)
                                // (SSC) Transmit Clock Mode Register
 1363    00000000              #define AT91C_SSC_CR              (0xFFFD4000)
                                // (SSC) Control Register
 1364    00000000              #define AT91C_SSC_IMR             (0xFFFD404C)
                                // (SSC) Interrupt Mask Register
 1365    00000000              #define AT91C_SSC_RFMR            (0xFFFD4014)
                                // (SSC) Receive Frame Mode Register
 1366    00000000              // ========== Register definition for PDC_US1
                                peripheral ========== 
 1367    00000000              #define AT91C_US1_RNCR            (0xFFFC4114)
                                // (PDC_US1) Receive Next Counter Register
 1368    00000000              #define AT91C_US1_PTCR            (0xFFFC4120)
                                // (PDC_US1) PDC Transfer Control Register
 1369    00000000              #define AT91C_US1_TCR             (0xFFFC410C)
                                // (PDC_US1) Transmit Counter Register
 1370    00000000              #define AT91C_US1_PTSR            (0xFFFC4124)
                                // (PDC_US1) PDC Transfer Status Register
 1371    00000000              #define AT91C_US1_TNPR            (0xFFFC4118)
                                // (PDC_US1) Transmit Next Pointer Register
 1372    00000000              #define AT91C_US1_RCR             (0xFFFC4104)
                                // (PDC_US1) Receive Counter Register
 1373    00000000              #define AT91C_US1_RNPR            (0xFFFC4110)
                                // (PDC_US1) Receive Next Pointer Register
 1374    00000000              #define AT91C_US1_RPR             (0xFFFC4100)
                                // (PDC_US1) Receive Pointer Register
 1375    00000000              #define AT91C_US1_TNCR            (0xFFFC411C)
                                // (PDC_US1) Transmit Next Counter Register
 1376    00000000              #define AT91C_US1_TPR             (0xFFFC4108)
                                // (PDC_US1) Transmit Pointer Register
 1377    00000000              // ========== Register definition for US1
                                peripheral ========== 
 1378    00000000              #define AT91C_US1_IF              (0xFFFC404C)
                                // (US1) IRDA_FILTER Register
 1379    00000000              #define AT91C_US1_NER             (0xFFFC4044)
                                // (US1) Nb Errors Register
 1380    00000000              #define AT91C_US1_RTOR            (0xFFFC4024)
                                // (US1) Receiver Time-out Register
 1381    00000000              #define AT91C_US1_CSR             (0xFFFC4014)
                                // (US1) Channel Status Register
 1382    00000000              #define AT91C_US1_IDR             (0xFFFC400C)
                                // (US1) Interrupt Disable Register
 1383    00000000              #define AT91C_US1_IER             (0xFFFC4008)
                                // (US1) Interrupt Enable Register
 1384    00000000              #define AT91C_US1_THR             (0xFFFC401C)
                                // (US1) Transmitter Holding Register
 1385    00000000              #define AT91C_US1_TTGR            (0xFFFC4028)
                                // (US1) Transmitter Time-guard Register
 1386    00000000              #define AT91C_US1_RHR             (0xFFFC4018)
                                // (US1) Receiver Holding Register
 1387    00000000              #define AT91C_US1_BRGR            (0xFFFC4020)
                                // (US1) Baud Rate Generator Register
 1388    00000000              #define AT91C_US1_IMR             (0xFFFC4010)
                                // (US1) Interrupt Mask Register
 1389    00000000              #define AT91C_US1_FIDI            (0xFFFC4040)
                                // (US1) FI_DI_Ratio Register
 1390    00000000              #define AT91C_US1_CR              (0xFFFC4000)
                                // (US1) Control Register
 1391    00000000              #define AT91C_US1_MR              (0xFFFC4004)
                                // (US1) Mode Register
 1392    00000000              // ========== Register definition for PDC_US0
                                peripheral ========== 
 1393    00000000              #define AT91C_US0_TNPR            (0xFFFC0118)
                                // (PDC_US0) Transmit Next Pointer Register
 1394    00000000              #define AT91C_US0_RNPR            (0xFFFC0110)
                                // (PDC_US0) Receive Next Pointer Register
 1395    00000000              #define AT91C_US0_TCR             (0xFFFC010C)
                                // (PDC_US0) Transmit Counter Register
 1396    00000000              #define AT91C_US0_PTCR            (0xFFFC0120)
                                // (PDC_US0) PDC Transfer Control Register
 1397    00000000              #define AT91C_US0_PTSR            (0xFFFC0124)
                                // (PDC_US0) PDC Transfer Status Register
 1398    00000000              #define AT91C_US0_TNCR            (0xFFFC011C)
                                // (PDC_US0) Transmit Next Counter Register
 1399    00000000              #define AT91C_US0_TPR             (0xFFFC0108)
                                // (PDC_US0) Transmit Pointer Register
 1400    00000000              #define AT91C_US0_RCR             (0xFFFC0104)
                                // (PDC_US0) Receive Counter Register
 1401    00000000              #define AT91C_US0_RPR             (0xFFFC0100)
                                // (PDC_US0) Receive Pointer Register
 1402    00000000              #define AT91C_US0_RNCR            (0xFFFC0114)
                                // (PDC_US0) Receive Next Counter Register
 1403    00000000              // ========== Register definition for US0
                                peripheral ========== 
 1404    00000000              #define AT91C_US0_BRGR            (0xFFFC0020)
                                // (US0) Baud Rate Generator Register
 1405    00000000              #define AT91C_US0_NER             (0xFFFC0044)
                                // (US0) Nb Errors Register
 1406    00000000              #define AT91C_US0_CR              (0xFFFC0000)
                                // (US0) Control Register
 1407    00000000              #define AT91C_US0_IMR             (0xFFFC0010)
                                // (US0) Interrupt Mask Register
 1408    00000000              #define AT91C_US0_FIDI            (0xFFFC0040)
                                // (US0) FI_DI_Ratio Register
 1409    00000000              #define AT91C_US0_TTGR            (0xFFFC0028)
                                // (US0) Transmitter Time-guard Register
 1410    00000000              #define AT91C_US0_MR              (0xFFFC0004)
                                // (US0) Mode Register
 1411    00000000              #define AT91C_US0_RTOR            (0xFFFC0024)
                                // (US0) Receiver Time-out Register
 1412    00000000              #define AT91C_US0_CSR             (0xFFFC0014)
                                // (US0) Channel Status Register
 1413    00000000              #define AT91C_US0_RHR             (0xFFFC0018)
                                // (US0) Receiver Holding Register
 1414    00000000              #define AT91C_US0_IDR             (0xFFFC000C)
                                // (US0) Interrupt Disable Register
 1415    00000000              #define AT91C_US0_THR             (0xFFFC001C)
                                // (US0) Transmitter Holding Register
 1416    00000000              #define AT91C_US0_IF              (0xFFFC004C)
                                // (US0) IRDA_FILTER Register
 1417    00000000              #define AT91C_US0_IER             (0xFFFC0008)
                                // (US0) Interrupt Enable Register
 1418    00000000              // ========== Register definition for TWI
                                peripheral ========== 
 1419    00000000              #define AT91C_TWI_IER             (0xFFFB8024)
                                // (TWI) Interrupt Enable Register
 1420    00000000              #define AT91C_TWI_CR              (0xFFFB8000)
                                // (TWI) Control Register
 1421    00000000              #define AT91C_TWI_SR              (0xFFFB8020)
                                // (TWI) Status Register
 1422    00000000              #define AT91C_TWI_IMR             (0xFFFB802C)
                                // (TWI) Interrupt Mask Register
 1423    00000000              #define AT91C_TWI_THR             (0xFFFB8034)
                                // (TWI) Transmit Holding Register
 1424    00000000              #define AT91C_TWI_IDR             (0xFFFB8028)
                                // (TWI) Interrupt Disable Register
 1425    00000000              #define AT91C_TWI_IADR            (0xFFFB800C)
                                // (TWI) Internal Address Register
 1426    00000000              #define AT91C_TWI_MMR             (0xFFFB8004)
                                // (TWI) Master Mode Register
 1427    00000000              #define AT91C_TWI_CWGR            (0xFFFB8010)
                                // (TWI) Clock Waveform Generator Register
 1428    00000000              #define AT91C_TWI_RHR             (0xFFFB8030)
                                // (TWI) Receive Holding Register
 1429    00000000              // ========== Register definition for TC0
                                peripheral ========== 
 1430    00000000              #define AT91C_TC0_SR              (0xFFFA0020)
                                // (TC0) Status Register
 1431    00000000              #define AT91C_TC0_RC              (0xFFFA001C)
                                // (TC0) Register C
 1432    00000000              #define AT91C_TC0_RB              (0xFFFA0018)
                                // (TC0) Register B
 1433    00000000              #define AT91C_TC0_CCR             (0xFFFA0000)
                                // (TC0) Channel Control Register
 1434    00000000              #define AT91C_TC0_CMR             (0xFFFA0004)
                                // (TC0) Channel Mode Register (Capture Mode /
                                Waveform Mode)
 1435    00000000              #define AT91C_TC0_IER             (0xFFFA0024)
                                // (TC0) Interrupt Enable Register
 1436    00000000              #define AT91C_TC0_RA              (0xFFFA0014)
                                // (TC0) Register A
 1437    00000000              #define AT91C_TC0_IDR             (0xFFFA0028)
                                // (TC0) Interrupt Disable Register
 1438    00000000              #define AT91C_TC0_CV              (0xFFFA0010)
                                // (TC0) Counter Value
 1439    00000000              #define AT91C_TC0_IMR             (0xFFFA002C)
                                // (TC0) Interrupt Mask Register
 1440    00000000              // ========== Register definition for TC1
                                peripheral ========== 
 1441    00000000              #define AT91C_TC1_RB              (0xFFFA0058)
                                // (TC1) Register B
 1442    00000000              #define AT91C_TC1_CCR             (0xFFFA0040)
                                // (TC1) Channel Control Register
 1443    00000000              #define AT91C_TC1_IER             (0xFFFA0064)
                                // (TC1) Interrupt Enable Register
 1444    00000000              #define AT91C_TC1_IDR             (0xFFFA0068)
                                // (TC1) Interrupt Disable Register
 1445    00000000              #define AT91C_TC1_SR              (0xFFFA0060)
                                // (TC1) Status Register
 1446    00000000              #define AT91C_TC1_CMR             (0xFFFA0044)
                                // (TC1) Channel Mode Register (Capture Mode /
                                Waveform Mode)
 1447    00000000              #define AT91C_TC1_RA              (0xFFFA0054)
                                // (TC1) Register A
 1448    00000000              #define AT91C_TC1_RC              (0xFFFA005C)
                                // (TC1) Register C
 1449    00000000              #define AT91C_TC1_IMR             (0xFFFA006C)
                                // (TC1) Interrupt Mask Register
 1450    00000000              #define AT91C_TC1_CV              (0xFFFA0050)
                                // (TC1) Counter Value
 1451    00000000              // ========== Register definition for TC2
                                peripheral ========== 
 1452    00000000              #define AT91C_TC2_CMR             (0xFFFA0084)
                                // (TC2) Channel Mode Register (Capture Mode /
                                Waveform Mode)
 1453    00000000              #define AT91C_TC2_CCR             (0xFFFA0080)
                                // (TC2) Channel Control Register
 1454    00000000              #define AT91C_TC2_CV              (0xFFFA0090)
                                // (TC2) Counter Value
 1455    00000000              #define AT91C_TC2_RA              (0xFFFA0094)
                                // (TC2) Register A
 1456    00000000              #define AT91C_TC2_RB              (0xFFFA0098)
                                // (TC2) Register B
 1457    00000000              #define AT91C_TC2_IDR             (0xFFFA00A8)
                                // (TC2) Interrupt Disable Register
 1458    00000000              #define AT91C_TC2_IMR             (0xFFFA00AC)
                                // (TC2) Interrupt Mask Register
 1459    00000000              #define AT91C_TC2_RC              (0xFFFA009C)
                                // (TC2) Register C
 1460    00000000              #define AT91C_TC2_IER             (0xFFFA00A4)
                                // (TC2) Interrupt Enable Register
 1461    00000000              #define AT91C_TC2_SR              (0xFFFA00A0)
                                // (TC2) Status Register
 1462    00000000              // ========== Register definition for TCB
                                peripheral ========== 
 1463    00000000              #define AT91C_TCB_BMR             (0xFFFA00C4)
                                // (TCB) TC Block Mode Register
 1464    00000000              #define AT91C_TCB_BCR             (0xFFFA00C0)
                                // (TCB) TC Block Control Register
 1465    00000000              // ========== Register definition for PWMC_CH3
                                peripheral ========== 
 1466    00000000              #define AT91C_PWMC_CH3_CUPDR      (0xFFFCC270)
                                // (PWMC_CH3) Channel Update Register
 1467    00000000              #define AT91C_PWMC_CH3_Reserved   (0xFFFCC274)
                                // (PWMC_CH3) Reserved
 1468    00000000              #define AT91C_PWMC_CH3_CPRDR      (0xFFFCC268)
                                // (PWMC_CH3) Channel Period Register
 1469    00000000              #define AT91C_PWMC_CH3_CDTYR      (0xFFFCC264)
                                // (PWMC_CH3) Channel Duty Cycle Register
 1470    00000000              #define AT91C_PWMC_CH3_CCNTR      (0xFFFCC26C)
                                // (PWMC_CH3) Channel Counter Register
 1471    00000000              #define AT91C_PWMC_CH3_CMR        (0xFFFCC260)
                                // (PWMC_CH3) Channel Mode Register
 1472    00000000              // ========== Register definition for PWMC_CH2
                                peripheral ========== 
 1473    00000000              #define AT91C_PWMC_CH2_Reserved   (0xFFFCC254)
                                // (PWMC_CH2) Reserved
 1474    00000000              #define AT91C_PWMC_CH2_CMR        (0xFFFCC240)
                                // (PWMC_CH2) Channel Mode Register
 1475    00000000              #define AT91C_PWMC_CH2_CCNTR      (0xFFFCC24C)
                                // (PWMC_CH2) Channel Counter Register
 1476    00000000              #define AT91C_PWMC_CH2_CPRDR      (0xFFFCC248)
                                // (PWMC_CH2) Channel Period Register
 1477    00000000              #define AT91C_PWMC_CH2_CUPDR      (0xFFFCC250)
                                // (PWMC_CH2) Channel Update Register
 1478    00000000              #define AT91C_PWMC_CH2_CDTYR      (0xFFFCC244)
                                // (PWMC_CH2) Channel Duty Cycle Register
 1479    00000000              // ========== Register definition for PWMC_CH1
                                peripheral ========== 
 1480    00000000              #define AT91C_PWMC_CH1_Reserved   (0xFFFCC234)
                                // (PWMC_CH1) Reserved
 1481    00000000              #define AT91C_PWMC_CH1_CUPDR      (0xFFFCC230)
                                // (PWMC_CH1) Channel Update Register
 1482    00000000              #define AT91C_PWMC_CH1_CPRDR      (0xFFFCC228)
                                // (PWMC_CH1) Channel Period Register
 1483    00000000              #define AT91C_PWMC_CH1_CCNTR      (0xFFFCC22C)
                                // (PWMC_CH1) Channel Counter Register
 1484    00000000              #define AT91C_PWMC_CH1_CDTYR      (0xFFFCC224)
                                // (PWMC_CH1) Channel Duty Cycle Register
 1485    00000000              #define AT91C_PWMC_CH1_CMR        (0xFFFCC220)
                                // (PWMC_CH1) Channel Mode Register
 1486    00000000              // ========== Register definition for PWMC_CH0
                                peripheral ========== 
 1487    00000000              #define AT91C_PWMC_CH0_Reserved   (0xFFFCC214)
                                // (PWMC_CH0) Reserved
 1488    00000000              #define AT91C_PWMC_CH0_CPRDR      (0xFFFCC208)
                                // (PWMC_CH0) Channel Period Register
 1489    00000000              #define AT91C_PWMC_CH0_CDTYR      (0xFFFCC204)
                                // (PWMC_CH0) Channel Duty Cycle Register
 1490    00000000              #define AT91C_PWMC_CH0_CMR        (0xFFFCC200)
                                // (PWMC_CH0) Channel Mode Register
 1491    00000000              #define AT91C_PWMC_CH0_CUPDR      (0xFFFCC210)
                                // (PWMC_CH0) Channel Update Register
 1492    00000000              #define AT91C_PWMC_CH0_CCNTR      (0xFFFCC20C)
                                // (PWMC_CH0) Channel Counter Register
 1493    00000000              // ========== Register definition for PWMC
                                peripheral ========== 
 1494    00000000              #define AT91C_PWMC_IDR            (0xFFFCC014)
                                // (PWMC) PWMC Interrupt Disable Register
 1495    00000000              #define AT91C_PWMC_DIS            (0xFFFCC008)
                                // (PWMC) PWMC Disable Register
 1496    00000000              #define AT91C_PWMC_IER            (0xFFFCC010)
                                // (PWMC) PWMC Interrupt Enable Register
 1497    00000000              #define AT91C_PWMC_VR             (0xFFFCC0FC)
                                // (PWMC) PWMC Version Register
 1498    00000000              #define AT91C_PWMC_ISR            (0xFFFCC01C)
                                // (PWMC) PWMC Interrupt Status Register
 1499    00000000              #define AT91C_PWMC_SR             (0xFFFCC00C)
                                // (PWMC) PWMC Status Register
 1500    00000000              #define AT91C_PWMC_IMR            (0xFFFCC018)
                                // (PWMC) PWMC Interrupt Mask Register
 1501    00000000              #define AT91C_PWMC_MR             (0xFFFCC000)
                                // (PWMC) PWMC Mode Register
 1502    00000000              #define AT91C_PWMC_ENA            (0xFFFCC004)
                                // (PWMC) PWMC Enable Register
 1503    00000000              // ========== Register definition for UDP
                                peripheral ========== 
 1504    00000000              #define AT91C_UDP_IMR             (0xFFFB0018)
                                // (UDP) Interrupt Mask Register
 1505    00000000              #define AT91C_UDP_FADDR           (0xFFFB0008)
                                // (UDP) Function Address Register
 1506    00000000              #define AT91C_UDP_NUM             (0xFFFB0000)
                                // (UDP) Frame Number Register
 1507    00000000              #define AT91C_UDP_FDR             (0xFFFB0050)
                                // (UDP) Endpoint FIFO Data Register
 1508    00000000              #define AT91C_UDP_ISR             (0xFFFB001C)
                                // (UDP) Interrupt Status Register
 1509    00000000              #define AT91C_UDP_CSR             (0xFFFB0030)
                                // (UDP) Endpoint Control and Status Register
 1510    00000000              #define AT91C_UDP_IDR             (0xFFFB0014)
                                // (UDP) Interrupt Disable Register
 1511    00000000              #define AT91C_UDP_ICR             (0xFFFB0020)
                                // (UDP) Interrupt Clear Register
 1512    00000000              #define AT91C_UDP_RSTEP           (0xFFFB0028)
                                // (UDP) Reset Endpoint Register
 1513    00000000              #define AT91C_UDP_TXVC            (0xFFFB0074)
                                // (UDP) Transceiver Control Register
 1514    00000000              #define AT91C_UDP_GLBSTATE        (0xFFFB0004)
                                // (UDP) Global State Register
 1515    00000000              #define AT91C_UDP_IER             (0xFFFB0010)
                                // (UDP) Interrupt Enable Register
 1516    00000000              
 1517    00000000              // *********************************************
                               ********************************
 1518    00000000              //               PIO DEFINITIONS FOR AT91SAM7S25
                               6
 1519    00000000              // *********************************************
                               ********************************
 1520    00000000              #define AT91C_PIO_PA0             (1 <<  0) //
                                Pin Controlled by PA0
 1521    00000000              #define AT91C_PA0_PWM0            (AT91C_PIO_PA0
                               ) //  PWM Channel 0
 1522    00000000              #define AT91C_PA0_TIOA0           (AT91C_PIO_PA0
                               ) //  Timer Counter 0 Multipurpose Timer I/O Pin
                                A
 1523    00000000              #define AT91C_PIO_PA1             (1 <<  1) //
                                Pin Controlled by PA1
 1524    00000000              #define AT91C_PA1_PWM1            (AT91C_PIO_PA1
                               ) //  PWM Channel 1
 1525    00000000              #define AT91C_PA1_TIOB0           (AT91C_PIO_PA1
                               ) //  Timer Counter 0 Multipurpose Timer I/O Pin
                                B
 1526    00000000              #define AT91C_PIO_PA10            (1 << 10) //
                                Pin Controlled by PA10
 1527    00000000              #define AT91C_PA10_DTXD           (AT91C_PIO_PA1
                               0) //  DBGU Debug Transmit Data
 1528    00000000              #define AT91C_PA10_NPCS2          (AT91C_PIO_PA1
                               0) //  SPI Peripheral Chip Select 2
 1529    00000000              #define AT91C_PIO_PA11            (1 << 11) //
                                Pin Controlled by PA11
 1530    00000000              #define AT91C_PA11_NPCS0          (AT91C_PIO_PA1
                               1) //  SPI Peripheral Chip Select 0
 1531    00000000              #define AT91C_PA11_PWM0           (AT91C_PIO_PA1
                               1) //  PWM Channel 0
 1532    00000000              #define AT91C_PIO_PA12            (1 << 12) //
                                Pin Controlled by PA12
 1533    00000000              #define AT91C_PA12_MISO           (AT91C_PIO_PA1
                               2) //  SPI Master In Slave
 1534    00000000              #define AT91C_PA12_PWM1           (AT91C_PIO_PA1
                               2) //  PWM Channel 1
 1535    00000000              #define AT91C_PIO_PA13            (1 << 13) //
                                Pin Controlled by PA13
 1536    00000000              #define AT91C_PA13_MOSI           (AT91C_PIO_PA1
                               3) //  SPI Master Out Slave
 1537    00000000              #define AT91C_PA13_PWM2           (AT91C_PIO_PA1
                               3) //  PWM Channel 2
 1538    00000000              #define AT91C_PIO_PA14            (1 << 14) //
                                Pin Controlled by PA14
 1539    00000000              #define AT91C_PA14_SPCK           (AT91C_PIO_PA1
                               4) //  SPI Serial Clock
 1540    00000000              #define AT91C_PA14_PWM3           (AT91C_PIO_PA1
                               4) //  PWM Channel 3
 1541    00000000              #define AT91C_PIO_PA15            (1 << 15) //
                                Pin Controlled by PA15
 1542    00000000              #define AT91C_PA15_TF             (AT91C_PIO_PA1
                               5) //  SSC Transmit Frame Sync
 1543    00000000              #define AT91C_PA15_TIOA1          (AT91C_PIO_PA1
                               5) //  Timer Counter 1 Multipurpose Timer I/O
                                Pin A
 1544    00000000              #define AT91C_PIO_PA16            (1 << 16) //
                                Pin Controlled by PA16
 1545    00000000              #define AT91C_PA16_TK             (AT91C_PIO_PA1
                               6) //  SSC Transmit Clock
 1546    00000000              #define AT91C_PA16_TIOB1          (AT91C_PIO_PA1
                               6) //  Timer Counter 1 Multipurpose Timer I/O
                                Pin B
 1547    00000000              #define AT91C_PIO_PA17            (1 << 17) //
                                Pin Controlled by PA17
 1548    00000000              #define AT91C_PA17_TD             (AT91C_PIO_PA1
                               7) //  SSC Transmit data
 1549    00000000              #define AT91C_PA17_PCK1           (AT91C_PIO_PA1
                               7) //  PMC Programmable Clock Output 1
 1550    00000000              #define AT91C_PIO_PA18            (1 << 18) //
                                Pin Controlled by PA18
 1551    00000000              #define AT91C_PA18_RD             (AT91C_PIO_PA1
                               8) //  SSC Receive Data
 1552    00000000              #define AT91C_PA18_PCK2           (AT91C_PIO_PA1
                               8) //  PMC Programmable Clock Output 2
 1553    00000000              #define AT91C_PIO_PA19            (1 << 19) //
                                Pin Controlled by PA19
 1554    00000000              #define AT91C_PA19_RK             (AT91C_PIO_PA1
                               9) //  SSC Receive Clock
 1555    00000000              #define AT91C_PA19_FIQ            (AT91C_PIO_PA1
                               9) //  AIC Fast Interrupt Input
 1556    00000000              #define AT91C_PIO_PA2             (1 <<  2) //
                                Pin Controlled by PA2
 1557    00000000              #define AT91C_PA2_PWM2            (AT91C_PIO_PA2
                               ) //  PWM Channel 2
 1558    00000000              #define AT91C_PA2_SCK0            (AT91C_PIO_PA2
                               ) //  USART 0 Serial Clock
 1559    00000000              #define AT91C_PIO_PA20            (1 << 20) //
                                Pin Controlled by PA20
 1560    00000000              #define AT91C_PA20_RF             (AT91C_PIO_PA2
                               0) //  SSC Receive Frame Sync
 1561    00000000              #define AT91C_PA20_IRQ0           (AT91C_PIO_PA2
                               0) //  External Interrupt 0
 1562    00000000              #define AT91C_PIO_PA21            (1 << 21) //
                                Pin Controlled by PA21
 1563    00000000              #define AT91C_PA21_RXD1           (AT91C_PIO_PA2
                               1) //  USART 1 Receive Data
 1564    00000000              #define AT91C_PA21_PCK1           (AT91C_PIO_PA2
                               1) //  PMC Programmable Clock Output 1
 1565    00000000              #define AT91C_PIO_PA22            (1 << 22) //
                                Pin Controlled by PA22
 1566    00000000              #define AT91C_PA22_TXD1           (AT91C_PIO_PA2
                               2) //  USART 1 Transmit Data
 1567    00000000              #define AT91C_PA22_NPCS3          (AT91C_PIO_PA2
                               2) //  SPI Peripheral Chip Select 3
 1568    00000000              #define AT91C_PIO_PA23            (1 << 23) //
                                Pin Controlled by PA23
 1569    00000000              #define AT91C_PA23_SCK1           (AT91C_PIO_PA2
                               3) //  USART 1 Serial Clock
 1570    00000000              #define AT91C_PA23_PWM0           (AT91C_PIO_PA2
                               3) //  PWM Channel 0
 1571    00000000              #define AT91C_PIO_PA24            (1 << 24) //
                                Pin Controlled by PA24
 1572    00000000              #define AT91C_PA24_RTS1           (AT91C_PIO_PA2
                               4) //  USART 1 Ready To Send
 1573    00000000              #define AT91C_PA24_PWM1           (AT91C_PIO_PA2
                               4) //  PWM Channel 1
 1574    00000000              #define AT91C_PIO_PA25            (1 << 25) //
                                Pin Controlled by PA25
 1575    00000000              #define AT91C_PA25_CTS1           (AT91C_PIO_PA2
                               5) //  USART 1 Clear To Send
 1576    00000000              #define AT91C_PA25_PWM2           (AT91C_PIO_PA2
                               5) //  PWM Channel 2
 1577    00000000              #define AT91C_PIO_PA26            (1 << 26) //
                                Pin Controlled by PA26
 1578    00000000              #define AT91C_PA26_DCD1           (AT91C_PIO_PA2
                               6) //  USART 1 Data Carrier Detect
 1579    00000000              #define AT91C_PA26_TIOA2          (AT91C_PIO_PA2
                               6) //  Timer Counter 2 Multipurpose Timer I/O
                                Pin A
 1580    00000000              #define AT91C_PIO_PA27            (1 << 27) //
                                Pin Controlled by PA27
 1581    00000000              #define AT91C_PA27_DTR1           (AT91C_PIO_PA2
                               7) //  USART 1 Data Terminal ready
 1582    00000000              #define AT91C_PA27_TIOB2          (AT91C_PIO_PA2
                               7) //  Timer Counter 2 Multipurpose Timer I/O
                                Pin B
 1583    00000000              #define AT91C_PIO_PA28            (1 << 28) //
                                Pin Controlled by PA28
 1584    00000000              #define AT91C_PA28_DSR1           (AT91C_PIO_PA2
                               8) //  USART 1 Data Set ready
 1585    00000000              #define AT91C_PA28_TCLK1          (AT91C_PIO_PA2
                               8) //  Timer Counter 1 external clock input
 1586    00000000              #define AT91C_PIO_PA29            (1 << 29) //
                                Pin Controlled by PA29
 1587    00000000              #define AT91C_PA29_RI1            (AT91C_PIO_PA2
                               9) //  USART 1 Ring Indicator
 1588    00000000              #define AT91C_PA29_TCLK2          (AT91C_PIO_PA2
                               9) //  Timer Counter 2 external clock input
 1589    00000000              #define AT91C_PIO_PA3             (1 <<  3) //
                                Pin Controlled by PA3
 1590    00000000              #define AT91C_PA3_TWD             (AT91C_PIO_PA3
                               ) //  TWI Two-wire Serial Data
 1591    00000000              #define AT91C_PA3_NPCS3           (AT91C_PIO_PA3
                               ) //  SPI Peripheral Chip Select 3
 1592    00000000              #define AT91C_PIO_PA30            (1 << 30) //
                                Pin Controlled by PA30
 1593    00000000              #define AT91C_PA30_IRQ1           (AT91C_PIO_PA3
                               0) //  External Interrupt 1
 1594    00000000              #define AT91C_PA30_NPCS2          (AT91C_PIO_PA3
                               0) //  SPI Peripheral Chip Select 2
 1595    00000000              #define AT91C_PIO_PA31            (1 << 31) //
                                Pin Controlled by PA31
 1596    00000000              #define AT91C_PA31_NPCS1          (AT91C_PIO_PA3
                               1) //  SPI Peripheral Chip Select 1
 1597    00000000              #define AT91C_PA31_PCK2           (AT91C_PIO_PA3
                               1) //  PMC Programmable Clock Output 2
 1598    00000000              #define AT91C_PIO_PA4             (1 <<  4) //
                                Pin Controlled by PA4
 1599    00000000              #define AT91C_PA4_TWCK            (AT91C_PIO_PA4
                               ) //  TWI Two-wire Serial Clock
 1600    00000000              #define AT91C_PA4_TCLK0           (AT91C_PIO_PA4
                               ) //  Timer Counter 0 external clock input
 1601    00000000              #define AT91C_PIO_PA5             (1 <<  5) //
                                Pin Controlled by PA5
 1602    00000000              #define AT91C_PA5_RXD0            (AT91C_PIO_PA5
                               ) //  USART 0 Receive Data
 1603    00000000              #define AT91C_PA5_NPCS3           (AT91C_PIO_PA5
                               ) //  SPI Peripheral Chip Select 3
 1604    00000000              #define AT91C_PIO_PA6             (1 <<  6) //
                                Pin Controlled by PA6
 1605    00000000              #define AT91C_PA6_TXD0            (AT91C_PIO_PA6
                               ) //  USART 0 Transmit Data
 1606    00000000              #define AT91C_PA6_PCK0            (AT91C_PIO_PA6
                               ) //  PMC Programmable Clock Output 0
 1607    00000000              #define AT91C_PIO_PA7             (1 <<  7) //
                                Pin Controlled by PA7
 1608    00000000              #define AT91C_PA7_RTS0            (AT91C_PIO_PA7
                               ) //  USART 0 Ready To Send
 1609    00000000              #define AT91C_PA7_PWM3            (AT91C_PIO_PA7
                               ) //  PWM Channel 3
 1610    00000000              #define AT91C_PIO_PA8             (1 <<  8) //
                                Pin Controlled by PA8
 1611    00000000              #define AT91C_PA8_CTS0            (AT91C_PIO_PA8
                               ) //  USART 0 Clear To Send
 1612    00000000              #define AT91C_PA8_ADTRG           (AT91C_PIO_PA8
                               ) //  ADC External Trigger
 1613    00000000              #define AT91C_PIO_PA9             (1 <<  9) //
                                Pin Controlled by PA9
 1614    00000000              #define AT91C_PA9_DRXD            (AT91C_PIO_PA9
                               ) //  DBGU Debug Receive Data
 1615    00000000              #define AT91C_PA9_NPCS1           (AT91C_PIO_PA9
                               ) //  SPI Peripheral Chip Select 1
 1616    00000000              
 1617    00000000              // *********************************************
                               ********************************
 1618    00000000              //               PERIPHERAL ID DEFINITIONS FOR
                                AT91SAM7S256
 1619    00000000              // *********************************************
                               ********************************
 1620    00000000              #define AT91C_ID_FIQ              ( 0) //
                                Advanced Interrupt Controller (FIQ)
 1621    00000000              #define AT91C_ID_SYS              ( 1) // System
                                Peripheral
 1622    00000000              #define AT91C_ID_PIOA             ( 2) //
                                Parallel IO Controller
 1623    00000000              #define AT91C_ID_3_Reserved       ( 3) //
                                Reserved
 1624    00000000              #define AT91C_ID_ADC              ( 4) //
                                Analog-to-Digital Converter
 1625    00000000              #define AT91C_ID_SPI              ( 5) // Serial
                                Peripheral Interface
 1626    00000000              #define AT91C_ID_US0              ( 6) // USART
                                0
 1627    00000000              #define AT91C_ID_US1              ( 7) // USART
                                1
 1628    00000000              #define AT91C_ID_SSC              ( 8) // Serial
                                Synchronous Controller
 1629    00000000              #define AT91C_ID_TWI              ( 9) //
                                Two-Wire Interface
 1630    00000000              #define AT91C_ID_PWMC             (10) // PWM
                                Controller
 1631    00000000              #define AT91C_ID_UDP              (11) // USB
                                Device Port
 1632    00000000              #define AT91C_ID_TC0              (12) // Timer
                                Counter 0
 1633    00000000              #define AT91C_ID_TC1              (13) // Timer
                                Counter 1
 1634    00000000              #define AT91C_ID_TC2              (14) // Timer
                                Counter 2
 1635    00000000              #define AT91C_ID_15_Reserved      (15) //
                                Reserved
 1636    00000000              #define AT91C_ID_16_Reserved      (16) //
                                Reserved
 1637    00000000              #define AT91C_ID_17_Reserved      (17) //
                                Reserved
 1638    00000000              #define AT91C_ID_18_Reserved      (18) //
                                Reserved
 1639    00000000              #define AT91C_ID_19_Reserved      (19) //
                                Reserved
 1640    00000000              #define AT91C_ID_20_Reserved      (20) //
                                Reserved
 1641    00000000              #define AT91C_ID_21_Reserved      (21) //
                                Reserved
 1642    00000000              #define AT91C_ID_22_Reserved      (22) //
                                Reserved
 1643    00000000              #define AT91C_ID_23_Reserved      (23) //
                                Reserved
 1644    00000000              #define AT91C_ID_24_Reserved      (24) //
                                Reserved
 1645    00000000              #define AT91C_ID_25_Reserved      (25) //
                                Reserved
 1646    00000000              #define AT91C_ID_26_Reserved      (26) //
                                Reserved
 1647    00000000              #define AT91C_ID_27_Reserved      (27) //
                                Reserved
 1648    00000000              #define AT91C_ID_28_Reserved      (28) //
                                Reserved
 1649    00000000              #define AT91C_ID_29_Reserved      (29) //
                                Reserved
 1650    00000000              #define AT91C_ID_IRQ0             (30) //
                                Advanced Interrupt Controller (IRQ0)
 1651    00000000              #define AT91C_ID_IRQ1             (31) //
                                Advanced Interrupt Controller (IRQ1)
 1652    00000000              #define AT91C_ALL_INT             (0xC0007FF7)
                                // ALL VALID INTERRUPTS
 1653    00000000              
 1654    00000000              // *********************************************
                               ********************************
 1655    00000000              //               BASE ADDRESS DEFINITIONS FOR
                                AT91SAM7S256
 1656    00000000              // *********************************************
                               ********************************
 1657    00000000              #define AT91C_BASE_SYS            (0xFFFFF000)
                                // (SYS) Base Address
 1658    00000000              #define AT91C_BASE_AIC            (0xFFFFF000)
                                // (AIC) Base Address
 1659    00000000              #define AT91C_BASE_PDC_DBGU       (0xFFFFF300)
                                // (PDC_DBGU) Base Address
 1660    00000000              #define AT91C_BASE_DBGU           (0xFFFFF200)
                                // (DBGU) Base Address
 1661    00000000              #define AT91C_BASE_PIOA           (0xFFFFF400)
                                // (PIOA) Base Address
 1662    00000000              #define AT91C_BASE_CKGR           (0xFFFFFC20)
                                // (CKGR) Base Address
 1663    00000000              #define AT91C_BASE_PMC            (0xFFFFFC00)
                                // (PMC) Base Address
 1664    00000000              #define AT91C_BASE_RSTC           (0xFFFFFD00)
                                // (RSTC) Base Address
 1665    00000000              #define AT91C_BASE_RTTC           (0xFFFFFD20)
                                // (RTTC) Base Address
 1666    00000000              #define AT91C_BASE_PITC           (0xFFFFFD30)
                                // (PITC) Base Address
 1667    00000000              #define AT91C_BASE_WDTC           (0xFFFFFD40)
                                // (WDTC) Base Address
 1668    00000000              #define AT91C_BASE_VREG           (0xFFFFFD60)
                                // (VREG) Base Address
 1669    00000000              #define AT91C_BASE_MC             (0xFFFFFF00)
                                // (MC) Base Address
 1670    00000000              #define AT91C_BASE_PDC_SPI        (0xFFFE0100)
                                // (PDC_SPI) Base Address
 1671    00000000              #define AT91C_BASE_SPI            (0xFFFE0000)
                                // (SPI) Base Address
 1672    00000000              #define AT91C_BASE_PDC_ADC        (0xFFFD8100)
                                // (PDC_ADC) Base Address
 1673    00000000              #define AT91C_BASE_ADC            (0xFFFD8000)
                                // (ADC) Base Address
 1674    00000000              #define AT91C_BASE_PDC_SSC        (0xFFFD4100)
                                // (PDC_SSC) Base Address
 1675    00000000              #define AT91C_BASE_SSC            (0xFFFD4000)
                                // (SSC) Base Address
 1676    00000000              #define AT91C_BASE_PDC_US1        (0xFFFC4100)
                                // (PDC_US1) Base Address
 1677    00000000              #define AT91C_BASE_US1            (0xFFFC4000)
                                // (US1) Base Address
 1678    00000000              #define AT91C_BASE_PDC_US0        (0xFFFC0100)
                                // (PDC_US0) Base Address
 1679    00000000              #define AT91C_BASE_US0            (0xFFFC0000)
                                // (US0) Base Address
 1680    00000000              #define AT91C_BASE_TWI            (0xFFFB8000)
                                // (TWI) Base Address
 1681    00000000              #define AT91C_BASE_TC0            (0xFFFA0000)
                                // (TC0) Base Address
 1682    00000000              #define AT91C_BASE_TC1            (0xFFFA0040)
                                // (TC1) Base Address
 1683    00000000              #define AT91C_BASE_TC2            (0xFFFA0080)
                                // (TC2) Base Address
 1684    00000000              #define AT91C_BASE_TCB            (0xFFFA0000)
                                // (TCB) Base Address
 1685    00000000              #define AT91C_BASE_PWMC_CH3       (0xFFFCC260)
                                // (PWMC_CH3) Base Address
 1686    00000000              #define AT91C_BASE_PWMC_CH2       (0xFFFCC240)
                                // (PWMC_CH2) Base Address
 1687    00000000              #define AT91C_BASE_PWMC_CH1       (0xFFFCC220)
                                // (PWMC_CH1) Base Address
 1688    00000000              #define AT91C_BASE_PWMC_CH0       (0xFFFCC200)
                                // (PWMC_CH0) Base Address
 1689    00000000              #define AT91C_BASE_PWMC           (0xFFFCC000)
                                // (PWMC) Base Address
 1690    00000000              #define AT91C_BASE_UDP            (0xFFFB0000)
                                // (UDP) Base Address
 1691    00000000              
 1692    00000000              // *********************************************
                               ********************************
 1693    00000000              //               MEMORY MAPPING DEFINITIONS FOR
                                AT91SAM7S256
 1694    00000000              // *********************************************
                               ********************************
 1695    00000000              // ISRAM
 1696    00000000              #define AT91C_ISRAM                   (0x0020000
                               0) // Internal SRAM base address
 1697    00000000              #define AT91C_ISRAM_SIZE                
                                (0x00010000) // Internal SRAM size in byte (64
                                Kbytes)
 1698    00000000              // IFLASH
 1699    00000000              #define AT91C_IFLASH                 (0x00100000
                               ) // Internal FLASH base address
 1700    00000000              #define AT91C_IFLASH_SIZE              
                                (0x00040000) // Internal FLASH size in byte
                                (256 Kbytes)
 1701    00000000              #define AT91C_IFLASH_PAGE_SIZE     (256) //
                                Internal FLASH Page Size: 256 bytes
 1702    00000000              #define AT91C_IFLASH_LOCK_REGION_SIZE    (16384)
                                // Internal FLASH Lock Region Size: 16
                                Kbytes
 1703    00000000              #define AT91C_IFLASH_NB_OF_PAGES         (1024)
                                // Internal FLASH Number of Pages: 1024
                                bytes
 1704    00000000              #define AT91C_IFLASH_NB_OF_LOCK_BITS     (16) //
                                Internal FLASH Number of Lock Bits: 16
                                bytes
 1705    00000000              
 1706    00000000              
   19    00000000              
   20    00000000              ;-----------------------------------------------
                               -------------------------------
   21    00000000              ;- Area Definition
   22    00000000              ;-----------------------------------------------
                               -------------------------------
   23    00000000              
   24    00000000              ;-----------------------------------------------
                               ----------------
   25    00000000              ; ?RESET
   26    00000000              ; Reset Vector.
   27    00000000              ; Normally, segment INTVEC is linked at address
                                0.
   28    00000000              ; For debugging purposes, INTVEC may be placed
                                at other
   29    00000000              ; addresses.
   30    00000000              ; A debugger that honors the entry point will
                                start the
   31    00000000              ; program in a normal way even if INTVEC is not
                                at address 0.
   32    00000000              ;-----------------------------------------------
                               --------------
   33    00000000              
   34    00000000                              PROGRAM ?RESET
   35    00000000                              RSEG    INTRAMSTART_REMAP
   36    00000000                              RSEG    INTRAMEND_REMAP
   37    00000000              
   38    00000000                              RSEG    ICODE:CODE:ROOT(2)
   39    00000000                              CODE32  ; Always ARM mode after
                                reset   
   40    00000000                              org     0       
   41    00000000              reset           
   42    00000000              ;-----------------------------------------------
                               -------------------------------
   43    00000000              ;- Exception vectors
   44    00000000              ;--------------------
   45    00000000              ;- These vectors can be read at address 0 or at
                                RAM address
   46    00000000              ;- They ABSOLUTELY requires to be in relative
                                addresssing mode in order to
   47    00000000              ;- guarantee a valid jump. For the moment, all
                                are just looping.
   48    00000000              ;- If an exception occurs before remap, this
                                would result in an infinite loop.
   49    00000000              ;- To ensure if a exeption occurs before start
                                application to infinite loop.
   50    00000000              ;-----------------------------------------------
                               -------------------------------
   51    00000000              
   52    00000000 0F0000EA                     B           InitReset          
  ; 0x00 Reset handler
   53    00000004              undefvec:
   54    00000004 FEFFFFEA                     B           undefvec           
  ; 0x04 Undefined Instruction
   55    00000008              swivec:
   56    00000008 FEFFFFEA                     B           swivec             
  ; 0x08 Software Interrupt
   57    0000000C              pabtvec:
   58    0000000C FEFFFFEA                     B           pabtvec            
  ; 0x0C Prefetch Abort
   59    00000010              dabtvec:
   60    00000010 FEFFFFEA                     B           dabtvec            
  ; 0x10 Data Abort
   61    00000014              rsvdvec:
   62    00000014 FEFFFFEA                     B           rsvdvec            
  ; 0x14 reserved
   63    00000018              irqvec:
   64    00000018 1C0000EA                     B           IRQ_Handler_Entry  
  ; 0x18 IRQ
   65    0000001C              fiqvec:                                        
                                ; 0x1c FIQ
   66    0000001C              ;-----------------------------------------------
                               -------------------------------
   67    0000001C              ;- Function             : FIQ_Handler_Entry
   68    0000001C              ;- Treatments           : FIQ Controller
                                Interrupt Handler.
   69    0000001C              ;- Called Functions     : AIC_FVR[interrupt]
   70    0000001C              ;-----------------------------------------------
                               -------------------------------
   71    0000001C              
   72    0000001C              FIQ_Handler_Entry:
   73    0000001C              
   74    0000001C              ;- Switch in SVC/User Mode to allow User Stack
                                access for C code
   75    0000001C              ; because the FIQ is not yet acknowledged
   76    0000001C              
   77    0000001C              ;- Save and r0 in FIQ_Register
   78    0000001C 0090A0E1                 mov         r9,r0
   79    00000020 040198E5                 ldr         r0 , [r8, #AIC_FVR]
   80    00000024 D3F021E3                 msr         CPSR_c,#I_BIT | F_BIT |
                                                               ARM_MODE_SVC
   81    00000028              ;- Save scratch/used registers and LR in User
                                Stack
   82    00000028 0E502DE9                 stmfd       sp!, { r1-r3, r12,
                                                           lr}
   83    0000002C              
   84    0000002C              ;- Branch to the routine pointed by the
                                AIC_FVR
   85    0000002C 0FE0A0E1                 mov         r14, pc
   86    00000030 10FF2FE1                 bx          r0
   87    00000034              
   88    00000034              ;- Restore scratch/used registers and LR from
                                User Stack
   89    00000034 0E50BDE8                 ldmia       sp!, { r1-r3, r12,
                                                           lr}
   90    00000038              
   91    00000038              ;- Leave Interrupts disabled and switch back in
                                FIQ mode
   92    00000038 D1F021E3                 msr         CPSR_c, #I_BIT | F_BIT |
                                                                ARM_MODE_FIQ
   93    0000003C              
   94    0000003C              ;- Restore the R0 ARM_MODE_SVC register
   95    0000003C 0900A0E1                 mov         r0,r9
   96    00000040              
   97    00000040              ;- Restore the Program Counter using the LR_fiq
                                directly in the PC
   98    00000040 04F05EE2                 subs        pc,lr,#4
   99    00000044              
  100    00000044              
  101    00000044              InitReset:
  102    00000044              ;-----------------------------------------------
                               -------------------------------
  103    00000044              ;- Low level Init (PMC, AIC, ? ....) by C
                                function AT91F_LowLevelInit
  104    00000044              ;-----------------------------------------------
                               -------------------------------
  105    00000000                              EXTERN   AT91F_LowLevelInit
  106    00000044              
  107    00000044              #define  __iramend      SFB(INTRAMEND_REMAP)
  108    00000044              
  109    00000044              ;- minumum C initialization
  110    00000044              ;- call  AT91F_LowLevelInit( void)
  111    00000044              
  112    00000044 A0D09FE5                 ldr     r13,=__iramend            ;
                                                        temporary stack in
                                                        internal RAM
  113    00000048              ;--Call Low level init function in ABSOLUTE
                                through the Interworking
  114    00000048 A0009FE5                 ldr     r0,=AT91F_LowLevelInit
  115    0000004C 0FE0A0E1                 mov     lr, pc
  116    00000050 10FF2FE1                 bx      r0  
  117    00000054                      
  118    00000054              ;-----------------------------------------------
                               -------------------------------
  119    00000054              ;- Stack Sizes Definition
  120    00000054              ;------------------------
  121    00000054              ;- Interrupt Stack requires 2 words x 8 priority
                                level x 4 bytes when using
  122    00000054              ;- the vectoring. This assume that the IRQ
                                management.
  123    00000054              ;- The Interrupt Stack must be adjusted
                                depending on the interrupt handlers.
  124    00000054              ;- Fast Interrupt not requires stack If in your
                                application it required you must
  125    00000054              ;- be definehere.
  126    00000054              ;- The System stack size is not defined and is
                                limited by the free internal
  127    00000054              ;- SRAM.
  128    00000054              ;-----------------------------------------------
                               -------------------------------
  129    00000054              
  130    00000054              ;-----------------------------------------------
                               -------------------------------
  131    00000054              ;- Top of Stack Definition
  132    00000054              ;-------------------------
  133    00000054              ;- Interrupt and Supervisor Stack are located at
                                the top of internal memory in
  134    00000054              ;- order to speed the exception handling context
                                saving and restoring.
  135    00000054              ;- ARM_MODE_SVC (Application, C) Stack is
                                located at the top of the external memory.
  136    00000054              ;-----------------------------------------------
                               -------------------------------
  137    00000054              
  138    00000060              IRQ_STACK_SIZE          EQU     (3*8*4)     ; 3
                                words per interrupt priority level
  139    00000054              
  140    00000011              ARM_MODE_FIQ            EQU     0x11
  141    00000012              ARM_MODE_IRQ            EQU     0x12
  142    00000013              ARM_MODE_SVC            EQU     0x13
  143    00000054              
  144    00000080              I_BIT                   EQU     0x80
  145    00000040              F_BIT                   EQU     0x40
  146    00000054              
  147    00000054              ;-----------------------------------------------
                               -------------------------------
  148    00000054              ;- Setup the stack for each mode
  149    00000054              ;-------------------------------
  150    00000054 90009FE5                     ldr     r0, =__iramend
  151    00000058              
  152    00000058              ;- Set up Fast Interrupt Mode and set FIQ Mode
                                Stack
  153    00000058 D1F021E3                     msr     CPSR_c, #ARM_MODE_FIQ |
                                                                I_BIT |
                                                                F_BIT
  154    0000005C              ;- Init the FIQ register
  155    0000005C 90809FE5                     ldr     r8, =AT91C_BASE_AIC
  156    00000060              
  157    00000060              ;- Set up Interrupt Mode and set IRQ Mode
                                Stack
  158    00000060 D2F021E3                     msr     CPSR_c, #ARM_MODE_IRQ |
                                                                I_BIT |
                                                                F_BIT
  159    00000064 00D0A0E1                     mov     r13, r0                 
                                                                ; Init stack
                                                             IRQ
  160    00000068 600040E2                     sub     r0, r0, #IRQ_STACK_SIZE
  161    0000006C              
  162    0000006C              ;- Enable interrupt & Set up Supervisor Mode and
                                set Supervisor Mode Stack
  163    0000006C 13F021E3                     msr     CPSR_c, #ARM_MODE_SVC
  164    00000070 00D0A0E1                     mov     r13, r0
  165    00000074              
  166    00000074              
  167    00000074              ;-----------------------------------------------
                               ----------------
  168    00000074              ; ?CSTARTUP
  169    00000074              ;-----------------------------------------------
                               ----------------
  170    00000000                              EXTERN  __segment_init
  171    00000000                              EXTERN  main
  172    00000074              ; Initialize segments.
  173    00000074              ; __segment_init is assumed to use
  174    00000074              ; instruction set and to be reachable by BL from
                                the ICODE segment
  175    00000074              ; (it is safest to link them in segment
                                ICODE).
  176    00000074 7C009FE5                     ldr     r0,=__segment_init
  177    00000078 0FE0A0E1                     mov     lr, pc
  178    0000007C 10FF2FE1                     bx      r0
  179    00000080              
  180    00000000                              PUBLIC  __main
  181    00000080              ?jump_to_main:
  182    00000080 74E09FE5                     ldr     lr,=?call_exit
  183    00000084 74009FE5                     ldr     r0,=main
  184    00000088              __main:
  185    00000088 10FF2FE1                     bx      r0
  186    0000008C              
  187    0000008C              ;-----------------------------------------------
                               -------------------------------
  188    0000008C              ;- Loop for ever
  189    0000008C              ;---------------
  190    0000008C              ;- End of application. Normally, never
                                occur.
  191    0000008C              ;- Could jump on Software Reset ( B 0x0
                                ).
  192    0000008C              ;-----------------------------------------------
                               -------------------------------
  193    0000008C              ?call_exit:
  194    0000008C              End
  195    0000008C FEFFFFEA                 b       End
  196    00000090              
  197    00000090              
  198    00000090              ;-----------------------------------------------
                               -------------------------------
  199    00000090              ;- Manage exception
  200    00000090              ;---------------
  201    00000090              ;- This module The exception must be ensure in
                                ARM mode
  202    00000090              ;-----------------------------------------------
                               -------------------------------
  203    00000090              ;-----------------------------------------------
                               -------------------------------
  204    00000090              ;- Function             : IRQ_Handler_Entry
  205    00000090              ;- Treatments           : IRQ Controller
                                Interrupt Handler.
  206    00000090              ;- Called Functions     : AIC_IVR[interrupt]
  207    00000090              ;-----------------------------------------------
                               -------------------------------
  208    00000090              IRQ_Handler_Entry:
  209    00000090              
  210    00000090              ;- Manage Exception Entry
  211    00000090              ;- Adjust and save LR_irq in IRQ stack
  212    00000090 04E04EE2                 sub         lr, lr, #4
  213    00000094 00402DE9                 stmfd       sp!, {lr}
  214    00000098              
  215    00000098              ;- Save SPSR need to be saved for nested
                                interrupt
  216    00000098 00E04FE1                 mrs         r14, SPSR
  217    0000009C 00402DE9                 stmfd       sp!, {r14}
  218    000000A0              
  219    000000A0              ;- Save and r0 in IRQ stack
  220    000000A0 01002DE9                 stmfd       sp!, {r0}
  221    000000A4              
  222    000000A4              ;- Write in the IVR to support Protect
                                Mode
  223    000000A4              ;- No effect in Normal Mode
  224    000000A4              ;- De-assert the NIRQ and clear the source in
                                Protect Mode
  225    000000A4 48E09FE5                 ldr         r14, =AT91C_BASE_AIC
  226    000000A8 00019EE5                 ldr         r0 , [r14, #AIC_IVR]
  227    000000AC 00E18EE5                 str         r14, [r14, #AIC_IVR]
  228    000000B0              
  229    000000B0              ;- Enable Interrupt and Switch in Supervisor
                                Mode
  230    000000B0 13F021E3                msr         CPSR_c, #ARM_MODE_SVC
  231    000000B4              
  232    000000B4              ;- Save scratch/used registers and LR in User
                                Stack
  233    000000B4 0E502DE9                 stmfd       sp!, { r1-r3, r12,
                                                           r14}
  234    000000B8              
  235    000000B8              ;- Branch to the routine pointed by the
                                AIC_IVR
  236    000000B8 0FE0A0E1                 mov         r14, pc
  237    000000BC 10FF2FE1                 bx          r0
  238    000000C0              
  239    000000C0              ;- Restore scratch/used registers and LR from
                                User Stack
  240    000000C0 0E50BDE8                 ldmia       sp!, { r1-r3, r12,
                                                           r14}
  241    000000C4              
  242    000000C4              ;- Disable Interrupt and switch back in IRQ
                                mode
  243    000000C4 92F021E3                 msr         CPSR_c, #I_BIT |
                                                                ARM_MODE_IRQ
  244    000000C8              
  245    000000C8              ;- Mark the End of Interrupt on the AIC
  246    000000C8 24E09FE5                 ldr         r14, =AT91C_BASE_AIC
  247    000000CC 30E18EE5                 str         r14, [r14, #AIC_EOICR]
  248    000000D0              
  249    000000D0              ;- Restore R0
  250    000000D0 0100BDE8                 ldmia       sp!, {r0}
  251    000000D4              
  252    000000D4              ;- Restore SPSR_irq and r0 from IRQ stack
  253    000000D4 0040BDE8                 ldmia       sp!, {r14}
  254    000000D8 0EF06FE1                 msr         SPSR_cxsf, r14
  255    000000DC              
  256    000000DC              ;- Restore adjusted  LR_irq from IRQ stack
                                directly in the PC
  257    000000DC 0080FDE8                 ldmia       sp!, {pc}^
  258    000000E0                      
  259    000000E0              ;-----------------------------------------------
                               ----------------
  260    000000E0              ; ?EXEPTION_VECTOR
  261    000000E0              ; This module is only linked if needed for
                                closing files.
  262    000000E0              ;-----------------------------------------------
                               ----------------
  263    00000000                              PUBLIC  AT91F_Default_FIQ_handle
 r
  264    00000000                              PUBLIC  AT91F_Default_IRQ_handle
 r
  265    00000000                              PUBLIC  AT91F_Spurious_handler
  266    000000E0              
  267    000000E0                              CODE32  ; Always ARM mode after
                                exeption        
  268    000000E0              
  269    000000E0              AT91F_Default_FIQ_handler
  270    000000E0 FEFFFFEA                 b     AT91F_Default_FIQ_handler
  271    000000E4              
  272    000000E4              AT91F_Default_IRQ_handler
  273    000000E4 FEFFFFEA                 b     AT91F_Default_IRQ_handler
  274    000000E8              
  275    000000E8              AT91F_Spurious_handler
  276    000000E8 FEFFFFEA                 b     AT91F_Spurious_handler
  277    000000EC              
  278    000000EC                      ENDMOD
  278.1  000000EC                       TABLE
  278.2  000000EC ........             Reference on line 112,150 
  278.3  000000F0 ........             Reference on line 114 
  278.4  000000F4 00F0FFFF             Reference on line 155,225,246 
  278.5  000000F8 ........             Reference on line 176 
  278.6  000000FC ........             Reference on line 182 
  278.7  00000100 ........             Reference on line 183 
  278    00000104                      ENDMOD
##############################
#          CRC:8135          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 260         #
##############################



##############################
#          CRC:8135          #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 260         #
##############################



